
// This is an automatic generated file, please do not edit
//#ifdef nvmcc_comp_v1
// nvmcc does not need this file
//#else

TDIDefault DIDefault[22];
TDODefault DODefault[20];
TAIDefault AIDefault[16];
TAODefault AODefault[6];
;
;
;
;
;
;
signed long RoundDiv(signed long a, signed long b);
unsigned char rotl8(unsigned char value, signed long shift);
unsigned short rotl16(unsigned short value, signed long shift);
signed long rotl32(signed long value, signed long shift);
unsigned char rotr8(unsigned char value, signed long shift);
unsigned short rotr16(unsigned short value, signed long shift);
signed long rotr32(signed long value, signed long shift);
struct Pointer: object  {
    signed long ptr;
};
struct TBitPointer: object  {
    signed long ptr;
    signed char bitoffset;
};
struct bit: signed_char  {
    signed char super;
    bit ll_primitivebit;
};
struct ArrayBasicType: object  {
};
struct Array: object  {
    void data;
    ArrayBasicType geti(signed long n);
};
struct String: object  {
    unsigned char Len;
    unsigned short MaxItems;
    unsigned char Txt[200];
    signed long isEmpty();
    unsigned char geti(signed long n);
    void Clear();
    void set(String cSource);
    void sum_set(String cSource);
    String SubStr(signed long iStart, signed long iLength);
    void AddSubStr(String cSource, signed long iStart, signed long iLength);
    void AddFormatNum(signed long n, signed char lpad, signed char iDec, signed char sgn);
    void AddFormatNumHex(signed long iNum, signed char iDig);
    void AddFormatNumBase(signed long iNum, signed char iDig, signed char cPad, signed char iBase);
    void AddFormat(String format, signed long n);
    void Format(String format, signed long n);
    signed long ToIntEx(signed long iStart, signed long iBase);
    signed long ToInt();
    signed long Equal(String s2);
    signed long NotEqual(String s2);
    signed long IndexOfChar(unsigned char c);
};
signed char ToChar(signed char n);
unsigned char ToByte(unsigned char n);
unsigned short ToWord(unsigned short n);
signed short ToShort(signed short n);
signed long sub(signed long n);
;
;
void SysCall(signed long FnCode);
signed long GetSysParam(signed long iIndex);
signed long SetSysParam(signed long iIndex, signed long iValue);
void CANsetNodeID(signed short iNodeID);
signed short CANgetNodeID();
signed long CANgetSpeed();
signed short CANgetUITarget();
void CANsetUITarget(signed long iDevice);
void MMIConnectToDevice(signed long iDevice);
signed long GetUILanguage();
void SetUILanguage(signed long iLang);
;
void OutputDebugString(String cMsg);
void OutputDebugNum(String cMsg, signed long iNum);
void SetWatchdog(unsigned short iTimeout);
void Reboot(signed char iRebootMode);
;
;
;
;
signed long min(signed long nV1, signed long nV2);
signed long max(signed long nV1, signed long nV2);
signed long abs(signed long nVal);
signed long between(signed long nVal, signed long nMin, signed long nMax);
signed long strcmp(String a, String b);
signed long strncmp(String a, String b, signed long len);
unsigned short CRC16(void a, signed long iSize, unsigned short StartCRC);
struct TSysDeviceInfo  {
    unsigned char StructVersion;
    signed long ProductCode;
    signed long SerialNumber;
    unsigned short CustomProdutCode;
    signed long BiosDate;
    unsigned char BiosVersion;
    unsigned short VendorID;
    unsigned short AppID;
    signed long AppDate;
    unsigned short AppMaxSize;
    unsigned short AppMaxStore;
    unsigned short AppMaxE2P_KB;
    unsigned short AppRamSize;
    unsigned char ioNumDI;
    unsigned char ioNumAI;
    unsigned char ioNumDO;
    unsigned char ioNumAO;
    unsigned char ioNumPWM;
    signed long AppMaxE2P();
    void GetInfo();
    unsigned short GetBiosVer();
    signed long isMCX08();
    signed long isMCX06();
    signed long isMMIGRS();
    void GetDeviceFamilyDescr(String Descr);
};
struct TSysDeviceInfo_v2  {
    unsigned char StructVersion;
    signed long ProductCode;
    signed long SerialNumber;
    unsigned short CustomProdutCode;
    signed long BiosDate;
    unsigned char BiosVersion;
    unsigned short VendorID;
    unsigned short AppID;
    signed long AppDate;
    unsigned short BiosVer;
    unsigned short BiosCode;
    signed long AppMaxSize;
    signed long AppMaxStore;
    signed long AppMaxE2P;
    signed long AppRamSize;
    signed long UploadAreaSize;
    unsigned short SupportedFunctions;
    unsigned char ioNumDI;
    unsigned char ioNumAI;
    unsigned char ioNumDO;
    unsigned char ioNumAO;
    void GetInfo();
    unsigned short GetBiosVer();
    signed long isMCX08();
    signed long isMCX06();
    signed long isMMIGRS();
    signed long isMMIMYK();
    signed long BiosSCode();
    void GetDeviceFamilyDescr(String Descr);
    signed long SupportFloat();
    signed long SupportMultitask();
};
struct TTimerSec: object  {
    signed long Sec;
    void set(TTimerSec b);
    void Start();
    void Clear();
    signed long isClear();
    signed long ElapsedSec();
    void SetTime(signed long iSec);
    signed long GetTime();
    void AddSec(signed long iSec);
    void Addms(signed long iMilliseconds);
    void EarlyStart(signed long iOffset);
};
struct TStoppableTimerSec: TTimerSec  {
    TTimerSec super;
    signed long ElapsedSec();
    signed long isPaused();
    void Pause();
    void Resume();
};
struct TTimer: TTimerSec  {
    TTimerSec super;
    unsigned short MilliSec;
    void set(TTimer b);
    TTimer sub(TTimer time2);
    void sub_set(TTimer time2);
    void Start();
    void Clear();
    signed long isClear();
    signed long CheckAndRestartTimer(signed long iCheck);
    signed long Elapsedms();
    signed long GetElapsedmsAndRestart();
    void Addms(signed long iMilliseconds);
    void EarlyStart(signed long iOffset);
};
struct TReverseTimer: TTimer  {
    TTimer super;
    void ReverseCountms(signed long iCountms);
    signed long Remainingms();
};
struct TSysInfo: object  {
    unsigned char SysInfoVersion;
    unsigned char LastVMError;
    signed long LastVMErrorPC;
    TTimer SysTime;
    signed long SysMaxLoopTime;
    signed long MaxStackSize;
    bit PersistentMemChanged;
    bit DisableDownload;
    void GetInfo();
    void SetInfo();
};
void Sleep(signed long iMillisec);
void Suspend(signed long iMillisec, signed long WakeUpEvents);
TSysInfo Sys;
signed long VERSION_BUILD_OPTIONS;
struct TComEvent: signed_long  {
    signed long super;
};
struct TComQueue  {
    unsigned char QueueHandle;
    unsigned short ObjectSize;
    unsigned short MaxBuffSize;
    signed long BufferPtr;
    unsigned char geti(signed long n);
    signed long Len();
    signed long MaxLen();
};
struct TCom: object  {
    unsigned char ComPort;
    unsigned short BytesTx;
    unsigned short BytesRx;
    unsigned short Errors;
    unsigned short OverrunErrors;
    TComQueue dummy_RxQueue;
    TComQueue dummy_TxQueue;
    TComQueue RxQueue();
    TComQueue TxQueue();
    signed long Init(signed long iSpeed, unsigned short iFlags);
    void InitComEx(signed char iComPort, unsigned char xBufferRx, signed long iRxSize, unsigned char xBufferTx, signed long iTxSize);
    signed long ReadLN(String line);
    signed long ReadB(void buff, signed long iSize);
    signed long WriteStr(String line);
    signed long WriteB(void buff, signed long iSize);
    signed long CheckAndClearEvent(signed long iEvCode);
    signed long GetInfo();
    signed long ClearBuffer();
    signed long SetSuspend(signed long iStatus);
    signed long SetRxTimeout(unsigned short iTimeout);
    void WriteStrNum(String cMsg, signed long iNum);
};
signed long RequestAndWaitVar_tmp;
struct TCanMessage: object  {
    unsigned short SrcNode;
    unsigned short DestNode;
    unsigned short Index;
    unsigned char SubIndex;
    signed long Value;
    void set(TCanMessage b);
};
struct TCANFrame  {
    signed long CobID;
    unsigned char Sz;
    unsigned char Data[8];
};
struct TCANopen: TCom  {
    TCom super;
    unsigned short NodeID;
    void InitCanObject();
    signed long CurrSpeed();
    signed short GetUITarget();
    signed long RequestAndWaitVar(unsigned short iNodeID, unsigned short iIndex, unsigned char iSubIndex, signed long iDefault, signed long Timeout);
    signed long RequestAndWaitVarSz(unsigned short iNodeID, unsigned short iIndex, unsigned char iSubIndex, signed char iSize, signed long iDefault, signed long Timeout);
    signed long SetExportTable(void ExportTbl, void ModbusObjectDictionary);
    signed long SendVar(unsigned short DestNode, unsigned short Index, unsigned char SubIndex, signed long Value, signed long iSize);
    void SendVarAndWait(unsigned short DestNode, unsigned short Index, unsigned char SubIndex, signed long Value);
    signed long SendMessage(unsigned short DestNode, unsigned short Index, unsigned char SubIndex, signed long Value, signed long iSize);
    signed long RequestVar(unsigned short iNodeID, unsigned short iIndex, unsigned char iSubIndex, signed long DestVar, signed long iSize);
    signed long SendVarConfirmed(unsigned short DestNode, unsigned short Index, unsigned char SubIndex, signed long Value, signed long iSize);
    signed long Run(signed long MaxCanMsgToProcess);
    signed long coReqOrWrite(unsigned short DestNode, unsigned short Index, unsigned char SubIndex, void Value, signed long iMaxSize, unsigned char iDir, unsigned char iConfirm);
    signed long SendFile(unsigned short DestNode, unsigned short Index, unsigned char SubIndex, signed long FileID);
    signed long coReqOrWriteMB(unsigned short DestNode, unsigned char MB2CANBaseIndex, unsigned short Index, signed long Value, signed long iMaxSize, unsigned char iDir, unsigned char iConfirm);
    signed long SendMBVar(unsigned short DestNode, unsigned short Index, signed long Value);
    signed long RequestAndWaitMBVar(unsigned short iNodeID, unsigned short iIndex, signed long iDefault);
    signed long RequestMBVar(unsigned short iNodeID, unsigned short iIndex, signed long DestVar);
    signed long SendFrame(TCANFrame msg);
    signed long ReadFrame(TCANFrame msg);
    void SetNetworkSpeed(signed long iNewSpeed);
    void SetRemoteNodeID(signed long iNewNodeID, unsigned short iTargetNodeID);
    ;
    signed long SendMBVarF(unsigned short DestNode, unsigned short Index, float Value);
    float RequestAndWaitMBVarF(unsigned short iNodeID, unsigned short iIndex, float iDefault);
    signed long IsNodeActive(signed long iNode);
    signed long IsNodeActiveN(signed long iNode);
    signed long IsNodeIDAlreadyInUse();
};
struct TCan: TCANopen  {
    TCANopen super;
    TCanMessage msg;
    signed long CanOpenError;
    signed char WriteOnBroadcast;
    signed long Run(signed long MaxCanMsgToProcess);
    signed long WriteReq(void ModbusTable, unsigned short iModbusAddress, unsigned short iCount, unsigned char RxPtr);
    signed long SendFrameExt(signed long CobID, unsigned char FrameType, unsigned char Length, void obj);
    signed char SendSDO(signed long CobID, unsigned char Flags, unsigned short Index, unsigned char SubIndex, signed long Value);
    signed long ReadFrameEx(TCANFrame frame, TCanMessage msg);
    signed long ReadMessage(TCanMessage msg);
};
struct TE2p: object  {
    signed char e2pfn(signed char Fn, signed long iAddr, unsigned char iVal, signed long iSize);
    signed long Save(signed long iAddr, void a, signed long iSize);
    signed long Load(signed long iAddr, void a, signed long iSize);
    void ClearAllEEprom(unsigned char iDefault);
};
struct TIO: object  {
    signed long LastError;
    bit DOStatus[21];
    signed char AIType[17];
    signed char AOType[7];
    unsigned short AOStatus[7];
    bit LedStatus[8];
    void Init();
    void Run();
    signed long GetIO(signed char iType, signed char iIndex, signed char iTransform);
    signed long SetIO(signed char iFn, signed char iIndex, signed char iType, signed long iValue, signed long iAdv);
    signed long GetDI(signed char iIndex);
    signed long GetNDI(signed char iIndex);
    signed long GetDO(signed char iIndex);
    signed long SetDO(signed char iIndex, signed long iValue);
    signed long SetLed(signed char iIndex, signed long iValue);
    signed long GetLed(signed char iIndex);
    signed long SetBuzzer(signed long iOn);
    signed long GetBuzzer();
    signed long GetAI(signed char iIndex);
    signed long SetAO(signed char iIndex, signed long iValue);
    signed long SetAIType(signed char iIndex, signed char iType, signed long iParam);
    signed long GetAIType(signed char iIndex);
    signed long SetAOType(signed char iIndex, signed char iType, signed long iParam, signed long iAdv);
    signed long GetAOType(signed char iIndex);
    signed long GetAO(signed char iIndex);
    signed long SetDIType(signed char iIndex, signed char iType, signed long iParam);
    signed long GetRawAI(signed char iIndex);
    signed long SetRawAO(signed char iIndex, signed long iValue);
    signed long GetRawAO(signed char iIndex);
    void Clear();
};
struct TFilteredAI: TIO  {
    TIO super;
    signed long AIFilter;
    signed long AIBuffer[16];
    signed char AIFilterOverflow[16];
    void Init();
    void SetAIFilter(signed long iFilter);
    signed long GetFilteredAI(signed char iIndex);
    signed long GetFilteredAIEx(signed char iIndex, signed long iFilter);
    signed long GetCurrAI(signed char iIndex);
    signed long SetAIType(signed char iIndex, signed char iType, signed long iParam);
    signed long SetAOType(signed char iIndex, signed char iType, signed long iParam, signed long iAdv);
};
struct TFilteredIO: TFilteredAI  {
    TFilteredAI super;
    bit ReverseDI[22];
    bit DisableOUT;
    signed long GetDI(signed char iIndex);
    void SetDIPolarity(signed char iIndex, signed char iCloseValue);
    signed long GetDIPolarity(signed char iIndex);
    signed long SetDO(signed char iIndex, signed long iValue);
    signed long SetAO(signed char iIndex, signed long iValue);
};
signed short StdInConv[8];
struct TConvTableItem  {
    signed long Rad;
    signed short m;
    signed short q;
};
struct TConvTable  {
    TConvTableItem ConvTable[18];
};
TConvTable CNTCConvTable;
signed long TranslateVal(signed long nVal, TConvTable xConvTable);
;
void SetBuzzerVolume(signed long iVolume);
void SetBuzzer(signed long iOn, signed long iOnTime);
signed long GetBuzzer();
signed long isLocalApp();
Array  {
    signed char ArrayOf;
} ytab[2];
struct TDateTime: TTimerSec  {
    TTimerSec super;
    signed char Seconds;
    signed char Minutes;
    signed char Hours;
    signed char Day;
    signed char Month;
    signed short Year;
    signed char WDay();
    void ExplodeTime();
    void Explode();
    void Implode();
    signed long GetRTC();
    void SetRTC(signed long iTime);
    signed char LoadRTC();
    void SaveRTC();
    void AddFormatDate(String s, String format);
    signed long DayOfYear();
    signed long isLeapYear();
};
signed long DateSerial(signed short iYear, signed char iMonth, signed char iDay, signed char iHours, signed char iMinutes, signed char iSeconds);
struct TRTCEmulator: TDateTime  {
    TDateTime super;
    signed long TimeOffset;
    unsigned short CurrDay;
    TTimerSec tmr;
    signed char RTCError();
    signed char LoadRTC();
    void SaveRTC();
    void SetTime(signed long iSec);
    void Explode();
    void UpdateRTC();
};
signed long Saturation(signed long nVal, signed long nMin, signed long nMax);
signed long LimitRange(signed long nVal, signed long nMin, signed long nMax);
signed long AddFromStringTable(String str, signed long iIndex);
signed long LoadFromStringTable(String str, signed long iIndex);
String StringTable_tmps;
String GetStringFromStringTable(signed long iStringID);
signed long CreateImage(String cName);
unsigned short GetRemoteBiosVer(unsigned short iNodeID);
void DisplayDeviceInfoOnCom(TCom com);
unsigned char Com1BufferR[128];
unsigned char Com1BufferW[128];
unsigned char CanBufferR[128];
unsigned char CanBufferW[128];
bit RunningIntoSimulation;
TE2p e2p;
;
struct TStdParams: object  {
    unsigned short VendorID;
    unsigned short AppID;
    unsigned short VersionID;
    signed long VerifyParams();
    void ValidateParams();
    signed long InitParams();
    void LoadDefaultParams();
};
struct TStdParamsCompile: object  {
    signed long ParVersion;
    signed long VerifyParams();
    void ValidateParams();
    signed long InitParams();
    void LoadDefaultParams();
};
struct TStdAlgo: object  {
};
TMyAlgo Algo;
void Main();
struct TMyAlgo  {
    void Init();
    void MainLoop();
};
void nvmlib_Startup();
struct TModbus: TCom  {
    TCom super;
    unsigned char Ident;
    unsigned short Timeout;
    unsigned short FnCode;
    unsigned short StartAddress;
    unsigned short Count;
    unsigned char ReceivedPacket;
    bit IllegalFunctionError;
    bit IllegalDataAddress;
    bit IllegalDataValue;
    bit OutputBufferOverflow;
    bit CRCError;
    void CheckPacket();
    void ProcessPacket();
    void Run();
    signed short Value();
    void StartAnswer();
    void EndAnswer();
    void SetExceptionCode(signed long iCode);
    void WriteObjString(String iObjString, unsigned char iObjID);
    void WriteValue(signed long iValue, signed long iLen);
    void WriteErrorCode(signed long iCode);
    signed long AnswerReq(void ModbusTable, unsigned short iModbusAddress, unsigned short iCount, signed long RxPtr);
    signed long WriteReq(void ModbusTable, unsigned short iModbusAddress, unsigned short iCount, unsigned char RxPtr);
    unsigned short CRCModbus(void a, signed long iSize);
    signed long Init(signed long iSpeed, unsigned short iFlags);
};
TCANopen Can;
TModbus Com1;
struct nvm_thread_function_prototype  {
    signed long fnaddr;
    signed long ReqStack;
};
signed long nvm_thread_create(nvm_thread_function_prototype fnThreadFn, signed long iParam);
struct nvm_thread_method_prototype  {
    signed long fnaddr;
    signed long ReqStack;
    signed long Subject;
};
signed long nvm_thread_createM(nvm_thread_method_prototype fnThreadFn);
struct TMutex  {
    signed char LockStatus;
    signed long Lock(signed long iWaitms);
    signed long Unlock();
};
signed long SetEvent(signed long EventMask);
signed long CheckEvent(signed long EventMask);
signed long CheckAndClearEvent(signed long EventMask);
signed long sysSetEvent(signed long EventMask);
void stdalgo_ModbusThread(signed long Param);
void Algo_Init();
void Algo_MainLoop();
String SpeedToText[10];
signed long CheckIsNodeActive(signed long iNode);
void ResetHeartbeat();
signed long IsNodeActive(signed long iNode);
struct TNetworkHeartbeatStatus  {
    signed long status[4];
    signed long GetStatus();
    signed long IsNodeActive(signed long iNode);
    signed long FindDuplicatedNodeID();
    signed long CountActiveNodes();
    signed long ScanForActiveDeviceOnNetwork(signed long MinID, signed long MaxID);
};
struct TRemoteDeviceInfo  {
    unsigned short NodeID;
    signed long ProductVendorID;
    signed long ProductCode;
    signed long SerialNumber;
    signed long BiosDate;
    unsigned short BiosVer;
    unsigned short BiosCode;
    signed long GetInfo(signed long iRemoteNodeID);
    unsigned short GetBiosVer();
    void GetBiosVerStr(String Ver);
    void GetDeviceFamilyDescr(String Descr);
};
void SetRemoteNodeIDFromSN(signed long iNewNodeID, signed long iVendorID, signed long iProductCode, signed long iRevNumber, signed long iSerialNumber);
signed long FindP2PDevice();
void DrawFormSetCanSpeed();
void DrawFormSetRemoteNodeID(unsigned short iTargetNodeID);
void DrawFormSetNodeID();
void DrawFormActiveNodes_old();
void DrawFormActiveNodes(signed char ShowInactiveLines, signed char CheckDuplicatedNodeID);
void DrawFormNodeDetails(signed long iNodeID);
struct TCANbusLoad  {
    signed long TotalTx;
    signed long TotalRx;
    signed short BusLoad;
    unsigned short LastBytesTx;
    unsigned short LastBytesRx;
    TTimer tmr;
    void Run();
};
signed long IsNodeRestarted(signed long iNode);
void DrawFormActiveAndRestartedNodes(signed char ShowInactiveLines);
struct TDisplay: object  {
    signed char DisplayType;
    unsigned char AuxInfoOffset;
    signed short Width;
    signed short Height;
    unsigned char colText;
    unsigned char colBack;
    signed char Font;
    signed char Reserved;
    signed char FontW;
    signed char FontH;
    void Init();
    signed long isLed();
    void SetFont(signed char iFont);
    signed char GetFont();
    signed long GetBrightness();
    void SetBrightness(signed long iBrightness);
    signed long GetContrast();
    void SetContrast(signed long iContrast);
    signed long GetNegative();
    void SetNegative(signed long iNegative);
    void SetDrawMode(signed long iMode);
    void GetImageSize(signed long iImageID, signed long w, signed long h);
    void DrawFillRect(signed long x, signed long y, signed long w, signed long h);
    void ClearArea(signed long x, signed long y, signed long w, signed long h);
    void DrawLine(signed long x, signed long y, signed long w, signed long h);
    void DrawLineXY(signed long x1, signed long y1, signed long x2, signed long y2);
    void DrawCircle(signed long x, signed long y, signed long w);
    void DrawEllipse(signed long x, signed long y, signed long w, signed long h);
    void DrawRect(signed long x, signed long y, signed long w, signed long h);
    void DrawText(signed long x, signed long y, String cText);
    ;
    void DrawImage(signed long x, signed long y, signed long iImageID);
    void DrawCustomImage(signed long x, signed long y, signed long iImageID);
    void UpdateDisplay();
    void ClearDisplay();
    void SetColor(unsigned char iText, unsigned char iBack);
    void DrawTextCR(signed long iCol, signed long iRow, String cText);
    void DrawImageCR(signed long iCol, signed long iRow, signed long iImageID);
    void DrawTextCenter(signed long iRow, String cText);
    signed long GetStrDisplayLen(String cText);
    void DrawMultilineTextCR(signed long iCol, signed long iRow, String cText, signed char cLineLength);
    void DrawMultilineText(signed long x, signed long y, String cText, signed char cLineLength);
    void DrawValue(signed long x, signed long y, String cLabel, signed long iValue, signed char iDigit, signed char iDec);
    void DrawValueAndUM(signed long x, signed long y, String cLabel, signed long iValue, signed char iDigit, signed char iDec, String cPostfix);
    void DrawValueCR(signed long iCol, signed long iRow, String cLabel, signed long iValue, signed char iDigit, signed char iDec);
    void DrawValueAndUMCR(signed long iCol, signed long iRow, String cLabel, signed long iValue, signed char iDigit, signed char iDec, String cPostfix);
    void DrawImageOnOff(signed long x, signed long y, signed long iImageID, signed long iOnOff);
    void DrawImageOnOffCR(signed long iCol, signed long iRow, signed long iImageID, signed long iOnOff);
    signed long HaveDisplay();
};
struct TKeyboard: object  {
    signed long Key;
    signed long ActiveKey;
    signed long ReleasedKey;
    unsigned short ActiveTime;
    unsigned char Rep;
    signed long LastRep;
    unsigned short FirstDelay;
    unsigned short LastDelay;
    unsigned short MultiDelay;
    unsigned short MultiDelayW;
    void SetRepDelay(signed short iFirstDelay, signed short iLastDelay);
    void Clear();
    void Init();
    signed long kbdGetKey(signed long Key, unsigned short Time, unsigned char Repetition);
    void GetKey();
    void SetKbdLed(signed long iLedStatus);
    signed long HaveLRKeys();
};
struct TScreen: TDisplay  {
    TDisplay super;
    signed long SetParam(signed long iIndex, signed long iValue);
    signed long GetParam(signed long iIndex);
    void DrawMask(signed long iMaskID);
};
struct TEditKbd: TKeyboard  {
    TKeyboard super;
    signed long Val;
    signed long Min;
    signed long Max;
    signed long Delta;
    void AdjustMinMax();
    signed long EditParam();
};
struct TDisplayLed: TDisplay  {
    TDisplay super;
    String DigA;
    String DigB;
    bit MinusA_On;
    bit MinusA_Disable;
    bit MinusA_BlinkL;
    bit MinusA_BlinkH;
    bit DecA1_On;
    bit DecA1_Disable;
    bit DecA1_BlinkL;
    bit DecA1_BlinkH;
    bit DegC_On;
    bit DegC_Disable;
    bit DegC_BlinkL;
    bit DegC_BlinkH;
    bit DegF_On;
    bit DegF_Disable;
    bit DegF_BlinkL;
    bit DegF_BlinkH;
    bit DecB2_On;
    bit DecB2_Disable;
    bit DecB2_BlinkL;
    bit DecB2_BlinkH;
    bit DecB1_On;
    bit DecB1_Disable;
    bit DecB1_BlinkL;
    bit DecB1_BlinkH;
    bit ClockB_On;
    bit ClockB_Disable;
    bit ClockB_BlinkL;
    bit ClockB_BlinkH;
    bit Alarm_On;
    bit Alarm_Disable;
    bit Alarm_BlinkL;
    bit Alarm_BlinkH;
    bit Service_On;
    bit Service_Disable;
    bit Service_BlinkL;
    bit Service_BlinkH;
    bit Comp1_On;
    bit Comp1_Disable;
    bit Comp1_BlinkL;
    bit Comp1_BlinkH;
    bit Comp2_On;
    bit Comp2_Disable;
    bit Comp2_BlinkL;
    bit Comp2_BlinkH;
    bit Comp3_On;
    bit Comp3_Disable;
    bit Comp3_BlinkL;
    bit Comp3_BlinkH;
    bit Comp4_On;
    bit Comp4_Disable;
    bit Comp4_BlinkL;
    bit Comp4_BlinkH;
    bit Pump_On;
    bit Pump_Disable;
    bit Pump_BlinkL;
    bit Pump_BlinkH;
    bit Fan_On;
    bit Fan_Disable;
    bit Fan_BlinkL;
    bit Fan_BlinkH;
    bit Res_On;
    bit Res_Disable;
    bit Res_BlinkL;
    bit Res_BlinkH;
    bit Def_On;
    bit Def_Disable;
    bit Def_BlinkL;
    bit Def_BlinkH;
    bit Bar_On;
    bit Bar_Disable;
    bit Bar_BlinkL;
    bit Bar_BlinkH;
    bit Perc_On;
    bit Perc_Disable;
    bit Perc_BlinkL;
    bit Perc_BlinkH;
    bit Econ_On;
    bit Econ_Disable;
    bit Econ_BlinkL;
    bit Econ_BlinkH;
    bit Clock_On;
    bit Clock_Disable;
    bit Clock_BlinkL;
    bit Clock_BlinkH;
    bit Cold_On;
    bit Cold_Disable;
    bit Cold_BlinkL;
    bit Cold_BlinkH;
    bit Hot_On;
    bit Hot_Disable;
    bit Hot_BlinkL;
    bit Hot_BlinkH;
    bit Valve_On;
    bit Valve_Disable;
    bit Valve_BlinkL;
    bit Valve_BlinkH;
    bit BlinkValA;
    bit BlinkValB;
    void Init();
    void SetValX(String DigA, signed long iVal, signed char iMinus, signed char iDecMode);
    void SetValA(signed long iVal, signed char iDecMode);
    void SetValB(signed long iVal, signed char iDecMode);
    void SetUM(signed char iUM);
    signed long SetLed(signed long iIndex, signed long iVal, signed long iBlink);
    void SetTimeB(signed long iTime, signed char iShowSeconds);
    void SetTimeB_12h(signed long iTime, signed char iShowSeconds);
    void UpdateDisplay();
    void ClearDisplay();
    void ClearDisplayLED();
    void ClearDigA();
    void ClearDigB();
    void DrawLedDisplay();
    signed char LedSegmentsToChar(signed long Segments);
    void AdjustLCX();
};
signed char MeasurementUnit2Led[5];
void DrawPercRectangle(signed short x, signed short y, signed short w, signed short h, signed long Val);
void DrawPercRectangleVert(signed short x, signed short y, signed short w, signed short h, signed long Val);
void DrawMaskInfo();
void DrawFormVMInfo();
struct TRotateText  {
    TTimer tmrNext;
    signed short CurrIndex;
    void Reset(signed long RotLen);
    void RotateText(String cDest, String cMsg);
    void RotateText2(String cDest, String cDest2, String cMsg);
    void RotateThisText(String cMsg);
    void RotateThisText_C(String cMsg, signed long RotLen);
};
TDisplayLed dsp;
signed short RICommandCAN;
struct TAlarmConfig  {
    String Code;
    unsigned char ResetID;
    unsigned char ResetTime;
    unsigned short StartupDelayID;
    unsigned short DelayID;
    bit StandbyActive;
    bit SetAlarmR;
    bit SetWarningR;
    bit VReset;
    bit VStartupDelay;
    bit VDelay;
    signed char ComprStatus;
    signed char PumpStatus;
    signed char FanStatus;
    signed char HeaterStatus;
    unsigned short DescrID;
    signed long Reset();
    signed long StartupDelay();
    signed long Delay();
};
struct TAlarmStatus  {
    signed char AlarmActive;
    signed char AutoReset;
    TTimerSec AlarmStart;
    TTimerSec Alarm1stStart;
};
struct TAlarmsManager  {
    TAlarmStatus AlarmsStatus[17];
    bit PackedAlarmsStatus[32];
    bit BuzzerReq;
    bit AlarmR;
    bit WarningR;
    TTimerSec AlarmRTimer;
    TTimerSec BuzzerTimer;
    unsigned short ActiveAlarms;
    unsigned short ActiveWarnings;
    unsigned short NackAlarms;
    void Init();
    void Mute();
    void ResetAlarms(signed long iOnlyInactiveAlarms);
    void ClearAlarm(signed long iIndex);
    void SetAlarmCondition(signed long iIndex, signed long iCondition, signed char iDevActive, signed long iStartElapsedTime);
    signed long isAlarm(signed long iIndex);
    signed long isNackAlarm(signed long iIndex);
    void Run();
};
void alr_HandleAlarmChange(signed long iIndex, signed long iStatus);
struct TAlarmsManager4Chiller: TAlarmsManager  {
    TAlarmsManager super;
    void SetAlarm(signed long iIndex, signed long iCondition, signed char iNoStartupDelay, signed long StartTimer);
};
TAlarmConfig AlarmsConfig[17];
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
signed long menu_CheckIsAvailableParam(signed long iCondition);
TParamsField ParamField[13];
TMask MaskParams[16];
TUnit UnitTab[10];
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
signed long DIValue;
signed long DOValue;
signed short AIValue[16];
signed short AOValue[6];
struct TDIDefault  {
    unsigned char VDIPolarity;
    unsigned char IndexVDI;
};
unsigned char IndexVDI[22];
signed long VDIPolarity;
bit VDIValue[3];
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
struct TDIManager  {
    void Init();
    void LoadDIDefault();
    void ResetVDI();
    void Run();
};
struct TDODefault  {
    unsigned char VDOPolarity;
    unsigned char IndexVDO;
};
unsigned char IndexVDO[20];
signed long VDOPolarity;
bit VDOValue[4];
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
struct TDOManager  {
    void Init();
    void LoadDODefault();
    void Run(unsigned char EnableOUT);
};
struct TAIDefault  {
    unsigned char IndexAIType;
    unsigned char IndexVAI;
    signed short IndexVAIMIN;
    signed short IndexVAIMAX;
    signed short PercentVAI;
    unsigned char ErrorOnVAI;
};
unsigned char IndexAIType[16];
unsigned char IndexVAI[16];
signed short IndexVAIMIN[16];
signed short IndexVAIMAX[16];
signed short PercentVAI[16];
unsigned char ErrorOnVAI[16];
signed short IndexVAICAL[16];
signed short VAIValue[2];
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
struct TAIManager  {
    bit AIError[16];
    bit AIFError[2];
    void Init();
    void LoadAIDefault();
    void Run();
    void AIConfigLoad();
    void SetTypeAI(signed char AINumber, unsigned char Type);
    signed long GetAIValue(signed char I);
};
struct TAITypeLimit  {
    unsigned char Limit;
};
TAITypeLimit AITypeLimit[10];
struct TAODefault  {
    unsigned char IndexAOType;
    unsigned char IndexVAO;
};
unsigned char IndexAOType[6];
unsigned char IndexVAO[6];
signed short VAOValue[1];
;
;
;
;
;
;
;
;
;
;
;
;
struct TAOManager  {
    void Init();
    void LoadAODefault();
    void Run(unsigned char EnableOUT);
    void AOConfigLoad();
    void SetTypeAO(signed char AONumber, unsigned char Type);
};
TConfigurableIO ConfigurableIO;
TDIManager DIMng;
TDOManager DOMng;
TAIManager AIMng;
TAOManager AOMng;
struct TConfigurableIO  {
    TTimerSec ReconfiguredIOTimer;
    unsigned char EnableOUT;
    void Init();
    void LoadDefault();
    void ResetValues();
    void ReloadConfig();
    void Run();
};
struct TIOConfig  {
    signed char Reserved[4];
    signed char LastUsed[4];
    void Reset();
    signed char FindNextAvailableIN(String cIODescr, signed char iType, signed char iNum);
    signed char FindNextAvailableOUT(String cIODescr, signed char iType, signed char iNum);
};
void SetStagesToVDO(signed long iStageOn, signed long iNStages, signed long iStartDO, signed long iStartAlr);
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
struct TParamsField  {
    unsigned short VarPtr;
    String Code;
    unsigned short DescrID;
    signed short Min;
    signed short Max;
    signed short Default;
    unsigned char MUnit;
    bit Dec1;
    bit Dec2;
    bit RW;
    bit VMin;
    bit VMax;
    bit Mask;
    unsigned char Level;
    signed char Visibility;
    signed char Dec();
};
struct TMask  {
    unsigned short DescrID;
};
struct TUnit  {
    String Unit;
};
struct TMenuGroups  {
    String Code;
    unsigned short DescrID;
    unsigned char AccessLevel;
    unsigned short ActiveCode;
    signed short Start;
    signed short Stop;
};
struct TUserInterface  {
    signed long CurrFormID;
    bit NewForm;
    TTimerSec tmrInactive;
    unsigned short InactivityTimeout;
    signed long FormHistory[8];
    signed char FormHistoryUsed;
    void Init();
    void Run();
    void ShowForm(signed long iNewForm);
    void ShowMainFormAndResetHistory();
    void ShowFormAndKeepHistory(signed long iNewForm);
    void PrevForm();
};
struct TMenuInterface: TUserInterface  {
    TUserInterface super;
    signed short CacheArray[32];
    signed char CacheArrayUsed;
    signed short ActiveItem;
    signed char StartItem;
    signed char MenuHistory[8];
    unsigned char AccessLevel;
    void DrawMenu(signed short iRoot, signed short iStart, signed short iEnd);
    void ShowMenu(signed long iMenuID);
    signed char isMenuAvailable(signed long iIndex);
};
struct TParamForm  {
    signed short ActiveItem;
    bit RedrawScreen;
    bit EditMode;
    bit UnitMode;
    void DrawParam(signed short iStart, signed short iEnd);
    signed long ScanAvailableItem(signed char iMoveDir, signed short iStart, signed short iEnd);
};
void CheckBiosVer(signed long ReqBiosDate);
struct TCANVarValMng  {
    void Init();
    signed long UITargetID();
    signed long Get(signed long Index);
    signed long Set(signed long Index, signed long Value);
};
struct TCANVarValMng_v2  {
    signed char UITargetID;
    void Init();
    void SetUITarget(signed long iNode);
    signed long GetUITarget();
    signed long Get(signed long Index);
    signed long Set(signed long Index, signed long Value);
    float GetF(signed long Index);
    void SetF(signed long Index, float Value);
};
struct TCANVarValMngMB  {
    signed char UITargetID;
    void Init();
    void SetUITarget(signed long iNode);
    signed long GetUITarget();
    signed long Get(signed long Index);
    signed long Set(signed long Index, signed long Value);
    float GetF(signed long Index);
    void SetF(signed long Index, float Value);
};
struct TMaxLoopForm  {
    signed long LastLoopTime;
    TTimer tmrLoop;
    signed long MaxLoopTime;
    void Init();
    void Run();
    void Reset();
    void UpdateTimer();
    void StartTimer();
    void StopTimer();
};
struct TSimpleUI  {
    unsigned char CurrFormID;
    bit NewForm;
    void Init();
    void Run();
    void ShowForm(signed long iNewForm);
    void PrevForm();
};
void DrawFormSwVer();
signed long SelectMenuList(signed char iRow, signed char iNumRows, signed long TotalItems, signed long ActiveItem);
void DrawFormRTC(signed char iAllowEdit);
signed short FormRTC_Limits[12];
String FormRTC_WeekDays[7];
;
signed long GetRemoteRTC();
TDateTime RTC;
signed long RTC_NewTime;
;
;
void RTC_Run();
struct TRemoteRTC: TRTCEmulator  {
    TRTCEmulator super;
    TTimerSec LastUpdate;
    void Init();
    void RemoteUpdate();
};
struct TValve  {
    bit O_DValve;
    signed short O_AValve;
    bit O_PValve[2];
    unsigned short I_ValvePeriod;
    unsigned char I_Sensitivity;
    unsigned char I_ForceTime;
    unsigned char I_Range;
    signed long O_ActPos;
    TTimer timer;
    TTimer force_timer[2];
    unsigned short time;
    unsigned short loop_time;
    signed short pos;
    signed short req;
    signed short tmpavalve;
    bit force;
    bit startup;
    void Run(signed long I_Req, unsigned char I_Open, unsigned char I_Close);
    void Init();
    void Reset();
};
signed char HP_Vac_D;
signed char HP_VAC_D;
signed char HP_BOOST_D;
signed short Circuit_Protection;
signed short P_Circ_Man_Set;
signed short Circ_Power;
signed short DHW_Compr_Power;
signed short Sun_Power;
signed short DHW_Resistor_Power;
signed long HP_Mode_Time;
TTimerSec Timer_HP_Mode;
struct TSetpointRHP: TSetpointDZ  {
    TSetpointDZ super;
    signed char PowerStage;
    signed short CHS_Probe;
    signed short CHS_Set;
    signed short CHS_PowerReq;
    signed short SetActivation;
    signed short SetDeactivation;
    signed short CompressorNumber;
    signed short MinTemp;
    signed short MaxTemp;
    signed short Heating_Hysteresys;
    signed short Cooling_Hysteresys;
    signed long Swov_time_EN_C2;
    signed long Swov_time_EN_STH;
    signed long Swov_time_DIS_C2;
    signed long Swov_time_DIS_C1;
    signed long EN_time_STH;
    signed short EN_temp_STH;
    signed char HeatingRequest;
    signed char DHWRequest;
    signed char CircuitNeedPower;
    TTimerSec SwithoverTimer_EN_C2;
    TTimerSec SwithoverTimer_EN_STH;
    TTimerSec SwithoverTimer_DIS_C2;
    TTimerSec SwithoverTimer_DIS_C1;
    TTimerSec STHEnablingTimer;
    bit PowerStageInit;
    bit EnableSTH;
    signed char StatusSTH;
    void init();
    void LoadParameters();
    void Run();
    void STHEnablingCondition();
    void ResetActivationTimer();
    void ResetDeactivationTimer();
    signed char PowerStageSelection(signed long CurrentTemp);
    signed short PowerCalc(signed char PowerStage, signed long CurrentTemp, signed short Out);
    signed short HandleRHP_STH(signed char STH_EN);
    signed long RequiredPowerRHP(signed long CurrentTemp);
};
struct TRoomCircuit  {
    TValve Valve;
    signed short RoomType;
    signed short ID;
    signed char Probe_Type;
    signed short MMI_Probe_Sel;
    signed short Set_Max;
    signed short CTOut;
    signed short RoomSet;
    signed short RoomPermanentSet;
    signed short RoomProbe;
    signed short RoomDiff;
    signed short RoomPowReq;
    signed char SetMode;
    signed char Set_Type;
    signed char Crono_Req_Set_Type;
    signed char Circ_Man_Set;
    signed char CircType;
    signed short CircuitTempStart;
    signed short CircuitTempEnd;
    signed short ExtTempStart;
    signed short ExtTempEnd;
    signed short P_Shift;
    signed short CircuitSet;
    signed short CircuitProbe;
    signed short CircuitDiff;
    signed short CircuitPowReq;
    signed short Set_S_Comf;
    signed short Set_S_Eco;
    signed short Set_W_Comf;
    signed short Set_W_Eco;
    signed short Set_W_Eco_Comp;
    signed short Set_Protection;
    signed short RST_T_1;
    signed short RST_T_2;
    signed char Valve_Type;
    signed char ValveStatus;
    signed short ValvePower;
    signed char PumpStatus;
    signed char SysPumpStatus;
    signed short MaxTemp;
    signed char Enable;
    signed char RoomRequest;
    signed short C_Eco_Offset;
    signed short C_P_Shift;
    bit FixSet;
    void Init();
    signed short SelectRoomProbe();
    signed short SelectCircuitProbe();
    signed char CronoSelection();
    signed short SelectRoomSet(signed short PreviousSet);
    signed short SelectCircuitSet(signed short Tout);
    void LoadParameters();
    signed short RisingReducedSetpoint(signed short Tout);
    signed short RoomPowerCalc();
    signed short CalcCircuitPower(signed char RoomRequest);
    void Run();
    void DHWOutputHandler();
};
signed long DHW_Dis_LastStart;
signed char Dis_Status;
signed char DHW_Dis_StoreTime;
struct TDHWgen  {
    TStageControl TankManager;
    TTimerSec MaxTimeDHW;
    TTimerSec EnableTimeChillerHP;
    signed short Probe;
    signed short Set;
    signed short DHW_PowReq;
    signed short DHW_MaxTime;
    signed short HP_RestoreTime;
    signed char CompressorNumber;
    signed char Enable;
    signed char Probe_Type;
    signed char Resistor_Enable;
    signed short Set_Max;
    signed short Set_Comf;
    signed short Set_Eco;
    signed short Crono_Req_Set_Type;
    signed short DHW_Man_Set;
    signed short Set_Hysteresys;
    signed short Set_Protection;
    signed short Set_HP_MaxTemp;
    signed short ExtTemp_2CompEn;
    signed short DelayPumpOff;
    signed char DHW_Status;
    signed char DHW_HP_Request;
    signed char DHW_Set_Type;
    signed char DHW_Resistor_Out;
    signed char DHW_HeatingPumpOFFRequest;
    signed char DHW_Pump;
    signed short Dis_Set;
    signed long Dis_Time;
    signed long Dis_MaxTime;
    signed long Dis_Period;
    signed long Dis_StartTime;
    signed char Dis_SetpointReach;
    TTimerSec Dis_RunTimer;
    void Init();
    void ResetEEpromValue();
    signed char CronoSelection();
    signed short SelectDHWProbe();
    signed short SelectSet(signed short PreviousSet);
    void LoadParameters();
    void CheckDisinfection(signed short iSet, signed short iProbe);
    void Run();
    void AssignDHWStatus(signed char DHW_Status_TMP);
    void CalcCHSPower();
    void DHWCheckTimer(signed char DHW_Status_TMP);
    void DHWOutputHandler(signed char DHW_Status_TMP);
};
void SplitPowOnOuptut(signed long iDOStartIndex, signed long iMaxOutput, signed long ReqPow);
signed long LinearProp(signed long x, signed long min, signed long max);
signed long PropOutput(signed long CurrentValue, signed long Setp, signed long Diff);
signed long Compensate(signed long Text, signed long TStart, signed long TEnd, signed long CompensMax);
struct TSetpoint  {
    signed long Setp;
    signed short Diff;
    signed long RequiredPower(signed long CurrentValue);
};
struct TSetpointN: TSetpoint  {
    TSetpoint super;
    signed short Neutral;
    signed long PropAcc;
    void Clear();
    signed long RequiredPower(signed long CurrentValue);
};
struct TSetpointPI: TSetpointN  {
    TSetpointN super;
    signed long TIntegr;
    signed long IerrAcc;
    TTimerSec ErrorTime;
    void Clear();
    signed long RequiredPowerPI(signed long CurrentValue);
    signed long GetIerr();
};
struct TSetpointDZ: TSetpointPI  {
    TSetpointPI super;
    signed short DiffOff;
    signed long MinOnDelay;
    signed long MaxOnDelay;
    signed long MinOffDelay;
    signed long MaxOffDelay;
    signed char NStages;
    signed char Zone;
    signed char StageOn;
    void Clear();
    signed long RequiredPowerDZ(signed long CurrentValue);
};
struct TToggle  {
    bit CurrStatus;
    signed long SetStatus(signed long i);
    signed long GetStatus();
};
struct TToggleTimer: TToggle  {
    TToggle super;
    TTimerSec tmr;
    void Init();
    signed long SetStatus(signed long i);
    signed long ElapsedSec();
    signed long ElapsedONSec();
    signed long ElapsedOFFSec();
};
signed long CalcStageOn(signed long ReqPow, signed long StageOn, signed long NStages, signed char RoundCalc);
struct TStageControl  {
    signed char NStages;
    signed char StageOn;
    void SetStageOn(signed long ReqPow);
    signed long SetStagesToDO(signed long iStartDO);
    signed long CurrentOutputPower();
};
struct TStageControlWithDisabled: TStageControl  {
    TStageControl super;
    bit Disabled[8];
    signed long SetStagesToDO(signed long iStartDO);
    signed long CurrentOutputPower();
};
struct TSimpleInverter  {
    signed long VMin;
    signed long VMax;
    signed long TMinOn;
    signed long TMinOff;
    signed long TSpike;
    bit WaitingOff;
    bit WaitingOn;
    signed long Out;
    TTimerSec LastTurnOnTime;
    TTimerSec LastTurnOffTime;
    signed long isOn();
    void ProducePower(signed long ReqPow);
};
struct TInverter  {
    signed long VMin;
    signed long VMax;
    signed long TMinOn;
    signed long TSpike;
    signed long Setp;
    signed long Diff;
    signed long CutOffDiff;
    signed long CutOffHyst;
    TTimerSec LastTurnOnTime;
    signed long Out;
    signed long Status;
    signed long isOn();
    void ProducePowerTemp(signed long Temp);
    void ProducePower(signed long ReqPow);
};
struct TFanManager: TStageControlWithDisabled  {
    TStageControlWithDisabled super;
    signed char Mode;
    signed long ProducePower(signed long ReqPow, signed long ComprOn);
};
struct TCompressor  {
    bit Disabled;
    bit WaitingPump;
    bit WaitingTmin2on;
    bit WaitingTmin2off;
    bit WaitingTminOFF;
    bit WaitingTminON;
    bit WaitingTmin2onC;
    bit WaitingTDelayP;
    bit OvldAlarm;
    signed char Status;
    signed long WorkingSeconds;
    signed long TempWorkingSec;
    TTimerSec LastOn;
    TTimerSec LastOnP;
    TTimerSec LastOff;
    signed long WaitingOn();
    signed long WaitingOff();
    signed long WorkingHours();
    void ClearWaitingFlags();
    signed long isOn();
};
struct TComprMngParams  {
    signed char NComp;
    signed char NPar;
    signed char OnMode;
    signed char OffMode;
    signed char CStartMode;
    signed char PWSDelay;
    signed char Rotation;
    bit SmartPow;
    signed short Tmin2on;
    signed short Tmin2off;
    signed short TminOFF;
    signed short TminON;
    signed long TmaxDH;
    signed short Tmin2onC;
    signed short TDelayP;
};
struct TComprManager: TStageControl  {
    TStageControl super;
    TComprMngParams CnfParams;
    signed long Out;
    signed char NextComp;
    bit WaitingPump;
    TCompressor Comp[2];
    signed char ChangePar;
    TTimerSec LastComprTurnOn;
    TTimerSec LastComprTurnOff;
    void CompProducePower(TCompressor Comp, signed long MaxPar);
    void TurnOffDisabledCompr();
    void TurnOffCompr(TCompressor Comp);
    void TurnOffAllCompr();
    void DistributePowToOnCompressors();
    signed long WaitingOn();
    void CompOnCpppCppp();
    void CompOnCCp1p2p3p1p2p3();
    void CompOnCCp1p1p2p2p3p3();
    void CompOffpppCpppC();
    void CompOffppppppCC();
    signed long GetNextOnComp(signed long CurrComp);
    signed long GetNextOffComp(signed long CurrComp);
    void UpdateProduction(signed long ReqPow, signed char RoundCalc);
    void ProducePower(signed long ReqPow, signed char RoundCalc);
    signed long SetComprToDO(signed long iStartDO, signed long iParNC);
};
struct TPump: TCompressor  {
    TCompressor super;
    THourCounter WorkingTime;
};
struct TEvapPump  {
    signed char NStages;
    signed char Mode;
    signed char Rot;
    signed short TOff;
    signed short TOnComp;
    signed char Rotation;
    signed short TPulseOff;
    signed short TPulseOn;
    signed long HourLimitRot;
    signed char FlowAlarmCnt;
    signed long Out;
    bit sw;
    bit burst;
    TTimerSec FirstPumpTurnOn;
    TTimerSec LastPumpTurnOn;
    TTimerSec LastPumpTurnOff;
    TPump Pumps[2];
    signed char StageOn;
    signed char CurrPump;
    bit WaitingOff;
    signed char isOn();
    signed long isOnPump(signed long iIndex);
    signed long AllowComp();
    void SwitchPump();
    void TurnOff();
    void ProducePowerPump(signed long ReqPow, signed long SysOn, signed long ComprOn);
};
struct TTwinPump  {
    signed char NStages;
    signed char Mode;
    signed char Rot;
    signed short TOff;
    signed short TOnComp;
    signed char Rotation;
    signed short TPulseOff;
    signed short TPulseOn;
    signed long HourLimitRot;
    signed char FlowAlarmCnt;
    bit burst;
    TTimerSec FirstPumpTurnOn;
    TTimerSec LastPumpTurnOn;
    TTimerSec LastPumpTurnOff;
    TPump Pumps[2];
    signed char StageOn;
    signed char CurrPump;
    bit WaitingOff;
    signed char isOn();
    signed long isOnPump(signed long iIndex);
    signed long AllowComp();
    void SwitchPump();
    void TurnOff(signed char Abort);
    void ProducePowerPump(signed char ReqPow, signed char SysOn, signed long LastComprTurnedOff);
};
struct THourCounter  {
    signed long Sec;
    TTimerSec LastCheck;
    void Load(signed long CurrWorkingSec);
    void Reset();
    signed long WorkingHours();
    void SetStatus(signed long iOn);
};
signed long TranslateDegCtoDegF(signed long iDegC, signed char iRelative);
signed long TranslateDegFtoDegC(signed long iDegF, signed char iRelative);
signed long TranslateBarToPsi(signed long iBar);
signed long TranslatePsiToBar(signed long iPsi);
struct TRampOut  {
    signed short Out;
    TTimer t;
    void Init();
    void Run();
    signed long GetOutPow(signed long iPow, signed short iVarTime, signed short iVarMax);
};
struct TRampOutWithParams: TRampOut  {
    TRampOut super;
    signed short ReqPow;
    signed short VarMax;
    signed short VarTime;
    void SetOutPow(signed long iPow);
    void SetMaxVar(signed short iVarTime, signed short iVarMax);
    void Run();
};
struct TTwinPump_v2  {
    signed char NStages;
    signed char Rotation;
    signed short HourLimitRot;
    signed long TPulseOff;
    signed long TPulseOn;
    bit PumpAlarm[2];
    TTimerSec FirstPumpTurnOn;
    TTimerSec LastPumpTurnOn;
    TTimerSec LastPumpTurnOff;
    bit Burst;
    signed char StageOn;
    signed char CurrPump;
    THourCounter Counter[2];
    void Init();
    signed long LoadWorkingSeconds(signed long iIndex, signed long iWorkingSeconds);
    signed long GetWorkingSeconds(signed long iIndex);
    signed char isOn();
    signed long isPumpOn(signed long iIndex);
    void SetPumpAlarm(signed long iIndex, signed long iStatus);
    void SetPumpsAlarm(signed long iStatus1, signed long iStatus2);
    signed char SwitchPump();
    signed char SetPump(signed long iStatus);
};
struct TTwinPumpWithFlowSwitch: TTwinPump_v2  {
    TTwinPump_v2 super;
    signed short TStartupFlowDelay;
    signed short TSteadyFlowDelay;
    signed short TResetFlowDelay;
    bit FlowAlarm;
    bit PumpFlowAlr[2];
    TToggleTimer FlowSwitch;
    void Init();
    signed long PumpWarning();
    void SetFlowSwitchStatus(signed long iFlowStatus);
    signed char SetPump(signed long iStatus);
};
struct TDefrostIn  {
    bit ComprOn;
    signed short ComprPowReq;
    signed short CoilPress;
    signed short CoilTemp;
    signed short SetTempStart;
    signed short SetTempEnd;
    signed short SetPressStart;
    signed short SetPressEnd;
    signed short DefForcSetStart;
    signed short FanOnly;
    signed char FanMode;
    unsigned short DefVerifyTime;
    unsigned short DefMinTime;
    unsigned short DefMaxTime;
    unsigned short DefMinDelay;
    unsigned short DefTimeAfterDef;
    unsigned short DefForcVerTime;
    signed char DefType;
    signed char ProbeType;
    signed short Text;
};
struct TDefrostOut  {
    signed char DefrostStatus;
    signed short ComprPowReq;
    signed short FanPowReq;
    bit LastDefOffByTime;
};
struct TDefrost  {
    TDefrostOut out;
    TDefrostIn in;
    TStoppableTimerSec DefActivationTimer;
    TStoppableTimerSec ForcedDefActivationTimer;
    TTimerSec DefOnTimer;
    TTimerSec LastDefrost;
    void SetStatus(signed long iStatus);
    void StartDefrost();
    void StopDefrost();
    signed char CheckDefrostEndCondition();
    signed char isMainDefrost();
    void Init();
    void Run();
};
void FindSetpoint();
signed long CalcUnitFaktor(signed short ID);
signed short CalcPower(signed long Treg);
TTimerSec PumpWaitPreRun;
struct TCoil_Pump: TTwinPumpWithFlowSwitch  {
    TTwinPumpWithFlowSwitch super;
    TTimerSec PumpWaitininfOFF;
    signed short TOff;
    signed short TOnComp;
    signed char Mode;
    signed char Status;
    signed char ID;
    bit WaitingOff;
    signed long AllowComp();
    void Run(signed char PumpRequest, signed char OnOff, signed char ForcedOFF, signed short Sts_Flow, signed long ID_Flow_Alr, signed long Pump1_Alr, signed long Pump2_Alr, signed long SysTime);
};
void SetSinkOut();
void SetSourceOut();
struct TIntCoil  {
    TTimerSec LastTurnON;
    TTimerSec FrostStartHPDelay;
    signed short Al_IceSet;
    signed short Al_IceDif;
    signed short Prot_Return_Run_Set;
    signed short Prot_External_Run_Set;
    signed short StopHP_time;
    signed short Sink_Prot_StartDelay;
    signed short Sink_Prot_StartHP_time;
    bit IceAlr;
    bit ReturnActivation;
    bit ExternalActivation;
    bit FrostStartHP;
    void CheckIceProtection(signed long ToutCoil, signed long TinCoil, signed long Text);
};
struct TInternalCoilManager  {
    void Run(signed long SysOn);
};
struct float: object  {
    signed long lval;
    void set(float n);
    float sum(float n);
    float mul(float n);
    float sub(float n);
    float div(float n);
    float neg();
    signed long NotEqual(float n);
    signed long Equal(float n);
    signed long LessThan(float n);
    signed long LessOrEqual(float n);
    signed long GreaterOrEqual(float n);
    signed long GreaterThan(float n);
};
float IntegerToFloat(float Val, signed long Exp);
signed long FloatToIntegerTrunc(float Val);
signed long FloatToIntegerRound(float Val);
float logf(float Val);
float expf(float Val);
signed long is_NaN(float Val);
float fabsf(float x);
float powf(float x, float y);
float powf_i(float x, signed long y);
float log10f(float Val);
float sqrtf(float x);
float fmodf(float x, float y);
float hypotf(float x, float y);
float floorf(float x);
float ceilf(float x);
void SplitFloat(float f, signed long Val, signed char Exp, signed long ReqDecimals);
void AddFormatNumFloat(String s, float n, signed char lpad, signed char iDec, signed char sgn);
signed long FloatPack(float n);
float FloatUnpack(signed long n);
float minf(float V1, float V2);
float maxf(float V1, float V2);
float Limitf(float nMin, float nVal, float nMax);
float cosf(float x);
float sinf(float x);
float sinhf(float x);
struct p1  {
    float p1a;
    float p1b;
};
signed short TestFloat();
struct RFGTABEL  {
    float flRfgFac_a1;
    float flRfgFac_a2;
    float flRfgFac_a3;
};
RFGTABEL RfgTabel[38];
signed long AbsPressureToTemperature(signed long Pressure, signed char GasIndex);
float AbsPressureToTemperatureF(float Pressure, signed char GasIndex);
struct TSetpointHeatCool  {
    signed short Setp;
    signed short Diff;
    signed char Dir;
    signed long RequiredPower(signed short CurrentValue);
};
struct TCoilInput  {
    signed short PressP0;
    signed short TempTE;
    signed short DefTemp;
};
struct TStdCoil  {
    TCoilInput input;
    TSetpointHeatCool Setpn;
    TFanManager FanManager;
    TSimpleInverter FanInv;
    TTimerSec LastTurnON;
    TTimerSec SourcePrevTime;
    signed short Al_IceSet;
    signed short Al_IceDif;
    signed short Prot_Return_Run_Set;
    signed short Prot_External_Run_Set;
    signed short StopHP_time;
    signed short CoilPresP0;
    signed short CoilTempTE;
    signed short FanReq;
    signed short Cond_SetTextFault;
    signed short Cond_DifTextFault;
    signed char CoilMode;
    signed char Ext_ProtStatus;
    bit CondPumpWaitingOff;
    bit Ext_IceAlr;
    bit FanOffWithComprOFF;
    bit Conf_CondAirorWater;
    bit Enable_Fan_Inverter;
    void CheckIceProtection(signed long ToutCoil, signed long TinCoil, signed long Text);
};
struct TcoilPar  {
    signed short CoilSetpoint;
    signed short Reg_Diff;
    float MinimumReference;
    float MaximumReference;
    signed short MinimumTm;
    signed char ReferenceType;
    signed char Mode;
    signed char AmbientSensorError;
    signed short DimensionedTm;
    signed short ActualCompressorLoad;
    float AmbientTemperature;
    signed short ExternalOffset;
    signed char GasType;
    signed char CondOneFanCircuit;
    signed char Cond_ProbeFault;
    signed char Type;
    signed char PressType;
};
struct TExternalCoilManager  {
    TcoilPar par;
    signed char SetCoilStatus(signed char iStatus);
    void Run(signed long SysOn, signed short Text);
    void CalcCoilTempTE(signed short PcoilX, signed short TcoilX, signed char GasIndex, signed char iConversionType);
    signed short CalcCoilPower(signed char Coil_ID, signed char ComprOnDelayed, signed short Text, signed char GasIndex);
    void CheckProbeError(signed char Coil_ID, signed short ReqPow, signed char ComprOnDelayed, signed short Text);
    void SetCoilProbe(signed long Text);
    void SetCoilSet();
    void CalculateReference(signed short shTarget, TcoilPar par, signed char iCoilMode);
};
signed long ComprSecondsCounter[2];
signed long SinkPumpSecCounter[2];
signed long SourcePumpSecCounter[2];
struct THVACCircuit  {
    bit AlarmC;
    bit AlarmP;
    bit AlarmF;
    bit AlarmH;
    bit IceAlr;
    bit ComprOn;
    unsigned char PumpDownStageOnNumber;
    unsigned char PumpDownStageOnNumberPrevious;
    unsigned char PumpDownIndexLastComprOn;
    bit PumpDownComprInverterAlm;
    bit PumpDownProcedureOn;
    bit PumpDownWaitingOn;
    TDefrost Def;
    TStdCoil ExtCoil;
};
struct TComprInverter: TSimpleInverter  {
    TSimpleInverter super;
    bit WaitingPump;
    void ProducePower(signed long ReqPow);
    signed char isWaitingPump();
    signed char isWaitingOffTime();
    signed char isWaitingOnTime();
    signed char isWaitingOn();
};
struct TChiller  {
    TSetpointRHP Setpoint;
    TComprManager ComprManager;
    TComprInverter ComprInv;
    TCoil_Pump SinkPump;
    TCoil_Pump SourcePump;
    TFanManager EvapFanManager;
    TExternalCoilManager ExternalCoilManager;
    TInternalCoilManager InternalCoilManager;
    TIntCoil IntCoil[1];
    THVACCircuit Circuit[1];
    TStageControl BoilerManager;
    signed char DI_OnOff;
    bit Restarted;
    bit NeedRestart;
    signed long CurrSetpoint;
    signed short PowReq;
    signed short PowReqMonitor;
    signed short PowActual;
    bit CompressorOffRequest;
    bit CompressorOffRequestFromBoiler;
    bit EvapHeatersOn;
    bit SysOnOffStatus;
    signed char OnOff;
    signed short Text;
    signed long Treg;
    signed short IntegralErrorPI;
    signed char GlobalAlarmC;
    signed char GlobalAlarmP;
    signed char GlobalAlarmF;
    signed char GlobalAlarmH;
    signed short ExtCoilPressP0[1];
    signed short IntCoilPressP0[1];
    signed short ExtCoilTempTE[1];
    signed short IntCoilTempTE[1];
    signed short ExtCoilDefTemp[1];
    signed short IntCoilDefTemp[1];
    signed short CircuitHP[1];
    signed short CircuitLP[1];
    signed short CircuitDisTemp[1];
    signed short CircuitSucTemp[1];
    signed short ConfigError;
    signed char NumOfInternalCoil;
    signed char CircNumPerEvap;
    signed char NumOfCircuits;
    signed char NCompCirc;
    TTimerSec SaveWH;
    TTimer SysOnTimer;
    bit HeatingMode;
    signed char HeatingMode_Reverse_Pos;
    bit DefrostOn;
    signed char HeatVAIidx;
    TToggle CoolHeatDIStatus;
    TToggle DefrostDIStatus;
    signed char DefrostActiveCircuitIndex;
    TTimerSec ChangeoverTimer;
    TTimerSec TimerPumpDownStart[1];
    TTimerSec TimerPumpDownStop[1];
    signed long SysTime;
    signed long SecOfDay;
    signed short sta;
    signed short ComprStatus[2];
    signed short ComprStatusWaitingTime;
    signed char UIComprGlobalStatus;
    signed char UIHeater;
    signed char UIPump;
    signed char UISFan;
    signed char UISPump;
    signed char UISysOnOffStatus;
    signed char UIAlarmNotification;
    signed char UICommandReq;
    signed char UIDefrostOn;
    signed char HPModeRequestByKbd;
    signed short ReqHourCounterSaving;
    void Init();
    void ReloadDefault(signed char cmd);
    signed long PowOut();
    void Run();
    signed long TurnOn();
    void TurnOff(signed char Abort);
    void SetStatus(signed long iNewStatus);
    void Restart();
    void DoRestart();
    void SaveWorkingHours();
    void HandleSinkPump(signed char SysOn, signed long PowReq, signed char iDHW_HP_Request, signed char iHeatingMode);
    void HandleSourcePump(signed char SysOn, signed long PowReq);
    void ChillerLoop();
    void PumpDownProcedure(unsigned char StepOfTwo, signed long PowerRequest);
    void HandleCompressors(signed long PowReq);
    void CalcBestConfig(signed long PowReq, signed long FixedCapacity);
    void SetComprToVDO(signed long iStartDO, signed long iStartDOUnloader, signed long iMaxComp, signed long iMaxPar);
    void ProcessHeatPump();
    void ProcessDefrost(signed short PowReq, signed short Text);
    void SetDefrostProbe(signed char ci, signed char DefrostStatus, signed short Text);
    void ManualDefrost(signed char DefrostCmd);
    signed char GetIndexDigitalOutput(signed short LogicDO);
    void ForceCompressorOff();
};
struct TChillerModbus: TModbus  {
    TModbus super;
    void Run();
};
signed short betaVersionStoredCode;
signed long ParVersion;
signed short ParamVal[21];
void InitializeParamVal();
struct TParams: TStdParams  {
    TStdParams super;
};
TParams Params;
struct TFilteredAI_SHC: TFilteredAI  {
    TFilteredAI super;
    float CalculateTemperatureDegGrad(float valOhm, float A_CONSTANT, float B_CONSTANT, float C_CONSTANT);
    signed long GetAI(signed char iIndex);
    signed long SetAIType(signed char iIndex, signed char iType, signed long iParam);
    signed long GetAIType(signed char iIndex);
};
TFilteredAI_SHC IO;
TChiller ch;
TAlarmsManager4Chiller AlarmsManager;
TSysDeviceInfo DevInfo;
signed char CheckForAO(signed char index);
signed char CheckForAI(signed char index);
TTimer baseTimer;
signed short BinSearch(unsigned short chiave);
signed short CheckParamUpdating(unsigned short paramAddress, unsigned char hiByte, unsigned char loByte);
struct TChillerApp  {
    void Init();
    void Run();
};
signed short LastStaBit;
signed short LastComprStatusBit;
signed short LastComprID;
signed short SetRollingTestStatus(signed short iTimeLeft, signed char ibitNum, signed short IStatus, signed long iTime, signed short iSetTime, signed char ComprID);
signed short VersionGetAppID(unsigned short nodeID);
;
;
;
;
;
;
;
;
;
;
TChillerApp MyChiller;
TDHWgen DHWgen;
TRoomCircuit RoomCircuit[3];
signed short RHPStatus;
signed short Prev_Circ_Man_Set;
signed short Prev_DHW_Man_Set;
signed short MainLoopValue;
void App_Init();
void App_Run();

//#endif
