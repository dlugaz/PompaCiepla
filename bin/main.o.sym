<?xml version="1.0" encoding="utf-8" ?>
<project>
  <bininfo>
    <binfile>main.o</binfile>
    <VendorID>0</VendorID>
    <AppID>0</AppID>
    <CRC>54762</CRC>
    <PackageVer>1542104701</PackageVer>
    <TotalPersistentSize>805</TotalPersistentSize>
    <TotalStackSize>1820</TotalStackSize>
    <TotalGRamSize>1476</TotalGRamSize>
    <StackSize>344</StackSize>
    <TotalCodeSize>18479</TotalCodeSize>
    <TotalConstSize>4270</TotalConstSize>
    <CompilerDate>20181112</CompilerDate>
    <CompileID>0</CompileID>
    <Const start="0x00005034" len="0x10AE" />
    <ModbusTable start="0x00005728" len="0x09B4" />
    <ExportTable start="0x000060DC" len="0x0006" />
  </bininfo>
  <namespace name="MyPackage" address="44" ByteSize="1476" CodeAddress="44" CodeSize="117" SrcFile="main.c">
    <class name="object" address="161" ByteSize="0" CodeAddress="161" CodeSize="12" SrcFile="sysdef.lib">
      <meth name="GetByteRef" pathname=".MyPackage.object.GetByteRef" ByteSize="4" SrcFile="sysdef.lib">
        <type typename="unsigned_char" reference="1">
        </type>
        <pvar name="RetVal" address="0" ByteSize="4">
          <type typename="unsigned_char"></type>
        </pvar>
        <pvar name="this" address="4" ByteSize="4">
          <type typename="object" reference="1"></type>
        </pvar>
        <pvar name="i" ByteSize="4">
          <type typename="signed_long">
          </type>
        </pvar>
      </meth>
    </class>
    <class name="unsigned_char" address="161" ByteSize="1" CodeAddress="161" CodeSize="12" SrcFile="sysdef.lib">
      <ivar name="super" address="0" ByteSize="1">
        <type typename="signed_char">
        </type>
      </ivar>
    </class>
    <class name="unsigned_short" address="161" ByteSize="2" CodeAddress="161" CodeSize="12" SrcFile="sysdef.lib">
      <ivar name="super" address="0" ByteSize="2">
        <type typename="signed_short">
        </type>
      </ivar>
      <meth name="shr" address="161" pathname=".MyPackage.unsigned_short.shr" MaxStackCallSz="48" MaxInternalStackSz="48" MaxInternalStackCallPos="sysdef.lib:123" ByteSize="4" CodeAddress="161" CodeSize="33" SrcFile="sysdef.lib">
        <type typename="signed_long">
        </type>
        <pvar name="RetVal" address="0" ByteSize="4">
          <type typename="signed_long"></type>
        </pvar>
        <pvar name="this" address="4" ByteSize="4">
          <type typename="unsigned_short" reference="1"></type>
        </pvar>
        <pvar name="n" address="8" ByteSize="4">
          <type typename="signed_long">
          </type>
        </pvar>
      </meth>
      <meth name="PostIncr" address="194" pathname=".MyPackage.unsigned_short.PostIncr" MaxStackCallSz="28" MaxInternalStackSz="28" MaxInternalStackCallPos="sysdef.lib:128" ByteSize="4" CodeAddress="194" CodeSize="29" SrcFile="sysdef.lib">
        <type typename="signed_long">
        </type>
        <pvar name="RetVal" address="0" ByteSize="4">
          <type typename="signed_long"></type>
        </pvar>
        <pvar name="this" address="4" ByteSize="4">
          <type typename="unsigned_short" reference="1"></type>
        </pvar>
      </meth>
    </class>
    <class name="signed_char" address="223" ByteSize="1" CodeAddress="223" CodeSize="12" SrcFile="sysdef.lib">
      <ivar name="super" address="0" ByteSize="0">
        <type typename="object">
        </type>
      </ivar>
      <ivar name="ll_primitivebyte" address="0" ByteSize="1">
        <type typename="signed_char">
        </type>
      </ivar>
      <meth name="set" pathname=".MyPackage.signed_char.set" ByteSize="0" SrcFile="sysdef.lib">
        <type typename="object">
        </type>
        <pvar name="this" address="0" ByteSize="4">
          <type typename="signed_char" reference="1"></type>
        </pvar>
        <pvar name="n" ByteSize="4">
          <type typename="signed_long">
          </type>
        </pvar>
      </meth>
      <meth name="not" pathname=".MyPackage.signed_char.not" ByteSize="4" SrcFile="sysdef.lib">
        <type typename="signed_long">
        </type>
        <pvar name="RetVal" address="0" ByteSize="4">
          <type typename="signed_long"></type>
        </pvar>
        <pvar name="this" address="4" ByteSize="4">
          <type typename="signed_char" reference="1"></type>
        </pvar>
      </meth>
      <meth name="band" pathname=".MyPackage.signed_char.band" ByteSize="4" SrcFile="sysdef.lib">
        <type typename="signed_long">
        </type>
        <pvar name="RetVal" address="0" ByteSize="4">
          <type typename="signed_long"></type>
        </pvar>
        <pvar name="this" address="4" ByteSize="4">
          <type typename="signed_char" reference="1"></type>
        </pvar>
        <pvar name="n" ByteSize="4">
          <type typename="signed_long">
          </type>
        </pvar>
      </meth>
      <meth name="bor" pathname=".MyPackage.signed_char.bor" ByteSize="4" SrcFile="sysdef.lib">
        <type typename="signed_long">
        </type>
        <pvar name="RetVal" address="0" ByteSize="4">
          <type typename="signed_long"></type>
        </pvar>
        <pvar name="this" address="4" ByteSize="4">
          <type typename="signed_char" reference="1"></type>
        </pvar>
        <pvar name="n" ByteSize="4">
          <type typename="signed_long">
          </type>
        </pvar>
      </meth>
      <meth name="bxor" pathname=".MyPackage.signed_char.bxor" ByteSize="4" SrcFile="sysdef.lib">
        <type typename="signed_long">
        </type>
        <pvar name="RetVal" address="0" ByteSize="4">
          <type typename="signed_long"></type>
        </pvar>
        <pvar name="this" address="4" ByteSize="4">
          <type typename="signed_char" reference="1"></type>
        </pvar>
        <pvar name="n" ByteSize="4">
          <type typename="signed_long">
          </type>
        </pvar>
      </meth>
      <meth name="and" pathname=".MyPackage.signed_char.and" ByteSize="4" SrcFile="sysdef.lib">
        <type typename="signed_long">
        </type>
        <pvar name="RetVal" address="0" ByteSize="4">
          <type typename="signed_long"></type>
        </pvar>
        <pvar name="this" address="4" ByteSize="4">
          <type typename="signed_char" reference="1"></type>
        </pvar>
        <pvar name="n" ByteSize="4">
          <type typename="signed_long">
          </type>
        </pvar>
      </meth>
      <meth name="or" pathname=".MyPackage.signed_char.or" ByteSize="4" SrcFile="sysdef.lib">
        <type typename="signed_long">
        </type>
        <pvar name="RetVal" address="0" ByteSize="4">
          <type typename="signed_long"></type>
        </pvar>
        <pvar name="this" address="4" ByteSize="4">
          <type typename="signed_char" reference="1"></type>
        </pvar>
        <pvar name="n" ByteSize="4">
          <type typename="signed_long">
          </type>
        </pvar>
      </meth>
      <meth name="shl" pathname=".MyPackage.signed_char.shl" ByteSize="4" SrcFile="sysdef.lib">
        <type typename="signed_long">
        </type>
        <pvar name="RetVal" address="0" ByteSize="4">
          <type typename="signed_long"></type>
        </pvar>
        <pvar name="this" address="4" ByteSize="4">
          <type typename="signed_char" reference="1"></type>
        </pvar>
        <pvar name="n" ByteSize="4">
          <type typename="signed_long">
          </type>
        </pvar>
      </meth>
      <meth name="sum" pathname=".MyPackage.signed_char.sum" ByteSize="4" SrcFile="sysdef.lib">
        <type typename="signed_long">
        </type>
        <pvar name="RetVal" address="0" ByteSize="4">
          <type typename="signed_long"></type>
        </pvar>
        <pvar name="this" address="4" ByteSize="4">
          <type typename="signed_char" reference="1"></type>
        </pvar>
        <pvar name="n" ByteSize="4">
          <type typename="signed_long">
          </type>
        </pvar>
      </meth>
      <meth name="mul" pathname=".MyPackage.signed_char.mul" ByteSize="4" SrcFile="sysdef.lib">
        <type typename="signed_long">
        </type>
        <pvar name="RetVal" address="0" ByteSize="4">
          <type typename="signed_long"></type>
        </pvar>
        <pvar name="this" address="4" ByteSize="4">
          <type typename="signed_char" reference="1"></type>
        </pvar>
        <pvar name="n" ByteSize="4">
          <type typename="signed_long">
          </type>
        </pvar>
      </meth>
      <meth name="sub" pathname=".MyPackage.signed_char.sub" ByteSize="4" SrcFile="sysdef.lib">
        <type typename="signed_long">
        </type>
        <pvar name="RetVal" address="0" ByteSize="4">
          <type typename="signed_long"></type>
        </pvar>
        <pvar name="this" address="4" ByteSize="4">
          <type typename="signed_char" reference="1"></type>
        </pvar>
        <pvar name="n" ByteSize="4">
          <type typename="signed_long">
          </type>
        </pvar>
      </meth>
      <meth name="div" pathname=".MyPackage.signed_char.div" ByteSize="4" SrcFile="sysdef.lib">
        <type typename="signed_long">
        </type>
        <pvar name="RetVal" address="0" ByteSize="4">
          <type typename="signed_long"></type>
        </pvar>
        <pvar name="this" address="4" ByteSize="4">
          <type typename="signed_char" reference="1"></type>
        </pvar>
        <pvar name="n" ByteSize="4">
          <type typename="signed_long">
          </type>
        </pvar>
      </meth>
      <meth name="mod" pathname=".MyPackage.signed_char.mod" ByteSize="4" SrcFile="sysdef.lib">
        <type typename="signed_long">
        </type>
        <pvar name="RetVal" address="0" ByteSize="4">
          <type typename="signed_long"></type>
        </pvar>
        <pvar name="this" address="4" ByteSize="4">
          <type typename="signed_char" reference="1"></type>
        </pvar>
        <pvar name="n" ByteSize="4">
          <type typename="signed_long">
          </type>
        </pvar>
      </meth>
      <meth name="LessThan" pathname=".MyPackage.signed_char.LessThan" ByteSize="4" SrcFile="sysdef.lib">
        <type typename="signed_long">
        </type>
        <pvar name="RetVal" address="0" ByteSize="4">
          <type typename="signed_long"></type>
        </pvar>
        <pvar name="this" address="4" ByteSize="4">
          <type typename="signed_char" reference="1"></type>
        </pvar>
        <pvar name="n" ByteSize="4">
          <type typename="signed_long">
          </type>
        </pvar>
      </meth>
      <meth name="LessOrEqual" pathname=".MyPackage.signed_char.LessOrEqual" ByteSize="4" SrcFile="sysdef.lib">
        <type typename="signed_long">
        </type>
        <pvar name="RetVal" address="0" ByteSize="4">
          <type typename="signed_long"></type>
        </pvar>
        <pvar name="this" address="4" ByteSize="4">
          <type typename="signed_char" reference="1"></type>
        </pvar>
        <pvar name="n" ByteSize="4">
          <type typename="signed_long">
          </type>
        </pvar>
      </meth>
      <meth name="NotEqual" pathname=".MyPackage.signed_char.NotEqual" ByteSize="4" SrcFile="sysdef.lib">
        <type typename="signed_long">
        </type>
        <pvar name="RetVal" address="0" ByteSize="4">
          <type typename="signed_long"></type>
        </pvar>
        <pvar name="this" address="4" ByteSize="4">
          <type typename="signed_char" reference="1"></type>
        </pvar>
        <pvar name="n" ByteSize="4">
          <type typename="signed_long">
          </type>
        </pvar>
      </meth>
      <meth name="Equal" pathname=".MyPackage.signed_char.Equal" ByteSize="4" SrcFile="sysdef.lib">
        <type typename="signed_long">
        </type>
        <pvar name="RetVal" address="0" ByteSize="4">
          <type typename="signed_long"></type>
        </pvar>
        <pvar name="this" address="4" ByteSize="4">
          <type typename="signed_char" reference="1"></type>
        </pvar>
        <pvar name="n" ByteSize="4">
          <type typename="signed_long">
          </type>
        </pvar>
      </meth>
      <meth name="GreaterOrEqual" pathname=".MyPackage.signed_char.GreaterOrEqual" ByteSize="4" SrcFile="sysdef.lib">
        <type typename="signed_long">
        </type>
        <pvar name="RetVal" address="0" ByteSize="4">
          <type typename="signed_long"></type>
        </pvar>
        <pvar name="this" address="4" ByteSize="4">
          <type typename="signed_char" reference="1"></type>
        </pvar>
        <pvar name="n" ByteSize="4">
          <type typename="signed_long">
          </type>
        </pvar>
      </meth>
      <meth name="GreaterThan" pathname=".MyPackage.signed_char.GreaterThan" ByteSize="4" SrcFile="sysdef.lib">
        <type typename="signed_long">
        </type>
        <pvar name="RetVal" address="0" ByteSize="4">
          <type typename="signed_long"></type>
        </pvar>
        <pvar name="this" address="4" ByteSize="4">
          <type typename="signed_char" reference="1"></type>
        </pvar>
        <pvar name="n" ByteSize="4">
          <type typename="signed_long">
          </type>
        </pvar>
      </meth>
      <meth name="sum_set" pathname=".MyPackage.signed_char.sum_set" ByteSize="0" SrcFile="sysdef.lib">
        <type typename="object">
        </type>
        <pvar name="this" address="0" ByteSize="4">
          <type typename="signed_char" reference="1"></type>
        </pvar>
        <pvar name="n" ByteSize="4">
          <type typename="signed_long">
          </type>
        </pvar>
      </meth>
      <meth name="PostDecr" address="223" pathname=".MyPackage.signed_char.PostDecr" MaxStackCallSz="28" MaxInternalStackSz="28" MaxInternalStackCallPos="sysdef.lib:294" ByteSize="4" CodeAddress="223" CodeSize="29" SrcFile="sysdef.lib">
        <type typename="signed_long">
        </type>
        <pvar name="RetVal" address="0" ByteSize="4">
          <type typename="signed_long"></type>
        </pvar>
        <pvar name="this" address="4" ByteSize="4">
          <type typename="signed_char" reference="1"></type>
        </pvar>
      </meth>
      <meth name="LBit" pathname=".MyPackage.signed_char.LBit" ByteSize="0" BitSize="1" SrcFile="sysdef.lib">
        <type typename="bit" reference="1">
        </type>
        <pvar name="RetVal" address="0" ByteSize="4">
          <type typename="bit"></type>
        </pvar>
        <pvar name="this" address="4" ByteSize="4">
          <type typename="signed_char" reference="1"></type>
        </pvar>
        <pvar name="n" ByteSize="4">
          <type typename="signed_long">
          </type>
        </pvar>
      </meth>
    </class>
    <class name="signed_short" address="252" ByteSize="2" CodeAddress="252" CodeSize="12" SrcFile="sysdef.lib">
      <ivar name="super" address="0" ByteSize="1">
        <type typename="signed_char">
        </type>
      </ivar>
      <ivar name="b1" address="1" ByteSize="1">
        <type typename="signed_char">
        </type>
      </ivar>
      <meth name="PostIncr" address="252" pathname=".MyPackage.signed_short.PostIncr" MaxStackCallSz="28" MaxInternalStackSz="28" MaxInternalStackCallPos="sysdef.lib:350" ByteSize="4" CodeAddress="252" CodeSize="29" SrcFile="sysdef.lib">
        <type typename="signed_long">
        </type>
        <pvar name="RetVal" address="0" ByteSize="4">
          <type typename="signed_long"></type>
        </pvar>
        <pvar name="this" address="4" ByteSize="4">
          <type typename="signed_short" reference="1"></type>
        </pvar>
      </meth>
    </class>
    <class name="signed_long" address="281" ByteSize="4" CodeAddress="281" CodeSize="12" SrcFile="sysdef.lib">
      <ivar name="super" address="0" ByteSize="1">
        <type typename="signed_char">
        </type>
      </ivar>
      <ivar name="b1" address="1" ByteSize="1">
        <type typename="signed_char">
        </type>
      </ivar>
      <ivar name="b2" address="2" ByteSize="1">
        <type typename="signed_char">
        </type>
      </ivar>
      <ivar name="b3" address="3" ByteSize="1">
        <type typename="signed_char">
        </type>
      </ivar>
      <meth name="shr" address="281" pathname=".MyPackage.signed_long.shr" MaxStackCallSz="48" MaxInternalStackSz="48" MaxInternalStackCallPos="sysdef.lib:378" ByteSize="4" CodeAddress="281" CodeSize="33" SrcFile="sysdef.lib">
        <type typename="signed_long">
        </type>
        <pvar name="RetVal" address="0" ByteSize="4">
          <type typename="signed_long"></type>
        </pvar>
        <pvar name="this" address="4" ByteSize="4">
          <type typename="signed_long" reference="1"></type>
        </pvar>
        <pvar name="n" address="8" ByteSize="4">
          <type typename="signed_long">
          </type>
        </pvar>
      </meth>
      <meth name="PostDecr" address="314" pathname=".MyPackage.signed_long.PostDecr" MaxStackCallSz="28" MaxInternalStackSz="28" MaxInternalStackCallPos="sysdef.lib:396" ByteSize="4" CodeAddress="314" CodeSize="29" SrcFile="sysdef.lib">
        <type typename="signed_long">
        </type>
        <pvar name="RetVal" address="0" ByteSize="4">
          <type typename="signed_long"></type>
        </pvar>
        <pvar name="this" address="4" ByteSize="4">
          <type typename="signed_long" reference="1"></type>
        </pvar>
      </meth>
    </class>
    <class name="Pointer">
      <ivar name="super">
        <type typename="object">
        </type>
      </ivar>
      <ivar name="ptr">
        <type typename="signed_long">
        </type>
      </ivar>
    </class>
    <class name="TBitPointer">
      <ivar name="super">
        <type typename="object">
        </type>
      </ivar>
      <ivar name="ptr">
        <type typename="signed_long">
        </type>
      </ivar>
      <ivar name="bitoffset">
        <type typename="signed_char">
        </type>
      </ivar>
    </class>
    <class name="bit" address="343" bitoffset="0" ByteSize="0" BitSize="1" CodeAddress="343" CodeSize="12" SrcFile="sysdef.lib">
      <ivar name="super" address="0" ByteSize="1">
        <type typename="signed_char">
        </type>
      </ivar>
      <ivar name="ll_primitivebit" address="1" bitoffset="0" ByteSize="0" BitSize="1">
      </ivar>
    </class>
    <class name="ArrayBasicType" address="343" ByteSize="0" CodeAddress="343" CodeSize="12" SrcFile="sysdef.lib">
      <ivar name="super" address="0" ByteSize="0">
        <type typename="object">
        </type>
      </ivar>
    </class>
    <class name="Array" address="343" ByteSize="0" CodeAddress="343" CodeSize="12" SrcFile="sysdef.lib">
      <ivar name="super" address="0" ByteSize="0">
        <type typename="object">
        </type>
      </ivar>
      <ivar name="data" address="0" ByteSize="0">
        <type typename="object">
        </type>
      </ivar>
      <meth name="geti" pathname=".MyPackage.Array.geti" ByteSize="4" SrcFile="sysdef.lib">
        <type typename="ArrayBasicType" reference="1">
        </type>
        <pvar name="RetVal" address="0" ByteSize="4">
          <type typename="ArrayBasicType"></type>
        </pvar>
        <pvar name="this" address="4" ByteSize="4">
          <type typename="Array" reference="1"></type>
        </pvar>
        <pvar name="n" ByteSize="4">
          <type typename="signed_long">
          </type>
        </pvar>
      </meth>
    </class>
    <class name="String" address="343" ByteSize="203" CodeAddress="343" CodeSize="12" SrcFile="sysdef.lib">
      <ivar name="super" address="0" ByteSize="0">
        <type typename="object">
        </type>
      </ivar>
      <ivar name="Len" address="0" ByteSize="1">
        <type typename="unsigned_char">
        </type>
      </ivar>
      <ivar name="MaxItems" address="1" ByteSize="2">
        <type typename="unsigned_short">
        </type>
      </ivar>
      <ivar name="Txt" address="3" ByteSize="200">
        <type typename="Array">
          <ArrayItem maxlen="200" typename="unsigned_char">
          </ArrayItem>
        </type>
      </ivar>
    </class>
    <funct name="ToChar" pathname=".MyPackage.ToChar" ByteSize="1" SrcFile="sysdef.lib">
      <type typename="signed_char">
      </type>
      <pvar name="RetVal" address="0" ByteSize="1">
        <type typename="signed_char"></type>
      </pvar>
      <pvar name="n" ByteSize="1">
        <type typename="signed_char">
        </type>
      </pvar>
    </funct>
    <funct name="sub" address="343" pathname=".MyPackage.sub" MaxStackCallSz="36" MaxInternalStackSz="36" MaxInternalStackCallPos="sysdef.lib:1044" ByteSize="4" CodeAddress="343" CodeSize="27" SrcFile="sysdef.lib">
      <type typename="signed_long">
      </type>
      <pvar name="RetVal" address="0" ByteSize="4">
        <type typename="signed_long"></type>
      </pvar>
      <pvar name="n" address="4" ByteSize="4">
        <type typename="signed_long">
        </type>
      </pvar>
    </funct>
    <funct name="SetReference" pathname=".MyPackage.SetReference" ByteSize="0" SrcFile="sysdef.lib">
      <type typename="object">
      </type>
      <pvar name="subj" ByteSize="4">
        <type typename="object" reference="1">
        </type>
      </pvar>
      <pvar name="val" ByteSize="4">
        <type typename="object" reference="1">
        </type>
      </pvar>
    </funct>
    <funct name="SysCall" pathname=".MyPackage.SysCall" ByteSize="0" SrcFile="sysdef.lib">
      <type typename="object">
      </type>
      <pvar name="FnCode" ByteSize="4">
        <type typename="signed_long">
        </type>
      </pvar>
    </funct>
    <funct name="GetSysParam" address="370" pathname=".MyPackage.GetSysParam" MaxStackCallSz="24" MaxInternalStackSz="24" MaxInternalStackCallPos="sysdef.lib:1058" ByteSize="4" CodeAddress="370" CodeSize="20" SrcFile="sysdef.lib">
      <type typename="signed_long">
      </type>
      <pvar name="RetVal" address="0" ByteSize="4">
        <type typename="signed_long"></type>
      </pvar>
      <pvar name="iIndex" address="4" ByteSize="4">
        <type typename="signed_long">
        </type>
      </pvar>
    </funct>
    <funct name="SetSysParam" address="390" pathname=".MyPackage.SetSysParam" MaxStackCallSz="40" MaxInternalStackSz="40" MaxInternalStackCallPos="sysdef.lib:1063" ByteSize="4" CodeAddress="390" CodeSize="37" SrcFile="sysdef.lib">
      <type typename="signed_long">
      </type>
      <pvar name="RetVal" address="0" ByteSize="4">
        <type typename="signed_long"></type>
      </pvar>
      <pvar name="iIndex" address="4" ByteSize="4">
        <type typename="signed_long">
        </type>
      </pvar>
      <pvar name="iValue" address="8" ByteSize="4">
        <type typename="signed_long">
        </type>
      </pvar>
    </funct>
    <funct name="CANgetNodeID" address="427" pathname=".MyPackage.CANgetNodeID" MaxStackCallSz="42" MaxInternalStackSz="26" MaxInternalStackCallPos="sysdef.lib:1083" ByteSize="2" CodeAddress="427" CodeSize="28" SrcFile="sysdef.lib">
      <type typename="signed_short">
      </type>
      <pvar name="RetVal" address="0" ByteSize="2">
        <type typename="signed_short"></type>
      </pvar>
    </funct>
    <funct name="CANgetSpeed" address="455" pathname=".MyPackage.CANgetSpeed" MaxStackCallSz="44" MaxInternalStackSz="28" MaxInternalStackCallPos="sysdef.lib:1091" ByteSize="4" CodeAddress="455" CodeSize="28" SrcFile="sysdef.lib">
      <type typename="signed_long">
      </type>
      <pvar name="RetVal" address="0" ByteSize="4">
        <type typename="signed_long"></type>
      </pvar>
    </funct>
    <funct name="GetRamOffset" address="483" pathname=".MyPackage.GetRamOffset" MaxStackCallSz="44" MaxInternalStackSz="44" MaxInternalStackCallPos="sysdef.lib:1278" ByteSize="4" CodeAddress="483" CodeSize="56" SrcFile="sysdef.lib">
      <type typename="signed_long">
      </type>
      <pvar name="RetVal" address="0" ByteSize="4">
        <type typename="signed_long"></type>
      </pvar>
      <pvar name="obj" address="4" ByteSize="4">
        <type typename="object" reference="1">
        </type>
      </pvar>
    </funct>
    <class name="TSysDeviceInfo" address="539" ByteSize="37" CodeAddress="539" CodeSize="12" SrcFile="sysdef.lib">
      <ivar name="StructVersion" address="0" ByteSize="1">
        <type typename="unsigned_char">
        </type>
      </ivar>
      <ivar name="ProductCode" address="1" ByteSize="4">
        <type typename="signed_long">
        </type>
      </ivar>
      <ivar name="SerialNumber" address="5" ByteSize="4">
        <type typename="signed_long">
        </type>
      </ivar>
      <ivar name="CustomProdutCode" address="9" ByteSize="2">
        <type typename="unsigned_short">
        </type>
      </ivar>
      <ivar name="BiosDate" address="11" ByteSize="4">
        <type typename="signed_long">
        </type>
      </ivar>
      <ivar name="BiosVersion" address="15" ByteSize="1">
        <type typename="unsigned_char">
        </type>
      </ivar>
      <ivar name="VendorID" address="16" ByteSize="2">
        <type typename="unsigned_short">
        </type>
      </ivar>
      <ivar name="AppID" address="18" ByteSize="2">
        <type typename="unsigned_short">
        </type>
      </ivar>
      <ivar name="AppDate" address="20" ByteSize="4">
        <type typename="signed_long">
        </type>
      </ivar>
      <ivar name="AppMaxSize" address="24" ByteSize="2">
        <type typename="unsigned_short">
        </type>
      </ivar>
      <ivar name="AppMaxStore" address="26" ByteSize="2">
        <type typename="unsigned_short">
        </type>
      </ivar>
      <ivar name="AppMaxE2P_KB" address="28" ByteSize="2">
        <type typename="unsigned_short">
        </type>
      </ivar>
      <ivar name="AppRamSize" address="30" ByteSize="2">
        <type typename="unsigned_short">
        </type>
      </ivar>
      <ivar name="ioNumDI" address="32" ByteSize="1">
        <type typename="unsigned_char">
        </type>
      </ivar>
      <ivar name="ioNumAI" address="33" ByteSize="1">
        <type typename="unsigned_char">
        </type>
      </ivar>
      <ivar name="ioNumDO" address="34" ByteSize="1">
        <type typename="unsigned_char">
        </type>
      </ivar>
      <ivar name="ioNumAO" address="35" ByteSize="1">
        <type typename="unsigned_char">
        </type>
      </ivar>
      <ivar name="ioNumPWM" address="36" ByteSize="1">
        <type typename="unsigned_char">
        </type>
      </ivar>
      <meth name="GetInfo" address="539" pathname=".MyPackage.TSysDeviceInfo.GetInfo" MaxStackCallSz="24" MaxInternalStackSz="24" MaxInternalStackCallPos="sysdef.lib:1428" ByteSize="0" CodeAddress="539" CodeSize="24" SrcFile="sysdef.lib">
        <type typename="object">
        </type>
        <pvar name="this" address="0" ByteSize="4">
          <type typename="TSysDeviceInfo" reference="1"></type>
        </pvar>
      </meth>
    </class>
    <class name="TSysDeviceInfo_v2">
      <ivar name="StructVersion">
        <type typename="unsigned_char">
        </type>
      </ivar>
      <ivar name="ProductCode">
        <type typename="signed_long">
        </type>
      </ivar>
      <ivar name="SerialNumber">
        <type typename="signed_long">
        </type>
      </ivar>
      <ivar name="CustomProdutCode">
        <type typename="unsigned_short">
        </type>
      </ivar>
      <ivar name="BiosDate">
        <type typename="signed_long">
        </type>
      </ivar>
      <ivar name="BiosVersion">
        <type typename="unsigned_char">
        </type>
      </ivar>
      <ivar name="VendorID">
        <type typename="unsigned_short">
        </type>
      </ivar>
      <ivar name="AppID">
        <type typename="unsigned_short">
        </type>
      </ivar>
      <ivar name="AppDate">
        <type typename="signed_long">
        </type>
      </ivar>
      <ivar name="BiosVer">
        <type typename="unsigned_short">
        </type>
      </ivar>
      <ivar name="BiosCode">
        <type typename="unsigned_short">
        </type>
      </ivar>
      <ivar name="AppMaxSize">
        <type typename="signed_long">
        </type>
      </ivar>
      <ivar name="AppMaxStore">
        <type typename="signed_long">
        </type>
      </ivar>
      <ivar name="AppMaxE2P">
        <type typename="signed_long">
        </type>
      </ivar>
      <ivar name="AppRamSize">
        <type typename="signed_long">
        </type>
      </ivar>
      <ivar name="UploadAreaSize">
        <type typename="signed_long">
        </type>
      </ivar>
      <ivar name="SupportedFunctions">
        <type typename="unsigned_short">
        </type>
      </ivar>
      <ivar name="ioNumDI">
        <type typename="unsigned_char">
        </type>
      </ivar>
      <ivar name="ioNumAI">
        <type typename="unsigned_char">
        </type>
      </ivar>
      <ivar name="ioNumDO">
        <type typename="unsigned_char">
        </type>
      </ivar>
      <ivar name="ioNumAO">
        <type typename="unsigned_char">
        </type>
      </ivar>
    </class>
    <class name="TTimerSec" address="563" ByteSize="4" CodeAddress="563" CodeSize="12" SrcFile="sysdef.lib">
      <ivar name="super" address="0" ByteSize="0">
        <type typename="object">
        </type>
      </ivar>
      <ivar name="Sec" address="0" ByteSize="4">
        <type typename="signed_long">
        </type>
      </ivar>
      <meth name="Start" address="563" pathname=".MyPackage.TTimerSec.Start" MaxStackCallSz="60" MaxInternalStackSz="24" MaxInternalStackCallPos="sysdef.lib:1792" ByteSize="0" CodeAddress="563" CodeSize="26" SrcFile="sysdef.lib">
        <type typename="object">
        </type>
        <pvar name="this" address="0" ByteSize="4">
          <type typename="TTimerSec" reference="1"></type>
        </pvar>
      </meth>
      <meth name="Clear" address="589" pathname=".MyPackage.TTimerSec.Clear" MaxStackCallSz="24" MaxInternalStackSz="24" MaxInternalStackCallPos="sysdef.lib:1800" ByteSize="0" CodeAddress="589" CodeSize="17" SrcFile="sysdef.lib">
        <type typename="object">
        </type>
        <pvar name="this" address="0" ByteSize="4">
          <type typename="TTimerSec" reference="1"></type>
        </pvar>
      </meth>
      <meth name="isClear" address="606" pathname=".MyPackage.TTimerSec.isClear" MaxStackCallSz="32" MaxInternalStackSz="32" MaxInternalStackCallPos="sysdef.lib:1806" ByteSize="4" CodeAddress="606" CodeSize="46" SrcFile="sysdef.lib">
        <type typename="signed_long">
        </type>
        <pvar name="RetVal" address="0" ByteSize="4">
          <type typename="signed_long"></type>
        </pvar>
        <pvar name="this" address="4" ByteSize="4">
          <type typename="TTimerSec" reference="1"></type>
        </pvar>
      </meth>
      <meth name="ElapsedSec" address="652" pathname=".MyPackage.TTimerSec.ElapsedSec" MaxStackCallSz="64" MaxInternalStackSz="36" MaxInternalStackCallPos="sysdef.lib:1816" ByteSize="4" CodeAddress="652" CodeSize="35" SrcFile="sysdef.lib">
        <type typename="signed_long">
        </type>
        <pvar name="RetVal" address="0" ByteSize="4">
          <type typename="signed_long"></type>
        </pvar>
        <pvar name="this" address="4" ByteSize="4">
          <type typename="TTimerSec" reference="1"></type>
        </pvar>
      </meth>
      <meth name="SetTime" address="687" pathname=".MyPackage.TTimerSec.SetTime" MaxStackCallSz="28" MaxInternalStackSz="28" MaxInternalStackCallPos="sysdef.lib:1822" ByteSize="0" CodeAddress="687" CodeSize="20" SrcFile="sysdef.lib">
        <type typename="object">
        </type>
        <pvar name="this" address="0" ByteSize="4">
          <type typename="TTimerSec" reference="1"></type>
        </pvar>
        <pvar name="iSec" address="4" ByteSize="4">
          <type typename="signed_long">
          </type>
        </pvar>
      </meth>
      <meth name="GetTime" address="707" pathname=".MyPackage.TTimerSec.GetTime" MaxStackCallSz="28" MaxInternalStackSz="28" MaxInternalStackCallPos="sysdef.lib:1828" ByteSize="4" CodeAddress="707" CodeSize="23" SrcFile="sysdef.lib">
        <type typename="signed_long">
        </type>
        <pvar name="RetVal" address="0" ByteSize="4">
          <type typename="signed_long"></type>
        </pvar>
        <pvar name="this" address="4" ByteSize="4">
          <type typename="TTimerSec" reference="1"></type>
        </pvar>
      </meth>
      <meth name="Addms" address="730" pathname=".MyPackage.TTimerSec.Addms" MaxStackCallSz="36" MaxInternalStackSz="36" MaxInternalStackCallPos="sysdef.lib:1842" ByteSize="0" CodeAddress="730" CodeSize="29" SrcFile="sysdef.lib">
        <type typename="object">
        </type>
        <pvar name="this" address="0" ByteSize="4">
          <type typename="TTimerSec" reference="1"></type>
        </pvar>
        <pvar name="iMilliseconds" address="4" ByteSize="4">
          <type typename="signed_long">
          </type>
        </pvar>
      </meth>
      <meth name="EarlyStart" address="759" pathname=".MyPackage.TTimerSec.EarlyStart" MaxStackCallSz="80" MaxInternalStackSz="36" MaxInternalStackCallPos="sysdef.lib:1874" ByteSize="0" CodeAddress="759" CodeSize="30" SrcFile="sysdef.lib">
        <type typename="object">
        </type>
        <pvar name="this" address="0" ByteSize="4">
          <type typename="TTimerSec" reference="1"></type>
        </pvar>
        <pvar name="iOffset" address="4" ByteSize="4">
          <type typename="signed_long">
          </type>
        </pvar>
      </meth>
    </class>
    <class name="TStoppableTimerSec" address="789" ByteSize="4" CodeAddress="789" CodeSize="12" SrcFile="sysdef.lib">
      <ivar name="super" address="0" ByteSize="4">
        <type typename="TTimerSec">
        </type>
      </ivar>
      <meth name="ElapsedSec" address="789" pathname=".MyPackage.TStoppableTimerSec.ElapsedSec" MaxStackCallSz="64" MaxInternalStackSz="36" MaxInternalStackCallPos="sysdef.lib:1929" ByteSize="4" CodeAddress="789" CodeSize="63" SrcFile="sysdef.lib">
        <type typename="signed_long">
        </type>
        <pvar name="RetVal" address="0" ByteSize="4">
          <type typename="signed_long"></type>
        </pvar>
        <pvar name="this" address="4" ByteSize="4">
          <type typename="TStoppableTimerSec" reference="1"></type>
        </pvar>
      </meth>
    </class>
    <class name="TTimer" address="852" ByteSize="6" CodeAddress="852" CodeSize="12" SrcFile="sysdef.lib">
      <ivar name="super" address="0" ByteSize="4">
        <type typename="TTimerSec">
        </type>
      </ivar>
      <ivar name="MilliSec" address="4" ByteSize="2">
        <type typename="unsigned_short">
        </type>
      </ivar>
      <meth name="set" address="852" pathname=".MyPackage.TTimer.set" MaxStackCallSz="28" MaxInternalStackSz="28" MaxInternalStackCallPos="sysdef.lib:1979" ByteSize="0" CodeAddress="852" CodeSize="33" SrcFile="sysdef.lib">
        <type typename="object">
        </type>
        <pvar name="this" address="0" ByteSize="4">
          <type typename="TTimer" reference="1"></type>
        </pvar>
        <pvar name="b" address="4" ByteSize="4">
          <type typename="TTimer" reference="1">
          </type>
        </pvar>
      </meth>
      <meth name="Start" address="885" pathname=".MyPackage.TTimer.Start" MaxStackCallSz="60" MaxInternalStackSz="24" MaxInternalStackCallPos="sysdef.lib:2003" ByteSize="0" CodeAddress="885" CodeSize="26" SrcFile="sysdef.lib">
        <type typename="object">
        </type>
        <pvar name="this" address="0" ByteSize="4">
          <type typename="TTimer" reference="1"></type>
        </pvar>
      </meth>
      <meth name="isClear" address="911" pathname=".MyPackage.TTimer.isClear" MaxStackCallSz="40" MaxInternalStackSz="40" MaxInternalStackCallPos="sysdef.lib:2014" ByteSize="4" CodeAddress="911" CodeSize="64" SrcFile="sysdef.lib">
        <type typename="signed_long">
        </type>
        <pvar name="RetVal" address="0" ByteSize="4">
          <type typename="signed_long"></type>
        </pvar>
        <pvar name="this" address="4" ByteSize="4">
          <type typename="TTimer" reference="1"></type>
        </pvar>
      </meth>
      <meth name="Elapsedms" address="975" pathname=".MyPackage.TTimer.Elapsedms" MaxStackCallSz="64" MaxInternalStackSz="44" MaxInternalStackCallPos="sysdef.lib:2051" ByteSize="4" CodeAddress="975" CodeSize="102" SrcFile="sysdef.lib">
        <type typename="signed_long">
        </type>
        <pvar name="RetVal" address="0" ByteSize="4">
          <type typename="signed_long"></type>
        </pvar>
        <pvar name="this" address="4" ByteSize="4">
          <type typename="TTimer" reference="1"></type>
        </pvar>
      </meth>
    </class>
    <class name="TReverseTimer">
      <ivar name="super">
        <type typename="TTimer">
        </type>
      </ivar>
    </class>
    <class name="TSysInfo" address="1077" ByteSize="21" CodeAddress="1077" CodeSize="12" SrcFile="sysdef.lib">
      <ivar name="super" address="0" ByteSize="0">
        <type typename="object">
        </type>
      </ivar>
      <ivar name="SysInfoVersion" address="0" ByteSize="1">
        <type typename="unsigned_char">
        </type>
      </ivar>
      <ivar name="LastVMError" address="1" ByteSize="1">
        <type typename="unsigned_char">
        </type>
      </ivar>
      <ivar name="LastVMErrorPC" address="2" ByteSize="4">
        <type typename="signed_long">
        </type>
      </ivar>
      <ivar name="SysTime" address="6" ByteSize="6">
        <type typename="TTimer">
        </type>
      </ivar>
      <ivar name="SysMaxLoopTime" address="12" ByteSize="4">
        <type typename="signed_long">
        </type>
      </ivar>
      <ivar name="MaxStackSize" address="16" ByteSize="4">
        <type typename="signed_long">
        </type>
      </ivar>
      <ivar name="PersistentMemChanged" address="20" bitoffset="0" ByteSize="0" BitSize="1">
        <type typename="bit">
        </type>
      </ivar>
      <ivar name="DisableDownload" address="20" bitoffset="1" ByteSize="0" BitSize="1">
        <type typename="bit">
        </type>
      </ivar>
      <meth name="GetInfo" address="1077" pathname=".MyPackage.TSysInfo.GetInfo" MaxStackCallSz="44" MaxInternalStackSz="28" MaxInternalStackCallPos="sysdef.lib:2217" ByteSize="0" CodeAddress="1077" CodeSize="35" SrcFile="sysdef.lib">
        <type typename="object">
        </type>
        <pvar name="this" address="0" ByteSize="4">
          <type typename="TSysInfo" reference="1"></type>
        </pvar>
      </meth>
    </class>
    <gvar mem="RAM" name="Sys" address="0" ByteSize="21">
      <type typename="TSysInfo">
      </type>
    </gvar>
    <class name="TComEvent">
      <ivar name="super">
        <type typename="signed_long">
        </type>
      </ivar>
    </class>
    <class name="TComQueue" address="1112" ByteSize="9" CodeAddress="1112" CodeSize="12" SrcFile="mcxlib.lib">
      <ivar name="QueueHandle" address="0" ByteSize="1">
        <type typename="unsigned_char">
        </type>
      </ivar>
      <ivar name="ObjectSize" address="1" ByteSize="2">
        <type typename="unsigned_short">
        </type>
        <valueexpr><constv value="1"/></valueexpr>
      </ivar>
      <ivar name="MaxBuffSize" address="3" ByteSize="2">
        <type typename="unsigned_short">
        </type>
      </ivar>
      <ivar name="BufferPtr" address="5" ByteSize="4">
        <type typename="signed_long">
        </type>
      </ivar>
      <meth name="geti" address="1112" pathname=".MyPackage.TComQueue.geti" MaxStackCallSz="28" MaxInternalStackSz="28" MaxInternalStackCallPos="mcxlib.lib:178" ByteSize="4" CodeAddress="1112" CodeSize="20" SrcFile="mcxlib.lib">
        <type typename="unsigned_char" reference="1">
        </type>
        <pvar name="RetVal" address="0" ByteSize="4">
          <type typename="unsigned_char"></type>
        </pvar>
        <pvar name="this" address="4" ByteSize="4">
          <type typename="TComQueue" reference="1"></type>
        </pvar>
        <pvar name="n" address="8" ByteSize="4">
          <type typename="signed_long">
          </type>
        </pvar>
      </meth>
      <meth name="Len" address="1132" pathname=".MyPackage.TComQueue.Len" MaxStackCallSz="24" MaxInternalStackSz="24" MaxInternalStackCallPos="mcxlib.lib:182" ByteSize="4" CodeAddress="1132" CodeSize="20" SrcFile="mcxlib.lib">
        <type typename="signed_long">
        </type>
        <pvar name="RetVal" address="0" ByteSize="4">
          <type typename="signed_long"></type>
        </pvar>
        <pvar name="this" address="4" ByteSize="4">
          <type typename="TComQueue" reference="1"></type>
        </pvar>
      </meth>
      <meth name="MaxLen" address="1152" pathname=".MyPackage.TComQueue.MaxLen" MaxStackCallSz="36" MaxInternalStackSz="36" MaxInternalStackCallPos="mcxlib.lib:186" ByteSize="4" CodeAddress="1152" CodeSize="35" SrcFile="mcxlib.lib">
        <type typename="signed_long">
        </type>
        <pvar name="RetVal" address="0" ByteSize="4">
          <type typename="signed_long"></type>
        </pvar>
        <pvar name="this" address="4" ByteSize="4">
          <type typename="TComQueue" reference="1"></type>
        </pvar>
      </meth>
    </class>
    <class name="TCom" address="1187" ByteSize="27" CodeAddress="1187" CodeSize="12" SrcFile="mcxlib.lib">
      <ivar name="super" address="0" ByteSize="0">
        <type typename="object">
        </type>
      </ivar>
      <ivar name="ComPort" address="0" ByteSize="1">
        <type typename="unsigned_char">
        </type>
      </ivar>
      <ivar name="BytesTx" address="1" ByteSize="2">
        <type typename="unsigned_short">
        </type>
      </ivar>
      <ivar name="BytesRx" address="3" ByteSize="2">
        <type typename="unsigned_short">
        </type>
      </ivar>
      <ivar name="Errors" address="5" ByteSize="2">
        <type typename="unsigned_short">
        </type>
      </ivar>
      <ivar name="OverrunErrors" address="7" ByteSize="2">
        <type typename="unsigned_short">
        </type>
      </ivar>
      <ivar name="dummy_RxQueue" address="9" ByteSize="9">
        <type typename="TComQueue">
        </type>
      </ivar>
      <ivar name="dummy_TxQueue" address="18" ByteSize="9">
        <type typename="TComQueue">
        </type>
      </ivar>
      <meth name="RxQueue" address="1187" pathname=".MyPackage.TCom.RxQueue" MaxStackCallSz="36" MaxInternalStackSz="36" MaxInternalStackCallPos="mcxlib.lib:207" ByteSize="4" CodeAddress="1187" CodeSize="24" SrcFile="mcxlib.lib">
        <type typename="TComQueue" reference="1">
        </type>
        <pvar name="RetVal" address="0" ByteSize="4">
          <type typename="TComQueue"></type>
        </pvar>
        <pvar name="this" address="4" ByteSize="4">
          <type typename="TCom" reference="1"></type>
        </pvar>
      </meth>
      <meth name="TxQueue" address="1211" pathname=".MyPackage.TCom.TxQueue" MaxStackCallSz="36" MaxInternalStackSz="36" MaxInternalStackCallPos="mcxlib.lib:211" ByteSize="4" CodeAddress="1211" CodeSize="24" SrcFile="mcxlib.lib">
        <type typename="TComQueue" reference="1">
        </type>
        <pvar name="RetVal" address="0" ByteSize="4">
          <type typename="TComQueue"></type>
        </pvar>
        <pvar name="this" address="4" ByteSize="4">
          <type typename="TCom" reference="1"></type>
        </pvar>
      </meth>
      <meth name="Init" address="1235" pathname=".MyPackage.TCom.Init" MaxStackCallSz="62" MaxInternalStackSz="46" MaxInternalStackCallPos="mcxlib.lib:299" ByteSize="4" CodeAddress="1235" CodeSize="65" SrcFile="mcxlib.lib">
        <type typename="signed_long">
        </type>
        <pvar name="RetVal" address="0" ByteSize="4">
          <type typename="signed_long"></type>
        </pvar>
        <pvar name="this" address="4" ByteSize="4">
          <type typename="TCom" reference="1"></type>
        </pvar>
        <pvar name="iSpeed" address="8" ByteSize="4">
          <type typename="signed_long">
          </type>
        </pvar>
        <pvar name="iFlags" address="12" ByteSize="2">
          <type typename="unsigned_short">
          </type>
        </pvar>
      </meth>
      <meth name="InitComEx" address="1300" pathname=".MyPackage.TCom.InitComEx" MaxStackCallSz="81" MaxInternalStackSz="49" MaxInternalStackCallPos="mcxlib.lib:382" ByteSize="0" CodeAddress="1300" CodeSize="88" SrcFile="mcxlib.lib">
        <type typename="object">
        </type>
        <pvar name="this" address="0" ByteSize="4">
          <type typename="TCom" reference="1"></type>
        </pvar>
        <pvar name="iComPort" address="4" ByteSize="1">
          <type typename="signed_char">
          </type>
        </pvar>
        <pvar name="xBufferRx" address="5" ByteSize="4">
          <type typename="unsigned_char" reference="1">
          </type>
        </pvar>
        <pvar name="iRxSize" address="9" ByteSize="4">
          <type typename="signed_long">
          </type>
        </pvar>
        <pvar name="xBufferTx" address="13" ByteSize="4">
          <type typename="unsigned_char" reference="1">
          </type>
        </pvar>
        <pvar name="iTxSize" address="17" ByteSize="4">
          <type typename="signed_long">
          </type>
        </pvar>
      </meth>
      <meth name="WriteB" address="1388" pathname=".MyPackage.TCom.WriteB" MaxStackCallSz="57" MaxInternalStackSz="41" MaxInternalStackCallPos="mcxlib.lib:423" ByteSize="4" CodeAddress="1388" CodeSize="75" SrcFile="mcxlib.lib">
        <type typename="signed_long">
        </type>
        <pvar name="RetVal" address="0" ByteSize="4">
          <type typename="signed_long"></type>
        </pvar>
        <pvar name="this" address="4" ByteSize="4">
          <type typename="TCom" reference="1"></type>
        </pvar>
        <pvar name="buff" address="8" ByteSize="4">
          <type typename="object" reference="1">
          </type>
        </pvar>
        <pvar name="iSize" address="12" ByteSize="4">
          <type typename="signed_long">
          </type>
        </pvar>
      </meth>
      <meth name="CheckAndClearEvent" address="1463" pathname=".MyPackage.TCom.CheckAndClearEvent" MaxStackCallSz="28" MaxInternalStackSz="28" MaxInternalStackCallPos="mcxlib.lib:448" ByteSize="4" CodeAddress="1463" CodeSize="20" SrcFile="mcxlib.lib">
        <type typename="signed_long">
        </type>
        <pvar name="RetVal" address="0" ByteSize="4">
          <type typename="signed_long"></type>
        </pvar>
        <pvar name="this" address="4" ByteSize="4">
          <type typename="TCom" reference="1"></type>
        </pvar>
        <pvar name="iEvCode" address="8" ByteSize="4">
          <type typename="signed_long">
          </type>
        </pvar>
      </meth>
      <meth name="GetInfo" address="1483" pathname=".MyPackage.TCom.GetInfo" MaxStackCallSz="24" MaxInternalStackSz="24" MaxInternalStackCallPos="mcxlib.lib:452" ByteSize="4" CodeAddress="1483" CodeSize="20" SrcFile="mcxlib.lib">
        <type typename="signed_long">
        </type>
        <pvar name="RetVal" address="0" ByteSize="4">
          <type typename="signed_long"></type>
        </pvar>
        <pvar name="this" address="4" ByteSize="4">
          <type typename="TCom" reference="1"></type>
        </pvar>
      </meth>
      <meth name="ClearBuffer" address="1503" pathname=".MyPackage.TCom.ClearBuffer" MaxStackCallSz="24" MaxInternalStackSz="24" MaxInternalStackCallPos="mcxlib.lib:456" ByteSize="4" CodeAddress="1503" CodeSize="20" SrcFile="mcxlib.lib">
        <type typename="signed_long">
        </type>
        <pvar name="RetVal" address="0" ByteSize="4">
          <type typename="signed_long"></type>
        </pvar>
        <pvar name="this" address="4" ByteSize="4">
          <type typename="TCom" reference="1"></type>
        </pvar>
      </meth>
      <meth name="SetSuspend" address="1523" pathname=".MyPackage.TCom.SetSuspend" MaxStackCallSz="28" MaxInternalStackSz="28" MaxInternalStackCallPos="mcxlib.lib:460" ByteSize="4" CodeAddress="1523" CodeSize="20" SrcFile="mcxlib.lib">
        <type typename="signed_long">
        </type>
        <pvar name="RetVal" address="0" ByteSize="4">
          <type typename="signed_long"></type>
        </pvar>
        <pvar name="this" address="4" ByteSize="4">
          <type typename="TCom" reference="1"></type>
        </pvar>
        <pvar name="iStatus" address="8" ByteSize="4">
          <type typename="signed_long">
          </type>
        </pvar>
      </meth>
      <meth name="SetRxTimeout" address="1543" pathname=".MyPackage.TCom.SetRxTimeout" MaxStackCallSz="26" MaxInternalStackSz="26" MaxInternalStackCallPos="mcxlib.lib:469" ByteSize="4" CodeAddress="1543" CodeSize="20" SrcFile="mcxlib.lib">
        <type typename="signed_long">
        </type>
        <pvar name="RetVal" address="0" ByteSize="4">
          <type typename="signed_long"></type>
        </pvar>
        <pvar name="this" address="4" ByteSize="4">
          <type typename="TCom" reference="1"></type>
        </pvar>
        <pvar name="iTimeout" address="8" ByteSize="2">
          <type typename="unsigned_short">
          </type>
        </pvar>
      </meth>
    </class>
    <gvar mem="RAM" name="RequestAndWaitVar_tmp" address="21" ByteSize="4">
      <type typename="signed_long">
      </type>
    </gvar>
    <class name="TCanMessage">
      <ivar name="super">
        <type typename="object">
        </type>
      </ivar>
      <ivar name="SrcNode">
        <type typename="unsigned_short">
        </type>
      </ivar>
      <ivar name="DestNode">
        <type typename="unsigned_short">
        </type>
      </ivar>
      <ivar name="Index">
        <type typename="unsigned_short">
        </type>
      </ivar>
      <ivar name="SubIndex">
        <type typename="unsigned_char">
        </type>
      </ivar>
      <ivar name="Value">
        <type typename="signed_long">
        </type>
      </ivar>
    </class>
    <class name="TCANFrame" address="1563" ByteSize="13" CodeAddress="1563" CodeSize="12" SrcFile="mcxlib.lib">
      <ivar name="CobID" address="0" ByteSize="4">
        <type typename="signed_long">
        </type>
      </ivar>
      <ivar name="Sz" address="4" ByteSize="1">
        <type typename="unsigned_char">
        </type>
      </ivar>
      <ivar name="Data" address="5" ByteSize="8">
        <type typename="Array">
          <ArrayItem maxlen="8" typename="unsigned_char">
          </ArrayItem>
        </type>
      </ivar>
    </class>
    <class name="TCANopen" address="1563" ByteSize="29" CodeAddress="1563" CodeSize="12" SrcFile="mcxlib.lib">
      <ivar name="super" address="0" ByteSize="27">
        <type typename="TCom">
        </type>
      </ivar>
      <ivar name="NodeID" address="27" ByteSize="2">
        <type typename="unsigned_short">
        </type>
      </ivar>
      <meth name="CurrSpeed" address="1563" pathname=".MyPackage.TCANopen.CurrSpeed" MaxStackCallSz="68" MaxInternalStackSz="28" MaxInternalStackCallPos="mcxlib.lib:653" ByteSize="4" CodeAddress="1563" CodeSize="21" SrcFile="mcxlib.lib">
        <type typename="signed_long">
        </type>
        <pvar name="RetVal" address="0" ByteSize="4">
          <type typename="signed_long"></type>
        </pvar>
        <pvar name="this" address="4" ByteSize="4">
          <type typename="TCANopen" reference="1"></type>
        </pvar>
      </meth>
      <meth name="SetExportTable" address="1584" pathname=".MyPackage.TCANopen.SetExportTable" MaxStackCallSz="32" MaxInternalStackSz="32" MaxInternalStackCallPos="mcxlib.lib:776" ByteSize="4" CodeAddress="1584" CodeSize="20" SrcFile="mcxlib.lib">
        <type typename="signed_long">
        </type>
        <pvar name="RetVal" address="0" ByteSize="4">
          <type typename="signed_long"></type>
        </pvar>
        <pvar name="this" address="4" ByteSize="4">
          <type typename="TCANopen" reference="1"></type>
        </pvar>
        <pvar name="ExportTbl" address="8" ByteSize="4">
          <type typename="object" reference="1">
          </type>
        </pvar>
        <pvar name="ModbusObjectDictionary" address="12" ByteSize="4">
          <type typename="object" reference="1">
          </type>
        </pvar>
      </meth>
      <meth name="Run" address="1604" pathname=".MyPackage.TCANopen.Run" MaxStackCallSz="52" MaxInternalStackSz="36" MaxInternalStackCallPos="mcxlib.lib:858" ByteSize="4" CodeAddress="1604" CodeSize="40" SrcFile="mcxlib.lib">
        <type typename="signed_long">
        </type>
        <pvar name="RetVal" address="0" ByteSize="4">
          <type typename="signed_long"></type>
        </pvar>
        <pvar name="this" address="4" ByteSize="4">
          <type typename="TCANopen" reference="1"></type>
        </pvar>
        <pvar name="MaxCanMsgToProcess" address="8" ByteSize="4" CodeAddress="6677" CodeSize="6" SrcFile="mcxlib.lib">
          <type typename="signed_long">
          </type>
          <valueexpr><constv value="20"/></valueexpr>
        </pvar>
      </meth>
    </class>
    <class name="TCan">
      <ivar name="super">
        <type typename="TCANopen">
        </type>
      </ivar>
      <ivar name="msg">
        <type typename="TCanMessage">
        </type>
      </ivar>
      <ivar name="CanOpenError">
        <type typename="signed_long">
        </type>
      </ivar>
      <ivar name="WriteOnBroadcast">
        <type typename="signed_char">
        </type>
      </ivar>
    </class>
    <class name="TE2p" address="1644" ByteSize="0" CodeAddress="1644" CodeSize="12" SrcFile="mcxlib.lib">
      <ivar name="super" address="0" ByteSize="0">
        <type typename="object">
        </type>
      </ivar>
    </class>
    <class name="TIO" address="1644" ByteSize="46" CodeAddress="1644" CodeSize="12" SrcFile="mcxlib.lib">
      <ivar name="super" address="0" ByteSize="0">
        <type typename="object">
        </type>
      </ivar>
      <ivar name="LastError" address="0" ByteSize="4">
        <type typename="signed_long">
        </type>
      </ivar>
      <ivar name="DOStatus" address="4" ByteSize="3">
        <type typename="Array">
          <ArrayItem maxlen="21" typename="bit">
          </ArrayItem>
        </type>
      </ivar>
      <ivar name="AIType" address="7" ByteSize="17">
        <type typename="Array">
          <ArrayItem maxlen="17" typename="signed_char">
          </ArrayItem>
        </type>
      </ivar>
      <ivar name="AOType" address="24" ByteSize="7">
        <type typename="Array">
          <ArrayItem maxlen="7" typename="signed_char">
          </ArrayItem>
        </type>
      </ivar>
      <ivar name="AOStatus" address="31" ByteSize="14">
        <type typename="Array">
          <ArrayItem maxlen="7" typename="unsigned_short">
          </ArrayItem>
        </type>
      </ivar>
      <ivar name="LedStatus" address="45" ByteSize="1">
        <type typename="Array">
          <ArrayItem maxlen="8" typename="bit">
          </ArrayItem>
        </type>
      </ivar>
      <meth name="Init" address="1644" pathname=".MyPackage.TIO.Init" MaxStackCallSz="16" MaxInternalStackSz="16" MaxInternalStackCallPos="" ByteSize="0" CodeAddress="1644" CodeSize="13" SrcFile="mcxlib.lib">
        <type typename="object">
        </type>
        <pvar name="this" address="0" ByteSize="4">
          <type typename="TIO" reference="1"></type>
        </pvar>
      </meth>
      <meth name="GetIO" address="1657" pathname=".MyPackage.TIO.GetIO" MaxStackCallSz="27" MaxInternalStackSz="27" MaxInternalStackCallPos="mcxlib.lib:1557" ByteSize="4" CodeAddress="1657" CodeSize="20" SrcFile="mcxlib.lib">
        <type typename="signed_long">
        </type>
        <pvar name="RetVal" address="0" ByteSize="4">
          <type typename="signed_long"></type>
        </pvar>
        <pvar name="this" address="4" ByteSize="4">
          <type typename="TIO" reference="1"></type>
        </pvar>
        <pvar name="iType" address="8" ByteSize="1">
          <type typename="signed_char">
          </type>
        </pvar>
        <pvar name="iIndex" address="9" ByteSize="1">
          <type typename="signed_char">
          </type>
        </pvar>
        <pvar name="iTransform" address="10" ByteSize="1">
          <type typename="signed_char">
          </type>
        </pvar>
      </meth>
      <meth name="SetIO" address="1677" pathname=".MyPackage.TIO.SetIO" MaxStackCallSz="35" MaxInternalStackSz="35" MaxInternalStackCallPos="mcxlib.lib:1561" ByteSize="4" CodeAddress="1677" CodeSize="20" SrcFile="mcxlib.lib">
        <type typename="signed_long">
        </type>
        <pvar name="RetVal" address="0" ByteSize="4">
          <type typename="signed_long"></type>
        </pvar>
        <pvar name="this" address="4" ByteSize="4">
          <type typename="TIO" reference="1"></type>
        </pvar>
        <pvar name="iFn" address="8" ByteSize="1">
          <type typename="signed_char">
          </type>
        </pvar>
        <pvar name="iIndex" address="9" ByteSize="1">
          <type typename="signed_char">
          </type>
        </pvar>
        <pvar name="iType" address="10" ByteSize="1">
          <type typename="signed_char">
          </type>
        </pvar>
        <pvar name="iValue" address="11" ByteSize="4">
          <type typename="signed_long">
          </type>
        </pvar>
        <pvar name="iAdv" address="15" ByteSize="4" CodeAddress="3367" CodeSize="1" SrcFile="mcxlib.lib">
          <type typename="signed_long">
          </type>
          <valueexpr><constv value="0"/></valueexpr>
        </pvar>
      </meth>
      <meth name="SetDO" address="1697" pathname=".MyPackage.TIO.SetDO" MaxStackCallSz="64" MaxInternalStackSz="52" MaxInternalStackCallPos="mcxlib.lib:1607" ByteSize="4" CodeAddress="1697" CodeSize="145" SrcFile="mcxlib.lib">
        <type typename="signed_long">
        </type>
        <pvar name="RetVal" address="0" ByteSize="4">
          <type typename="signed_long"></type>
        </pvar>
        <pvar name="this" address="4" ByteSize="4">
          <type typename="TIO" reference="1"></type>
        </pvar>
        <pvar name="iIndex" address="8" ByteSize="1">
          <type typename="signed_char">
          </type>
        </pvar>
        <pvar name="iValue" address="9" ByteSize="4">
          <type typename="signed_long">
          </type>
        </pvar>
      </meth>
      <meth name="SetLed" address="1842" pathname=".MyPackage.TIO.SetLed" MaxStackCallSz="64" MaxInternalStackSz="52" MaxInternalStackCallPos="mcxlib.lib:1650" ByteSize="4" CodeAddress="1842" CodeSize="151" SrcFile="mcxlib.lib">
        <type typename="signed_long">
        </type>
        <pvar name="RetVal" address="0" ByteSize="4">
          <type typename="signed_long"></type>
        </pvar>
        <pvar name="this" address="4" ByteSize="4">
          <type typename="TIO" reference="1"></type>
        </pvar>
        <pvar name="iIndex" address="8" ByteSize="1">
          <type typename="signed_char">
          </type>
        </pvar>
        <pvar name="iValue" address="9" ByteSize="4">
          <type typename="signed_long">
          </type>
        </pvar>
      </meth>
      <meth name="GetLed" address="1993" pathname=".MyPackage.TIO.GetLed" MaxStackCallSz="41" MaxInternalStackSz="41" MaxInternalStackCallPos="mcxlib.lib:1657" ByteSize="4" CodeAddress="1993" CodeSize="69" SrcFile="mcxlib.lib">
        <type typename="signed_long">
        </type>
        <pvar name="RetVal" address="0" ByteSize="4">
          <type typename="signed_long"></type>
        </pvar>
        <pvar name="this" address="4" ByteSize="4">
          <type typename="TIO" reference="1"></type>
        </pvar>
        <pvar name="iIndex" address="8" ByteSize="1">
          <type typename="signed_char">
          </type>
        </pvar>
      </meth>
      <meth name="GetAI" address="2062" pathname=".MyPackage.TIO.GetAI" MaxStackCallSz="62" MaxInternalStackSz="58" MaxInternalStackCallPos="mcxlib.lib:1729" ByteSize="4" CodeAddress="2062" CodeSize="485" SrcFile="mcxlib.lib">
        <type typename="signed_long">
        </type>
        <pvar name="RetVal" address="0" ByteSize="4">
          <type typename="signed_long"></type>
        </pvar>
        <pvar name="this" address="4" ByteSize="4">
          <type typename="TIO" reference="1"></type>
        </pvar>
        <pvar name="iIndex" address="8" ByteSize="1">
          <type typename="signed_char">
          </type>
        </pvar>
      </meth>
      <meth name="SetAO" address="2547" pathname=".MyPackage.TIO.SetAO" MaxStackCallSz="78" MaxInternalStackSz="58" MaxInternalStackCallPos="mcxlib.lib:1761" ByteSize="4" CodeAddress="2547" CodeSize="302" SrcFile="mcxlib.lib">
        <type typename="signed_long">
        </type>
        <pvar name="RetVal" address="0" ByteSize="4">
          <type typename="signed_long"></type>
        </pvar>
        <pvar name="this" address="4" ByteSize="4">
          <type typename="TIO" reference="1"></type>
        </pvar>
        <pvar name="iIndex" address="8" ByteSize="1">
          <type typename="signed_char">
          </type>
        </pvar>
        <pvar name="iValue" address="9" ByteSize="4">
          <type typename="signed_long">
          </type>
        </pvar>
      </meth>
      <meth name="SetAIType" address="2849" pathname=".MyPackage.TIO.SetAIType" MaxStackCallSz="65" MaxInternalStackSz="49" MaxInternalStackCallPos="mcxlib.lib:1917" ByteSize="4" CodeAddress="2849" CodeSize="147" SrcFile="mcxlib.lib">
        <type typename="signed_long">
        </type>
        <pvar name="RetVal" address="0" ByteSize="4">
          <type typename="signed_long"></type>
        </pvar>
        <pvar name="this" address="4" ByteSize="4">
          <type typename="TIO" reference="1"></type>
        </pvar>
        <pvar name="iIndex" address="8" ByteSize="1">
          <type typename="signed_char">
          </type>
        </pvar>
        <pvar name="iType" address="9" ByteSize="1">
          <type typename="signed_char">
          </type>
        </pvar>
        <pvar name="iParam" address="10" ByteSize="4">
          <type typename="signed_long">
          </type>
          <valueexpr><constv value="0"/></valueexpr>
        </pvar>
      </meth>
      <meth name="GetAIType" address="2996" pathname=".MyPackage.TIO.GetAIType" MaxStackCallSz="41" MaxInternalStackSz="41" MaxInternalStackCallPos="mcxlib.lib:1927" ByteSize="4" CodeAddress="2996" CodeSize="71" SrcFile="mcxlib.lib">
        <type typename="signed_long">
        </type>
        <pvar name="RetVal" address="0" ByteSize="4">
          <type typename="signed_long"></type>
        </pvar>
        <pvar name="this" address="4" ByteSize="4">
          <type typename="TIO" reference="1"></type>
        </pvar>
        <pvar name="iIndex" address="8" ByteSize="1">
          <type typename="signed_char">
          </type>
        </pvar>
      </meth>
      <meth name="SetAOType" address="3067" pathname=".MyPackage.TIO.SetAOType" MaxStackCallSz="94" MaxInternalStackSz="53" MaxInternalStackCallPos="mcxlib.lib:2067" ByteSize="4" CodeAddress="3067" CodeSize="120" SrcFile="mcxlib.lib">
        <type typename="signed_long">
        </type>
        <pvar name="RetVal" address="0" ByteSize="4">
          <type typename="signed_long"></type>
        </pvar>
        <pvar name="this" address="4" ByteSize="4">
          <type typename="TIO" reference="1"></type>
        </pvar>
        <pvar name="iIndex" address="8" ByteSize="1">
          <type typename="signed_char">
          </type>
        </pvar>
        <pvar name="iType" address="9" ByteSize="1">
          <type typename="signed_char">
          </type>
        </pvar>
        <pvar name="iParam" address="10" ByteSize="4">
          <type typename="signed_long">
          </type>
          <valueexpr><constv value="0"/></valueexpr>
        </pvar>
        <pvar name="iAdv" address="14" ByteSize="4">
          <type typename="signed_long">
          </type>
          <valueexpr><constv value="250"/></valueexpr>
        </pvar>
      </meth>
      <meth name="GetAOType" address="3187" pathname=".MyPackage.TIO.GetAOType" MaxStackCallSz="41" MaxInternalStackSz="41" MaxInternalStackCallPos="mcxlib.lib:2090" ByteSize="4" CodeAddress="3187" CodeSize="71" SrcFile="mcxlib.lib">
        <type typename="signed_long">
        </type>
        <pvar name="RetVal" address="0" ByteSize="4">
          <type typename="signed_long"></type>
        </pvar>
        <pvar name="this" address="4" ByteSize="4">
          <type typename="TIO" reference="1"></type>
        </pvar>
        <pvar name="iIndex" address="8" ByteSize="1">
          <type typename="signed_char">
          </type>
        </pvar>
      </meth>
      <meth name="SetRawAO" address="3258" pathname=".MyPackage.TIO.SetRawAO" MaxStackCallSz="64" MaxInternalStackSz="48" MaxInternalStackCallPos="mcxlib.lib:2198" ByteSize="4" CodeAddress="3258" CodeSize="115" SrcFile="mcxlib.lib">
        <type typename="signed_long">
        </type>
        <pvar name="RetVal" address="0" ByteSize="4">
          <type typename="signed_long"></type>
        </pvar>
        <pvar name="this" address="4" ByteSize="4">
          <type typename="TIO" reference="1"></type>
        </pvar>
        <pvar name="iIndex" address="8" ByteSize="1">
          <type typename="signed_char">
          </type>
        </pvar>
        <pvar name="iValue" address="9" ByteSize="4">
          <type typename="signed_long">
          </type>
        </pvar>
      </meth>
      <meth name="Clear" address="3373" pathname=".MyPackage.TIO.Clear" MaxStackCallSz="95" MaxInternalStackSz="30" MaxInternalStackCallPos="mcxlib.lib:2219" ByteSize="0" CodeAddress="3373" CodeSize="143" SrcFile="mcxlib.lib">
        <type typename="object">
        </type>
        <pvar name="this" address="0" ByteSize="4">
          <type typename="TIO" reference="1"></type>
        </pvar>
      </meth>
    </class>
    <class name="TFilteredAI" address="3516" ByteSize="130" CodeAddress="3516" CodeSize="12" SrcFile="mcxlib.lib">
      <ivar name="super" address="0" ByteSize="46">
        <type typename="TIO">
        </type>
      </ivar>
      <ivar name="AIFilter" address="46" ByteSize="4">
        <type typename="signed_long">
        </type>
        <valueexpr><constv value="16"/></valueexpr>
      </ivar>
      <ivar name="AIBuffer" address="50" ByteSize="64">
        <type typename="Array">
          <ArrayItem maxlen="16" typename="signed_long">
          </ArrayItem>
        </type>
      </ivar>
      <ivar name="AIFilterOverflow" address="114" ByteSize="16">
        <type typename="Array">
          <ArrayItem maxlen="16" typename="signed_char">
          </ArrayItem>
        </type>
      </ivar>
      <meth name="Init" address="3516" pathname=".MyPackage.TFilteredAI.Init" MaxStackCallSz="36" MaxInternalStackSz="32" MaxInternalStackCallPos="mcxlib.lib:2247" ByteSize="0" CodeAddress="3516" CodeSize="82" SrcFile="mcxlib.lib">
        <type typename="object">
        </type>
        <pvar name="this" address="0" ByteSize="4">
          <type typename="TFilteredAI" reference="1"></type>
        </pvar>
      </meth>
      <meth name="GetFilteredAI" address="3598" pathname=".MyPackage.TFilteredAI.GetFilteredAI" MaxStackCallSz="103" MaxInternalStackSz="57" MaxInternalStackCallPos="mcxlib.lib:2296" ByteSize="4" CodeAddress="3598" CodeSize="401" SrcFile="mcxlib.lib">
        <type typename="signed_long">
        </type>
        <pvar name="RetVal" address="0" ByteSize="4">
          <type typename="signed_long"></type>
        </pvar>
        <pvar name="this" address="4" ByteSize="4">
          <type typename="TFilteredAI" reference="1"></type>
        </pvar>
        <pvar name="iIndex" address="8" ByteSize="1">
          <type typename="signed_char">
          </type>
        </pvar>
      </meth>
      <meth name="SetAIType" address="3999" pathname=".MyPackage.TFilteredAI.SetAIType" MaxStackCallSz="91" MaxInternalStackSz="46" MaxInternalStackCallPos="mcxlib.lib:2390" ByteSize="4" CodeAddress="3999" CodeSize="116" SrcFile="mcxlib.lib">
        <type typename="signed_long">
        </type>
        <pvar name="RetVal" address="0" ByteSize="4">
          <type typename="signed_long"></type>
        </pvar>
        <pvar name="this" address="4" ByteSize="4">
          <type typename="TFilteredAI" reference="1"></type>
        </pvar>
        <pvar name="iIndex" address="8" ByteSize="1">
          <type typename="signed_char">
          </type>
        </pvar>
        <pvar name="iType" address="9" ByteSize="1">
          <type typename="signed_char">
          </type>
        </pvar>
        <pvar name="iParam" address="10" ByteSize="4" CodeAddress="13149" CodeSize="1" SrcFile="mcxlib.lib">
          <type typename="signed_long">
          </type>
          <valueexpr><constv value="0"/></valueexpr>
        </pvar>
      </meth>
      <meth name="SetAOType" address="4115" pathname=".MyPackage.TFilteredAI.SetAOType" MaxStackCallSz="124" MaxInternalStackSz="48" MaxInternalStackCallPos="mcxlib.lib:2400" ByteSize="4" CodeAddress="4115" CodeSize="70" SrcFile="mcxlib.lib">
        <type typename="signed_long">
        </type>
        <pvar name="RetVal" address="0" ByteSize="4">
          <type typename="signed_long"></type>
        </pvar>
        <pvar name="this" address="4" ByteSize="4">
          <type typename="TFilteredAI" reference="1"></type>
        </pvar>
        <pvar name="iIndex" address="8" ByteSize="1">
          <type typename="signed_char">
          </type>
        </pvar>
        <pvar name="iType" address="9" ByteSize="1">
          <type typename="signed_char">
          </type>
        </pvar>
        <pvar name="iParam" address="10" ByteSize="4" CodeAddress="13411" CodeSize="1" SrcFile="mcxlib.lib">
          <type typename="signed_long">
          </type>
          <valueexpr><constv value="0"/></valueexpr>
        </pvar>
        <pvar name="iAdv" address="14" ByteSize="4" CodeAddress="13412" CodeSize="6" SrcFile="mcxlib.lib">
          <type typename="signed_long">
          </type>
          <valueexpr><constv value="250"/></valueexpr>
        </pvar>
      </meth>
    </class>
    <class name="TFilteredIO" address="4185" ByteSize="134" CodeAddress="4185" CodeSize="12" SrcFile="mcxlib.lib">
      <ivar name="super" address="0" ByteSize="130">
        <type typename="TFilteredAI">
        </type>
      </ivar>
      <ivar name="ReverseDI" address="130" ByteSize="3">
        <type typename="Array">
          <ArrayItem maxlen="22" typename="bit">
          </ArrayItem>
        </type>
      </ivar>
      <ivar name="DisableOUT" address="133" bitoffset="0" ByteSize="0" BitSize="1">
        <type typename="bit">
        </type>
      </ivar>
      <meth name="GetDI" address="4185" pathname=".MyPackage.TFilteredIO.GetDI" MaxStackCallSz="56" MaxInternalStackSz="53" MaxInternalStackCallPos="mcxlib.lib:2419" ByteSize="4" CodeAddress="4185" CodeSize="58" SrcFile="mcxlib.lib">
        <type typename="signed_long">
        </type>
        <pvar name="RetVal" address="0" ByteSize="4">
          <type typename="signed_long"></type>
        </pvar>
        <pvar name="this" address="4" ByteSize="4">
          <type typename="TFilteredIO" reference="1"></type>
        </pvar>
        <pvar name="iIndex" address="8" ByteSize="1">
          <type typename="signed_char">
          </type>
        </pvar>
      </meth>
      <meth name="SetDO" address="4243" pathname=".MyPackage.TFilteredIO.SetDO" MaxStackCallSz="93" MaxInternalStackSz="42" MaxInternalStackCallPos="mcxlib.lib:2440" ByteSize="4" CodeAddress="4243" CodeSize="54" SrcFile="mcxlib.lib">
        <type typename="signed_long">
        </type>
        <pvar name="RetVal" address="0" ByteSize="4">
          <type typename="signed_long"></type>
        </pvar>
        <pvar name="this" address="4" ByteSize="4">
          <type typename="TFilteredIO" reference="1"></type>
        </pvar>
        <pvar name="iIndex" address="8" ByteSize="1">
          <type typename="signed_char">
          </type>
        </pvar>
        <pvar name="iValue" address="9" ByteSize="4">
          <type typename="signed_long">
          </type>
        </pvar>
      </meth>
      <meth name="SetAO" address="4297" pathname=".MyPackage.TFilteredIO.SetAO" MaxStackCallSz="107" MaxInternalStackSz="42" MaxInternalStackCallPos="mcxlib.lib:2445" ByteSize="4" CodeAddress="4297" CodeSize="54" SrcFile="mcxlib.lib">
        <type typename="signed_long">
        </type>
        <pvar name="RetVal" address="0" ByteSize="4">
          <type typename="signed_long"></type>
        </pvar>
        <pvar name="this" address="4" ByteSize="4">
          <type typename="TFilteredIO" reference="1"></type>
        </pvar>
        <pvar name="iIndex" address="8" ByteSize="1">
          <type typename="signed_char">
          </type>
        </pvar>
        <pvar name="iValue" address="9" ByteSize="4">
          <type typename="signed_long">
          </type>
        </pvar>
      </meth>
    </class>
    <gvar mem="ROM" name="StdInConv" address="0" ByteSize="16">
      <type typename="Array">
        <ArrayItem maxlen="8" typename="signed_short">
        </ArrayItem>
      </type>
      <valueexpr>
        <instr mname="">
          <constv typename="signed_short" value="2000" />
          <constv typename="signed_short" value="625" />
          <constv typename="signed_char" value="0" />
          <constv typename="signed_char" value="0" />
          <constv typename="signed_short" value="25974" />
          <constv typename="signed_short" value="10000" />
          <constv typename="signed_short" value="1000" />
          <constv typename="signed_short" value="500" />
        </instr>
      </valueexpr>
    </gvar>
    <class name="TConvTableItem" address="4351" ByteSize="8" CodeAddress="4351" CodeSize="12" SrcFile="mcxlib.lib">
      <ivar name="Rad" address="0" ByteSize="4">
        <type typename="signed_long">
        </type>
      </ivar>
      <ivar name="m" address="4" ByteSize="2">
        <type typename="signed_short">
        </type>
      </ivar>
      <ivar name="q" address="6" ByteSize="2">
        <type typename="signed_short">
        </type>
      </ivar>
    </class>
    <class name="TConvTable" address="4351" ByteSize="144" CodeAddress="4351" CodeSize="12" SrcFile="mcxlib.lib">
      <ivar name="ConvTable" address="0" ByteSize="144">
        <type typename="Array">
          <ArrayItem maxlen="18" typename="TConvTableItem">
          </ArrayItem>
        </type>
      </ivar>
    </class>
    <gvar mem="ROM" name="CNTCConvTable" address="16" ByteSize="144">
      <type typename="TConvTable">
      </type>
      <valueexpr>
        <instr mname="">
          <instr mname="">
            <instr mname="">
              <constv typename="signed_char" value="-1" />
              <constv typename="signed_short" value="-32333" />
              <constv typename="signed_short" value="13120" />
            </instr>
            <instr mname="">
              <constv typename="signed_short" value="1324" />
              <constv typename="signed_short" value="-23000" />
              <constv typename="signed_short" value="11885" />
            </instr>
            <instr mname="">
              <constv typename="signed_short" value="1824" />
              <constv typename="signed_short" value="-15000" />
              <constv typename="signed_short" value="10386" />
            </instr>
            <instr mname="">
              <constv typename="signed_short" value="2724" />
              <constv typename="signed_short" value="-10000" />
              <constv typename="signed_short" value="9024" />
            </instr>
            <instr mname="">
              <constv typename="signed_short" value="3724" />
              <constv typename="signed_short" value="-6611" />
              <constv typename="signed_short" value="7762" />
            </instr>
            <instr mname="">
              <constv typename="signed_short" value="5524" />
              <constv typename="signed_short" value="-3917" />
              <constv typename="signed_short" value="6274" />
            </instr>
            <instr mname="">
              <constv typename="signed_short" value="9124" />
              <constv typename="signed_short" value="-2432" />
              <constv typename="signed_short" value="4919" />
            </instr>
            <instr mname="">
              <constv typename="signed_short" value="12824" />
              <constv typename="signed_short" value="-1730" />
              <constv typename="signed_short" value="4019" />
            </instr>
            <instr mname="">
              <constv typename="signed_short" value="16524" />
              <constv typename="signed_short" value="-1203" />
              <constv typename="signed_short" value="3148" />
            </instr>
            <instr mname="">
              <constv typename="signed_short" value="23924" />
              <constv typename="signed_short" value="-851" />
              <constv typename="signed_short" value="2306" />
            </instr>
            <instr mname="">
              <constv typename="signed_short" value="31324" />
              <constv typename="signed_short" value="-581" />
              <constv typename="signed_short" value="1460" />
            </instr>
            <instr mname="">
              <constv typename="unsigned_short" value="46124" />
              <constv typename="signed_short" value="-399" />
              <constv typename="signed_short" value="620" />
            </instr>
            <instr mname="">
              <constv typename="unsigned_short" value="60924" />
              <constv typename="signed_short" value="-274" />
              <constv typename="signed_short" value="-141" />
            </instr>
            <instr mname="">
              <constv typename="signed_long" value="90524" />
              <constv typename="signed_short" value="-186" />
              <constv typename="signed_short" value="-936" />
            </instr>
            <instr mname="">
              <constv typename="signed_long" value="120024" />
              <constv typename="signed_char" value="-119" />
              <constv typename="signed_short" value="-1742" />
            </instr>
            <instr mname="">
              <constv typename="signed_long" value="197024" />
              <constv typename="signed_char" value="-77" />
              <constv typename="signed_short" value="-2573" />
            </instr>
            <instr mname="">
              <constv typename="signed_long" value="275024" />
              <constv typename="signed_char" value="-56" />
              <constv typename="signed_short" value="-3122" />
            </instr>
            <instr mname="">
              <constv typename="signed_long" value="2147483647" />
              <constv typename="signed_char" value="-56" />
              <constv typename="signed_short" value="-3122" />
            </instr>
          </instr>
        </instr>
      </valueexpr>
    </gvar>
    <funct name="TranslateVal" address="4351" pathname=".MyPackage.TranslateVal" MaxStackCallSz="28" MaxInternalStackSz="28" MaxInternalStackCallPos="mcxlib.lib:2546" ByteSize="4" CodeAddress="4351" CodeSize="20" SrcFile="mcxlib.lib">
      <type typename="signed_long">
      </type>
      <pvar name="RetVal" address="0" ByteSize="4">
        <type typename="signed_long"></type>
      </pvar>
      <pvar name="nVal" address="4" ByteSize="4">
        <type typename="signed_long">
        </type>
      </pvar>
      <pvar name="xConvTable" address="8" ByteSize="4">
        <type typename="TConvTable" reference="1">
        </type>
      </pvar>
    </funct>
    <class name="internal_Buzzer_TSimpleIO">
      <ivar name="LastError">
        <type typename="signed_long">
        </type>
      </ivar>
    </class>
    <gvar mem="ROM" name="ytab" address="160" ByteSize="24">
      <type typename="Array">
        <ArrayItem maxlen="2" typename="Array">
          <ArrayItem maxlen="12" typename="signed_char">
          </ArrayItem>
        </ArrayItem>
      </type>
      <valueexpr>
        <instr mname="">
          <instr mname="">
            <constv typename="signed_char" value="31" />
            <constv typename="signed_char" value="28" />
            <constv typename="signed_char" value="31" />
            <constv typename="signed_char" value="30" />
            <constv typename="signed_char" value="31" />
            <constv typename="signed_char" value="30" />
            <constv typename="signed_char" value="31" />
            <constv typename="signed_char" value="31" />
            <constv typename="signed_char" value="30" />
            <constv typename="signed_char" value="31" />
            <constv typename="signed_char" value="30" />
            <constv typename="signed_char" value="31" />
          </instr>
          <instr mname="">
            <constv typename="signed_char" value="31" />
            <constv typename="signed_char" value="29" />
            <constv typename="signed_char" value="31" />
            <constv typename="signed_char" value="30" />
            <constv typename="signed_char" value="31" />
            <constv typename="signed_char" value="30" />
            <constv typename="signed_char" value="31" />
            <constv typename="signed_char" value="31" />
            <constv typename="signed_char" value="30" />
            <constv typename="signed_char" value="31" />
            <constv typename="signed_char" value="30" />
            <constv typename="signed_char" value="31" />
          </instr>
        </instr>
      </valueexpr>
    </gvar>
    <class name="TDateTime" address="4371" ByteSize="11" CodeAddress="4371" CodeSize="12" SrcFile="mcxlib.lib">
      <ivar name="super" address="0" ByteSize="4">
        <type typename="TTimerSec">
        </type>
      </ivar>
      <ivar name="Seconds" address="4" ByteSize="1">
        <type typename="signed_char">
        </type>
      </ivar>
      <ivar name="Minutes" address="5" ByteSize="1">
        <type typename="signed_char">
        </type>
      </ivar>
      <ivar name="Hours" address="6" ByteSize="1">
        <type typename="signed_char">
        </type>
      </ivar>
      <ivar name="Day" address="7" ByteSize="1">
        <type typename="signed_char">
        </type>
      </ivar>
      <ivar name="Month" address="8" ByteSize="1">
        <type typename="signed_char">
        </type>
      </ivar>
      <ivar name="Year" address="9" ByteSize="2">
        <type typename="signed_short">
        </type>
      </ivar>
      <meth name="WDay" address="4371" pathname=".MyPackage.TDateTime.WDay" MaxStackCallSz="41" MaxInternalStackSz="41" MaxInternalStackCallPos="mcxlib.lib:2725" ByteSize="1" CodeAddress="4371" CodeSize="39" SrcFile="mcxlib.lib">
        <type typename="signed_char">
        </type>
        <pvar name="RetVal" address="0" ByteSize="1">
          <type typename="signed_char"></type>
        </pvar>
        <pvar name="this" address="1" ByteSize="4">
          <type typename="TDateTime" reference="1"></type>
        </pvar>
      </meth>
      <meth name="Explode" address="4410" pathname=".MyPackage.TDateTime.Explode" MaxStackCallSz="50" MaxInternalStackSz="42" MaxInternalStackCallPos="mcxlib.lib:2778" ByteSize="0" CodeAddress="4410" CodeSize="407" SrcFile="mcxlib.lib">
        <type typename="object">
        </type>
        <pvar name="this" address="0" ByteSize="4">
          <type typename="TDateTime" reference="1"></type>
        </pvar>
      </meth>
      <meth name="LoadRTC" address="4817" pathname=".MyPackage.TDateTime.LoadRTC" MaxStackCallSz="45" MaxInternalStackSz="29" MaxInternalStackCallPos="mcxlib.lib:2855" ByteSize="1" CodeAddress="4817" CodeSize="58" SrcFile="mcxlib.lib">
        <type typename="signed_char">
        </type>
        <pvar name="RetVal" address="0" ByteSize="1">
          <type typename="signed_char"></type>
        </pvar>
        <pvar name="this" address="1" ByteSize="4">
          <type typename="TDateTime" reference="1"></type>
        </pvar>
      </meth>
      <meth name="SaveRTC" address="4875" pathname=".MyPackage.TDateTime.SaveRTC" MaxStackCallSz="56" MaxInternalStackSz="28" MaxInternalStackCallPos="mcxlib.lib:2866" ByteSize="0" CodeAddress="4875" CodeSize="26" SrcFile="mcxlib.lib">
        <type typename="object">
        </type>
        <pvar name="this" address="0" ByteSize="4">
          <type typename="TDateTime" reference="1"></type>
        </pvar>
      </meth>
    </class>
    <class name="TRTCEmulator">
      <ivar name="super">
        <type typename="TDateTime">
        </type>
      </ivar>
      <ivar name="TimeOffset">
        <type typename="signed_long">
        </type>
      </ivar>
      <ivar name="CurrDay">
        <type typename="unsigned_short">
        </type>
      </ivar>
      <ivar name="tmr">
        <type typename="TTimerSec">
        </type>
      </ivar>
    </class>
    <funct name="Saturation" address="4901" pathname=".MyPackage.Saturation" MaxStackCallSz="40" MaxInternalStackSz="40" MaxInternalStackCallPos="mcxlib.lib:3186" ByteSize="4" CodeAddress="4901" CodeSize="77" SrcFile="mcxlib.lib">
      <type typename="signed_long">
      </type>
      <pvar name="RetVal" address="0" ByteSize="4">
        <type typename="signed_long"></type>
      </pvar>
      <pvar name="nVal" address="4" ByteSize="4">
        <type typename="signed_long">
        </type>
      </pvar>
      <pvar name="nMin" address="8" ByteSize="4">
        <type typename="signed_long">
        </type>
      </pvar>
      <pvar name="nMax" address="12" ByteSize="4">
        <type typename="signed_long">
        </type>
      </pvar>
    </funct>
    <gvar mem="RAM" name="Com1BufferR" address="25" ByteSize="128">
      <type typename="Array">
        <ArrayItem maxlen="128" typename="unsigned_char">
        </ArrayItem>
      </type>
    </gvar>
    <gvar mem="RAM" name="Com1BufferW" address="153" ByteSize="128">
      <type typename="Array">
        <ArrayItem maxlen="128" typename="unsigned_char">
        </ArrayItem>
      </type>
    </gvar>
    <gvar mem="RAM" name="CanBufferR" address="281" ByteSize="128">
      <type typename="Array">
        <ArrayItem maxlen="128" typename="unsigned_char">
        </ArrayItem>
      </type>
    </gvar>
    <gvar mem="RAM" name="CanBufferW" address="409" ByteSize="128">
      <type typename="Array">
        <ArrayItem maxlen="128" typename="unsigned_char">
        </ArrayItem>
      </type>
    </gvar>
    <gvar mem="RAM" name="RunningIntoSimulation" address="537" bitoffset="0" ByteSize="0" BitSize="1">
      <type typename="bit">
      </type>
    </gvar>
    <gvar mem="RAM" name="e2p" address="538" ByteSize="0">
      <type typename="TE2p">
      </type>
    </gvar>
    <gvar mem="E2P" name="ReservedE2P" address="0" ByteSize="16">
      <type typename="Array">
        <ArrayItem maxlen="16" typename="unsigned_char">
        </ArrayItem>
      </type>
    </gvar>
    <class name="TStdParams">
      <ivar name="super">
        <type typename="object">
        </type>
      </ivar>
      <ivar name="VendorID">
        <type typename="unsigned_short">
        </type>
        <valueexpr><constv value="-1"/></valueexpr>
      </ivar>
      <ivar name="AppID">
        <type typename="unsigned_short">
        </type>
        <valueexpr><constv value="0"/></valueexpr>
      </ivar>
      <ivar name="VersionID">
        <type typename="unsigned_short">
        </type>
        <valueexpr>
          <instr mname="crcof" SrcRow="3531">
            <instr mname="TParams" SrcRow="3531">
            </instr>
          </instr>
        </valueexpr>
      </ivar>
    </class>
    <class name="TStdParamsCompile">
      <ivar name="super">
        <type typename="object">
        </type>
      </ivar>
      <ivar name="ParVersion">
        <type typename="signed_long">
        </type>
        <valueexpr><constv value="-1"/></valueexpr>
      </ivar>
    </class>
    <class name="TStdAlgo">
      <ivar name="super">
        <type typename="object">
        </type>
      </ivar>
    </class>
    <gvar mem="RAM" name="Algo" address="538" ByteSize="0">
      <type typename="TMyAlgo">
      </type>
    </gvar>
    <funct name="Main" address="4978" pathname=".MyPackage.Main" MaxStackCallSz="332" MaxInternalStackSz="16" MaxInternalStackCallPos="mcxlib.lib:3679" ByteSize="0" CodeAddress="4978" CodeSize="33" SrcFile="mcxlib.lib">
      <type typename="object">
      </type>
    </funct>
    <class name="TMyAlgo" address="5011" ByteSize="0" CodeAddress="5011" CodeSize="12" SrcFile="mcxlib.lib">
    </class>
    <funct name="nvmlib_Startup" address="5011" pathname=".MyPackage.nvmlib_Startup" MaxStackCallSz="344" MaxInternalStackSz="61" MaxInternalStackCallPos="mcxlib.lib:3759" ByteSize="0" CodeAddress="5011" CodeSize="287" SrcFile="mcxlib.lib">
      <type typename="object">
      </type>
    </funct>
    <class name="TModbus" address="5298" ByteSize="38" CodeAddress="5298" CodeSize="12" SrcFile="modbuslib.lib">
      <ivar name="super" address="0" ByteSize="27">
        <type typename="TCom">
        </type>
      </ivar>
      <ivar name="Ident" address="27" ByteSize="1">
        <type typename="unsigned_char">
        </type>
      </ivar>
      <ivar name="Timeout" address="28" ByteSize="2">
        <type typename="unsigned_short">
        </type>
        <valueexpr><constv value="100"/></valueexpr>
      </ivar>
      <ivar name="FnCode" address="30" ByteSize="2">
        <type typename="unsigned_short">
        </type>
        <valueexpr><constv value="0"/></valueexpr>
      </ivar>
      <ivar name="StartAddress" address="32" ByteSize="2">
        <type typename="unsigned_short">
        </type>
      </ivar>
      <ivar name="Count" address="34" ByteSize="2">
        <type typename="unsigned_short">
        </type>
      </ivar>
      <ivar name="ReceivedPacket" address="36" ByteSize="1">
        <type typename="unsigned_char">
        </type>
        <valueexpr><constv value="0"/></valueexpr>
      </ivar>
      <ivar name="IllegalFunctionError" address="37" bitoffset="0" ByteSize="0" BitSize="1">
        <type typename="bit">
        </type>
      </ivar>
      <ivar name="IllegalDataAddress" address="37" bitoffset="1" ByteSize="0" BitSize="1">
        <type typename="bit">
        </type>
      </ivar>
      <ivar name="IllegalDataValue" address="37" bitoffset="2" ByteSize="0" BitSize="1">
        <type typename="bit">
        </type>
      </ivar>
      <ivar name="OutputBufferOverflow" address="37" bitoffset="3" ByteSize="0" BitSize="1">
        <type typename="bit">
        </type>
      </ivar>
      <ivar name="CRCError" address="37" bitoffset="4" ByteSize="0" BitSize="1">
        <type typename="bit">
        </type>
      </ivar>
      <meth name="CheckPacket" address="5298" pathname=".MyPackage.TModbus.CheckPacket" MaxStackCallSz="70" MaxInternalStackSz="42" MaxInternalStackCallPos="modbuslib.lib:269" ByteSize="0" CodeAddress="5298" CodeSize="250" SrcFile="modbuslib.lib">
        <type typename="object">
        </type>
        <pvar name="this" address="0" ByteSize="4">
          <type typename="TModbus" reference="1"></type>
        </pvar>
      </meth>
      <meth name="ProcessPacket" address="5548" pathname=".MyPackage.TModbus.ProcessPacket" MaxStackCallSz="123" MaxInternalStackSz="48" MaxInternalStackCallPos="modbuslib.lib:437" ByteSize="0" CodeAddress="5548" CodeSize="504" SrcFile="modbuslib.lib">
        <type typename="object">
        </type>
        <pvar name="this" address="0" ByteSize="4">
          <type typename="TModbus" reference="1"></type>
        </pvar>
      </meth>
      <meth name="Run" address="6052" pathname=".MyPackage.TModbus.Run" MaxStackCallSz="139" MaxInternalStackSz="36" MaxInternalStackCallPos="modbuslib.lib:596" ByteSize="0" CodeAddress="6052" CodeSize="53" SrcFile="modbuslib.lib">
        <type typename="object">
        </type>
        <pvar name="this" address="0" ByteSize="4">
          <type typename="TModbus" reference="1"></type>
        </pvar>
      </meth>
      <meth name="StartAnswer" address="6105" pathname=".MyPackage.TModbus.StartAnswer" MaxStackCallSz="97" MaxInternalStackSz="28" MaxInternalStackCallPos="modbuslib.lib:642" ByteSize="0" CodeAddress="6105" CodeSize="53" SrcFile="modbuslib.lib">
        <type typename="object">
        </type>
        <pvar name="this" address="0" ByteSize="4">
          <type typename="TModbus" reference="1"></type>
        </pvar>
      </meth>
      <meth name="EndAnswer" address="6158" pathname=".MyPackage.TModbus.EndAnswer" MaxStackCallSz="99" MaxInternalStackSz="44" MaxInternalStackCallPos="modbuslib.lib:654" ByteSize="0" CodeAddress="6158" CodeSize="130" SrcFile="modbuslib.lib">
        <type typename="object">
        </type>
        <pvar name="this" address="0" ByteSize="4">
          <type typename="TModbus" reference="1"></type>
        </pvar>
      </meth>
      <meth name="SetExceptionCode" address="6288" pathname=".MyPackage.TModbus.SetExceptionCode" MaxStackCallSz="101" MaxInternalStackSz="40" MaxInternalStackCallPos="modbuslib.lib:660" ByteSize="0" CodeAddress="6288" CodeSize="57" SrcFile="modbuslib.lib">
        <type typename="object">
        </type>
        <pvar name="this" address="0" ByteSize="4">
          <type typename="TModbus" reference="1"></type>
        </pvar>
        <pvar name="iCode" address="4" ByteSize="4">
          <type typename="signed_long">
          </type>
        </pvar>
      </meth>
      <meth name="WriteValue" address="6345" pathname=".MyPackage.TModbus.WriteValue" MaxStackCallSz="81" MaxInternalStackSz="44" MaxInternalStackCallPos="modbuslib.lib:670" ByteSize="0" CodeAddress="6345" CodeSize="93" SrcFile="modbuslib.lib">
        <type typename="object">
        </type>
        <pvar name="this" address="0" ByteSize="4">
          <type typename="TModbus" reference="1"></type>
        </pvar>
        <pvar name="iValue" address="4" ByteSize="4">
          <type typename="signed_long">
          </type>
        </pvar>
        <pvar name="iLen" address="8" ByteSize="4" CodeAddress="5893" CodeSize="6" SrcFile="modbuslib.lib">
          <type typename="signed_long">
          </type>
          <valueexpr><constv value="-2"/></valueexpr>
        </pvar>
      </meth>
      <meth name="AnswerReq" address="6438" pathname=".MyPackage.TModbus.AnswerReq" MaxStackCallSz="36" MaxInternalStackSz="36" MaxInternalStackCallPos="modbuslib.lib:674" ByteSize="4" CodeAddress="6438" CodeSize="20" SrcFile="modbuslib.lib">
        <type typename="signed_long">
        </type>
        <pvar name="RetVal" address="0" ByteSize="4">
          <type typename="signed_long"></type>
        </pvar>
        <pvar name="this" address="4" ByteSize="4">
          <type typename="TModbus" reference="1"></type>
        </pvar>
        <pvar name="ModbusTable" address="8" ByteSize="4">
          <type typename="object" reference="1">
          </type>
        </pvar>
        <pvar name="iModbusAddress" address="12" ByteSize="2">
          <type typename="unsigned_short">
          </type>
        </pvar>
        <pvar name="iCount" address="14" ByteSize="2">
          <type typename="unsigned_short">
          </type>
        </pvar>
        <pvar name="RxPtr" address="16" ByteSize="4" CodeAddress="5623" CodeSize="1" SrcFile="modbuslib.lib">
          <type typename="signed_long">
          </type>
          <valueexpr><constv value="0"/></valueexpr>
        </pvar>
      </meth>
      <meth name="WriteReq" address="6458" pathname=".MyPackage.TModbus.WriteReq" MaxStackCallSz="36" MaxInternalStackSz="36" MaxInternalStackCallPos="modbuslib.lib:678" ByteSize="4" CodeAddress="6458" CodeSize="20" SrcFile="modbuslib.lib">
        <type typename="signed_long">
        </type>
        <pvar name="RetVal" address="0" ByteSize="4">
          <type typename="signed_long"></type>
        </pvar>
        <pvar name="this" address="4" ByteSize="4">
          <type typename="TModbus" reference="1"></type>
        </pvar>
        <pvar name="ModbusTable" address="8" ByteSize="4">
          <type typename="object" reference="1">
          </type>
        </pvar>
        <pvar name="iModbusAddress" address="12" ByteSize="2">
          <type typename="unsigned_short">
          </type>
        </pvar>
        <pvar name="iCount" address="14" ByteSize="2">
          <type typename="unsigned_short">
          </type>
        </pvar>
        <pvar name="RxPtr" address="16" ByteSize="4">
          <type typename="unsigned_char" reference="1">
          </type>
        </pvar>
      </meth>
      <meth name="CRCModbus" address="6478" pathname=".MyPackage.TModbus.CRCModbus" MaxStackCallSz="30" MaxInternalStackSz="30" MaxInternalStackCallPos="modbuslib.lib:682" ByteSize="2" CodeAddress="6478" CodeSize="27" SrcFile="modbuslib.lib">
        <type typename="unsigned_short">
        </type>
        <pvar name="RetVal" address="0" ByteSize="2">
          <type typename="unsigned_short"></type>
        </pvar>
        <pvar name="this" address="2" ByteSize="4">
          <type typename="TModbus" reference="1"></type>
        </pvar>
        <pvar name="a" address="6" ByteSize="4">
          <type typename="object" reference="1">
          </type>
        </pvar>
        <pvar name="iSize" address="10" ByteSize="4">
          <type typename="signed_long">
          </type>
        </pvar>
      </meth>
      <meth name="Init" address="6505" pathname=".MyPackage.TModbus.Init" MaxStackCallSz="88" MaxInternalStackSz="42" MaxInternalStackCallPos="modbuslib.lib:688" ByteSize="4" CodeAddress="6505" CodeSize="94" SrcFile="modbuslib.lib">
        <type typename="signed_long">
        </type>
        <pvar name="RetVal" address="0" ByteSize="4">
          <type typename="signed_long"></type>
        </pvar>
        <pvar name="this" address="4" ByteSize="4">
          <type typename="TModbus" reference="1"></type>
        </pvar>
        <pvar name="iSpeed" address="8" ByteSize="4">
          <type typename="signed_long">
          </type>
        </pvar>
        <pvar name="iFlags" address="12" ByteSize="2">
          <type typename="unsigned_short">
          </type>
        </pvar>
      </meth>
    </class>
    <gvar mem="RAM" name="Can" address="538" ByteSize="29">
      <type typename="TCANopen">
      </type>
    </gvar>
    <gvar mem="RAM" name="Com1" address="567" ByteSize="38">
      <type typename="TModbus">
      </type>
    </gvar>
    <gvar mem="RAM" name="IO" address="605" ByteSize="134">
      <type typename="TFilteredIO">
      </type>
    </gvar>
    <funct name="Algo_Init" address="6599" pathname=".MyPackage.Algo_Init" MaxStackCallSz="141" MaxInternalStackSz="28" MaxInternalStackCallPos="stdalgo.c:66" ByteSize="0" CodeAddress="6599" CodeSize="62" SrcFile="stdalgo.c">
      <type typename="object">
      </type>
      <code>
        <instr mname="" CodeAddress="6611" CodeSize="49">
          <instr mname="SetExportTable" linkedname=".MyPackage.TCANopen.SetExportTable" CodeAddress="6611" CodeSize="15" SrcRow="52">
            <subj>
              <instr mname="Can" linkedname=".MyPackage.Can" CodeAddress="6612" CodeSize="3" SrcRow="52">
              </instr>
            </subj>
            <instr mname="ExportTable" CodeAddress="6615" CodeSize="3" SrcRow="52">
            </instr>
            <instr mname="ModbusTable" CodeAddress="6618" CodeSize="3" SrcRow="52">
            </instr>
          </instr>
          <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="6626" CodeSize="9" SrcRow="60">
            <subj>
              <instr mname="Ident" linkedname=".MyPackage.TModbus.Ident" CodeAddress="6626" CodeSize="3" SrcRow="60">
                <subj>
                  <instr mname="Com1" linkedname=".MyPackage.Com1" CodeAddress="6626" CodeSize="3" SrcRow="60">
                  </instr>
                </subj>
              </instr>
            </subj>
            <instr mname="NodeID" linkedname=".MyPackage.TCANopen.NodeID" CodeAddress="6629" CodeSize="3" SrcRow="60">
              <subj>
                <instr mname="Can" linkedname=".MyPackage.Can" CodeAddress="6629" CodeSize="3" SrcRow="60">
                </instr>
              </subj>
            </instr>
          </instr>
          <if>
            <condition>
              <instr mname="Equal" linkedname=".MyPackage.signed_char.Equal" CodeAddress="6635" CodeSize="13" SrcRow="62">
                <subj>
                  <instr mname="Ident" linkedname=".MyPackage.TModbus.Ident" CodeAddress="6636" CodeSize="3" SrcRow="62">
                    <subj>
                      <instr mname="Com1" linkedname=".MyPackage.Com1" CodeAddress="6636" CodeSize="3" SrcRow="62">
                      </instr>
                    </subj>
                  </instr>
                </subj>
                <constv typename="signed_char" value="0" />
              </instr>
            </condition>
            <then>
              <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="6651" CodeSize="6" SrcRow="63">
                <subj>
                  <instr mname="Ident" linkedname=".MyPackage.TModbus.Ident" CodeAddress="6651" CodeSize="3" SrcRow="63">
                    <subj>
                      <instr mname="Com1" linkedname=".MyPackage.Com1" CodeAddress="6651" CodeSize="3" SrcRow="63">
                      </instr>
                    </subj>
                  </instr>
                </subj>
                <constv typename="signed_char" value="1" />
              </instr>
            </then>
          </if>
          <instr mname="App_Init" linkedname=".MyPackage.App_Init" CodeAddress="6657" CodeSize="3" SrcRow="66">
          </instr>
        </instr>
      </code>
    </funct>
    <funct name="Algo_MainLoop" address="6661" pathname=".MyPackage.Algo_MainLoop" MaxStackCallSz="320" MaxInternalStackSz="24" MaxInternalStackCallPos="stdalgo.c:92" ByteSize="0" CodeAddress="6661" CodeSize="33" SrcFile="stdalgo.c">
      <type typename="object">
      </type>
      <code>
        <instr mname="" CodeAddress="6673" CodeSize="20">
          <instr mname="Run" linkedname=".MyPackage.TCANopen.Run" CodeAddress="6673" CodeSize="11" SrcRow="79">
            <subj>
              <instr mname="Can" linkedname=".MyPackage.Can" CodeAddress="6674" CodeSize="3" SrcRow="79">
              </instr>
            </subj>
          </instr>
          <instr mname="Run" linkedname=".MyPackage.TModbus.Run" CodeAddress="6684" CodeSize="6" SrcRow="87">
            <subj>
              <instr mname="Com1" linkedname=".MyPackage.Com1" CodeAddress="6684" CodeSize="3" SrcRow="87">
              </instr>
            </subj>
          </instr>
          <instr mname="App_Run" linkedname=".MyPackage.App_Run" CodeAddress="6690" CodeSize="3" SrcRow="92">
          </instr>
        </instr>
      </code>
    </funct>
    <class name="SchedulePoint" address="6694" ByteSize="4" CodeAddress="6694" CodeSize="12" SrcFile="AppDefine.c">
      <ivar name="point" address="0" ByteSize="4">
        <type typename="signed_long">
        </type>
      </ivar>
      <meth name="ReadTime" address="6694" pathname=".MyPackage.SchedulePoint.ReadTime" MaxStackCallSz="34" MaxInternalStackSz="34" MaxInternalStackCallPos="AppDefine.c:104" ByteSize="2" CodeAddress="6694" CodeSize="31" SrcFile="AppDefine.c">
        <type typename="signed_short">
        </type>
        <pvar name="RetVal" address="0" ByteSize="2">
          <type typename="signed_short"></type>
        </pvar>
        <pvar name="this" address="2" ByteSize="4">
          <type typename="SchedulePoint" reference="1"></type>
        </pvar>
        <code>
          <instr mname="" CodeAddress="6706" CodeSize="18">
            <instr mname="" CodeAddress="6706" CodeSize="18">
              <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="6706" CodeSize="17" SrcRow="104">
                <subj>
                  <instr mname="RetVal" CodeAddress="6706" CodeSize="3" SrcRow="104">
                  </instr>
                </subj>
                <instr mname="band" linkedname=".MyPackage.signed_char.band" CodeAddress="6709" CodeSize="13" SrcRow="104">
                  <subj>
                    <instr mname="point" linkedname=".MyPackage.SchedulePoint.point" CodeAddress="6710" CodeSize="3" SrcRow="104">
                      <subj><instr mname="Me" /></subj>
                    </instr>
                  </subj>
                  <constv typename="unsigned_char" value="255" />
                </instr>
              </instr>
              <instr mname="ExitFunction" CodeAddress="6723" CodeSize="1" SrcRow="104">
              </instr>
            </instr>
          </instr>
        </code>
      </meth>
      <meth name="ReadDay" address="6725" pathname=".MyPackage.SchedulePoint.ReadDay" MaxStackCallSz="74" MaxInternalStackSz="38" MaxInternalStackCallPos="AppDefine.c:105" ByteSize="2" CodeAddress="6725" CodeSize="31" SrcFile="AppDefine.c">
        <type typename="signed_short">
        </type>
        <pvar name="RetVal" address="0" ByteSize="2">
          <type typename="signed_short"></type>
        </pvar>
        <pvar name="this" address="2" ByteSize="4">
          <type typename="SchedulePoint" reference="1"></type>
        </pvar>
        <code>
          <instr mname="" CodeAddress="6737" CodeSize="18">
            <instr mname="" CodeAddress="6737" CodeSize="18">
              <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="6737" CodeSize="17" SrcRow="105">
                <subj>
                  <instr mname="RetVal" CodeAddress="6737" CodeSize="3" SrcRow="105">
                  </instr>
                </subj>
                <instr mname="band" linkedname=".MyPackage.signed_char.band" CodeAddress="6740" CodeSize="13" SrcRow="105">
                  <subj>
                    <instr mname="" CodeAddress="6741" CodeSize="9">
                      <instr mname="shr" linkedname=".MyPackage.signed_long.shr" CodeAddress="6741" CodeSize="9" SrcRow="105">
                        <subj>
                          <instr mname="point" linkedname=".MyPackage.SchedulePoint.point" CodeAddress="6742" CodeSize="3" SrcRow="105">
                            <subj><instr mname="Me" /></subj>
                          </instr>
                        </subj>
                        <constv typename="signed_char" value="8" />
                      </instr>
                    </instr>
                  </subj>
                  <constv typename="signed_char" value="127" />
                </instr>
              </instr>
              <instr mname="ExitFunction" CodeAddress="6754" CodeSize="1" SrcRow="105">
              </instr>
            </instr>
          </instr>
        </code>
      </meth>
      <meth name="ReadAction" address="6756" pathname=".MyPackage.SchedulePoint.ReadAction" MaxStackCallSz="74" MaxInternalStackSz="38" MaxInternalStackCallPos="AppDefine.c:106" ByteSize="2" CodeAddress="6756" CodeSize="31" SrcFile="AppDefine.c">
        <type typename="signed_short">
        </type>
        <pvar name="RetVal" address="0" ByteSize="2">
          <type typename="signed_short"></type>
        </pvar>
        <pvar name="this" address="2" ByteSize="4">
          <type typename="SchedulePoint" reference="1"></type>
        </pvar>
        <code>
          <instr mname="" CodeAddress="6768" CodeSize="18">
            <instr mname="" CodeAddress="6768" CodeSize="18">
              <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="6768" CodeSize="17" SrcRow="106">
                <subj>
                  <instr mname="RetVal" CodeAddress="6768" CodeSize="3" SrcRow="106">
                  </instr>
                </subj>
                <instr mname="band" linkedname=".MyPackage.signed_char.band" CodeAddress="6771" CodeSize="13" SrcRow="106">
                  <subj>
                    <instr mname="" CodeAddress="6772" CodeSize="9">
                      <instr mname="shr" linkedname=".MyPackage.signed_long.shr" CodeAddress="6772" CodeSize="9" SrcRow="106">
                        <subj>
                          <instr mname="point" linkedname=".MyPackage.SchedulePoint.point" CodeAddress="6773" CodeSize="3" SrcRow="106">
                            <subj><instr mname="Me" /></subj>
                          </instr>
                        </subj>
                        <constv typename="signed_char" value="15" />
                      </instr>
                    </instr>
                  </subj>
                  <constv typename="signed_char" value="1" />
                </instr>
              </instr>
              <instr mname="ExitFunction" CodeAddress="6785" CodeSize="1" SrcRow="106">
              </instr>
            </instr>
          </instr>
        </code>
      </meth>
      <meth name="ReadScheduleNo" address="6787" pathname=".MyPackage.SchedulePoint.ReadScheduleNo" MaxStackCallSz="74" MaxInternalStackSz="38" MaxInternalStackCallPos="AppDefine.c:107" ByteSize="2" CodeAddress="6787" CodeSize="35" SrcFile="AppDefine.c">
        <type typename="signed_short">
        </type>
        <pvar name="RetVal" address="0" ByteSize="2">
          <type typename="signed_short"></type>
        </pvar>
        <pvar name="this" address="2" ByteSize="4">
          <type typename="SchedulePoint" reference="1"></type>
        </pvar>
        <code>
          <instr mname="" CodeAddress="6799" CodeSize="22">
            <instr mname="" CodeAddress="6799" CodeSize="22">
              <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="6799" CodeSize="21" SrcRow="107">
                <subj>
                  <instr mname="RetVal" CodeAddress="6799" CodeSize="3" SrcRow="107">
                  </instr>
                </subj>
                <instr mname="" CodeAddress="6802" CodeSize="17">
                  <instr mname="band" linkedname=".MyPackage.signed_char.band" CodeAddress="6802" CodeSize="17" SrcRow="107">
                    <subj>
                      <instr mname="shr" linkedname=".MyPackage.signed_long.shr" CodeAddress="6803" CodeSize="9" SrcRow="107">
                        <subj>
                          <instr mname="point" linkedname=".MyPackage.SchedulePoint.point" CodeAddress="6804" CodeSize="3" SrcRow="107">
                            <subj><instr mname="Me" /></subj>
                          </instr>
                        </subj>
                        <constv typename="signed_char" value="16" />
                      </instr>
                    </subj>
                    <constv typename="unsigned_char" value="255" />
                  </instr>
                </instr>
              </instr>
              <instr mname="ExitFunction" CodeAddress="6820" CodeSize="1" SrcRow="107">
              </instr>
            </instr>
          </instr>
        </code>
      </meth>
      <meth name="CheckDay" address="6822" pathname=".MyPackage.SchedulePoint.CheckDay" MaxStackCallSz="101" MaxInternalStackSz="43" MaxInternalStackCallPos="AppDefine.c:109" ByteSize="2" CodeAddress="6822" CodeSize="39" SrcFile="AppDefine.c">
        <type typename="signed_short">
        </type>
        <pvar name="RetVal" address="0" ByteSize="2">
          <type typename="signed_short"></type>
        </pvar>
        <pvar name="this" address="2" ByteSize="4">
          <type typename="SchedulePoint" reference="1"></type>
        </pvar>
        <pvar name="cday" address="6" ByteSize="1">
          <type typename="signed_char">
          </type>
        </pvar>
        <code>
          <instr mname="" CodeAddress="6834" CodeSize="26">
            <instr mname="" CodeAddress="6834" CodeSize="26">
              <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="6834" CodeSize="25" SrcRow="109">
                <subj>
                  <instr mname="RetVal" CodeAddress="6834" CodeSize="3" SrcRow="109">
                  </instr>
                </subj>
                <instr mname="band" linkedname=".MyPackage.signed_char.band" CodeAddress="6837" CodeSize="21" SrcRow="109">
                  <subj>
                    <instr mname="ReadDay" linkedname=".MyPackage.SchedulePoint.ReadDay" CodeAddress="6838" CodeSize="8" SrcRow="109">
                      <subj><instr mname="Me" /></subj>
                    </instr>
                  </subj>
                  <instr mname="" CodeAddress="6848" CodeSize="9">
                    <instr mname="shl" linkedname=".MyPackage.signed_char.shl" CodeAddress="6848" CodeSize="9" SrcRow="109">
                      <subj>
                        <constv typename="signed_char" value="1" />
                      </subj>
                      <instr mname="cday" linkedname=".MyPackage.SchedulePoint.CheckDay.cday" SrcRow="109">
                      </instr>
                    </instr>
                  </instr>
                </instr>
              </instr>
              <instr mname="ExitFunction" CodeAddress="6859" CodeSize="1" SrcRow="109">
              </instr>
            </instr>
          </instr>
        </code>
      </meth>
    </class>
    <gvar mem="ROM" name="ParamField" address="184" ByteSize="858">
      <type typename="Array">
        <ArrayItem maxlen="39" typename="TParamsField">
        </ArrayItem>
      </type>
      <valueexpr>
        <instr mname="">
          <instr mname="">
            <constv typename="signed_char" value="0" />
            <constv typename="String" value="WC" />
            <constv typename="String" value="Wlacz centralne ogrzewanie" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="1" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="32" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="1" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
          </instr>
          <instr mname="">
            <constv typename="signed_char" value="1" />
            <constv typename="String" value="CO" />
            <constv typename="String" value="Temperatura w zbiorniku C.O." />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="100" />
            <constv typename="signed_char" value="35" />
            <constv typename="signed_char" value="1" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
          </instr>
          <instr mname="">
            <constv typename="signed_char" value="2" />
            <constv typename="String" value="CWU" />
            <constv typename="String" value="Temperatura w zbiorniku C.W.U." />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="100" />
            <constv typename="signed_char" value="38" />
            <constv typename="signed_char" value="1" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
          </instr>
          <instr mname="">
            <constv typename="signed_char" value="3" />
            <constv typename="String" value="CBM" />
            <constv typename="String" value="Zalaczenie PG2 - chlodzenie poddasza" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="1" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="32" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="1" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
          </instr>
          <instr mname="">
            <constv typename="signed_char" value="4" />
            <constv typename="String" value="PAS" />
            <constv typename="String" value="Temperatura pasteryzacji" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="100" />
            <constv typename="signed_char" value="70" />
            <constv typename="signed_char" value="1" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
          </instr>
          <instr mname="">
            <constv typename="signed_char" value="5" />
            <constv typename="String" value="BM" />
            <constv typename="String" value="Estymowana temperatura w budynku mieszkalnym" />
            <constv typename="signed_char" value="-20" />
            <constv typename="signed_char" value="100" />
            <constv typename="signed_char" value="25" />
            <constv typename="signed_char" value="1" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
          </instr>
          <instr mname="">
            <constv typename="signed_char" value="6" />
            <constv typename="String" value="KPO" />
            <constv typename="String" value="Sterowanie temp C.O. przy pomocy krzywej pogodowej" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="1" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="32" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="1" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
          </instr>
          <instr mname="">
            <constv typename="signed_char" value="7" />
            <constv typename="String" value="POG" />
            <constv typename="String" value="Nachylenie krzywej pogodowej" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="20" />
            <constv typename="signed_char" value="6" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="1" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
          </instr>
          <instr mname="">
            <constv typename="signed_char" value="8" />
            <constv typename="String" value="TA1" />
            <constv typename="String" value="Grzanie C.O. tylko w czasie II taryfy" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="1" />
            <constv typename="signed_char" value="1" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="32" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="1" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
          </instr>
          <instr mname="">
            <constv typename="signed_char" value="9" />
            <constv typename="String" value="TA2" />
            <constv typename="String" value="Grzanie C.W.U. tylko w czasie II taryfy" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="1" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="32" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="1" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
          </instr>
          <instr mname="">
            <constv typename="signed_char" value="10" />
            <constv typename="String" value="HI1" />
            <constv typename="String" value="Szerokosc histerezy temp. w C.W.U." />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="100" />
            <constv typename="signed_char" value="2" />
            <constv typename="signed_char" value="1" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
          </instr>
          <instr mname="">
            <constv typename="signed_char" value="11" />
            <constv typename="String" value="HI2" />
            <constv typename="String" value="Szerokosc histerezy temp. C.O." />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="100" />
            <constv typename="signed_char" value="2" />
            <constv typename="signed_char" value="1" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
          </instr>
          <instr mname="">
            <constv typename="signed_char" value="12" />
            <constv typename="String" value="AFR" />
            <constv typename="String" value="Temperatura dla blokady przeciwzamrozeniowej" />
            <constv typename="signed_char" value="-40" />
            <constv typename="signed_char" value="50" />
            <constv typename="signed_char" value="-10" />
            <constv typename="signed_char" value="1" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
          </instr>
          <instr mname="">
            <constv typename="signed_char" value="13" />
            <constv typename="String" value="POW" />
            <constv typename="String" value="Temperatura przelaczania na pompe P/W" />
            <constv typename="signed_char" value="-30" />
            <constv typename="signed_char" value="50" />
            <constv typename="signed_char" value="5" />
            <constv typename="signed_char" value="1" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
          </instr>
          <instr mname="">
            <constv typename="signed_char" value="14" />
            <constv typename="String" value="HPW" />
            <constv typename="String" value="Histereza przelaczania pompy P/W" />
            <constv typename="signed_char" value="-100" />
            <constv typename="signed_char" value="100" />
            <constv typename="signed_char" value="30" />
            <constv typename="signed_char" value="1" />
            <constv typename="signed_char" value="1" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
          </instr>
          <instr mname="">
            <constv typename="signed_char" value="15" />
            <constv typename="String" value="WYP" />
            <constv typename="String" value="Czas wyprzedzenia PG1 przed S1 i S2" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_short" value="999" />
            <constv typename="signed_char" value="30" />
            <constv typename="signed_char" value="8" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
          </instr>
          <instr mname="">
            <constv typename="signed_char" value="16" />
            <constv typename="String" value="CC7" />
            <constv typename="String" value="Minimalny czas ON sprezarek" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_short" value="999" />
            <constv typename="signed_char" value="30" />
            <constv typename="signed_char" value="8" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
          </instr>
          <instr mname="">
            <constv typename="signed_char" value="17" />
            <constv typename="String" value="CC6" />
            <constv typename="String" value="Minimalny czas OFF sprezarek" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_short" value="999" />
            <constv typename="unsigned_char" value="180" />
            <constv typename="signed_char" value="8" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
          </instr>
          <instr mname="">
            <constv typename="signed_char" value="18" />
            <constv typename="String" value="PTO" />
            <constv typename="String" value="Dopuszczalny maksymalny czas pasteryzacji" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_short" value="1000" />
            <constv typename="unsigned_char" value="180" />
            <constv typename="signed_char" value="9" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
          </instr>
          <instr mname="">
            <constv typename="signed_char" value="19" />
            <constv typename="String" value="TPA" />
            <constv typename="String" value="Czas pasteryzacji" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="100" />
            <constv typename="signed_char" value="30" />
            <constv typename="signed_char" value="9" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
          </instr>
          <instr mname="">
            <constv typename="signed_char" value="20" />
            <constv typename="String" value="ROZ" />
            <constv typename="String" value="Roznica temp.zewn. i BM przy ktorej dzialaja dwie sprezarki" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="100" />
            <constv typename="signed_char" value="40" />
            <constv typename="signed_char" value="1" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
          </instr>
          <instr mname="">
            <constv typename="signed_char" value="21" />
            <constv typename="String" value="TBM" />
            <constv typename="String" value="Stala czasowa budynku" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_short" value="1000" />
            <constv typename="signed_char" value="90" />
            <constv typename="signed_char" value="10" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
          </instr>
          <instr mname="">
            <constv typename="signed_char" value="22" />
            <constv typename="String" value="MCO" />
            <constv typename="String" value="Maksymalna temperatura w zbiorniku CO" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="100" />
            <constv typename="signed_char" value="38" />
            <constv typename="signed_char" value="1" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
          </instr>
          <instr mname="">
            <constv typename="signed_char" value="23" />
            <constv typename="String" value="MCW" />
            <constv typename="String" value="Maksymalna temperatura w zbiorniku CWU" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="100" />
            <constv typename="signed_char" value="50" />
            <constv typename="signed_char" value="1" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
          </instr>
          <instr mname="">
            <constv typename="signed_char" value="24" />
            <constv typename="String" value="DPO" />
            <constv typename="String" value="Temperatura do zalaczanie pomp obiegowych CO" />
            <constv typename="signed_short" value="-300" />
            <constv typename="signed_short" value="300" />
            <constv typename="unsigned_char" value="160" />
            <constv typename="signed_char" value="1" />
            <constv typename="signed_char" value="1" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
          </instr>
          <instr mname="">
            <constv typename="signed_char" value="25" />
            <constv typename="String" value="SCO" />
            <constv typename="String" value="Obejscie wewnetrznego harmonogramu" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="1" />
            <constv typename="signed_char" value="1" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="32" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="1" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
          </instr>
          <instr mname="">
            <constv typename="signed_char" value="26" />
            <constv typename="String" value="TRB" />
            <constv typename="String" value="Temperatura z modelu inercyjnego" />
            <constv typename="signed_short" value="-1000" />
            <constv typename="signed_short" value="1000" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="1" />
            <constv typename="signed_char" value="1" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
          </instr>
          <instr mname="">
            <constv typename="signed_char" value="27" />
            <constv typename="String" value="TWE" />
            <constv typename="String" value="Temperatura zalaczania szybkiego biegu wentylatora" />
            <constv typename="signed_short" value="-300" />
            <constv typename="signed_short" value="1000" />
            <constv typename="signed_char" value="100" />
            <constv typename="signed_char" value="1" />
            <constv typename="signed_char" value="1" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
          </instr>
          <instr mname="">
            <constv typename="signed_char" value="28" />
            <constv typename="String" value="MOC" />
            <constv typename="String" value="Moc Inwertera powyzej ktorej mozemy zalaczyc grzanie" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="60" />
            <constv typename="signed_char" value="30" />
            <constv typename="signed_char" value="11" />
            <constv typename="signed_char" value="1" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
          </instr>
          <instr mname="">
            <constv typename="signed_char" value="29" />
            <constv typename="String" value="SEr" />
            <constv typename="String" value="Serial address (Modbus and CAN)" />
            <constv typename="signed_char" value="1" />
            <constv typename="signed_char" value="100" />
            <constv typename="signed_char" value="2" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
          </instr>
          <instr mname="">
            <constv typename="signed_char" value="30" />
            <constv typename="String" value="bAU" />
            <constv typename="String" value="Serial baudrate (Modbus)" />
            <constv typename="signed_char" value="2" />
            <constv typename="signed_char" value="10" />
            <constv typename="signed_char" value="4" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="32" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="1" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
          </instr>
          <instr mname="">
            <constv typename="signed_char" value="31" />
            <constv typename="String" value="COM" />
            <constv typename="String" value="Serial settings (Modbus)" />
            <constv typename="signed_char" value="11" />
            <constv typename="signed_char" value="13" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="32" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="1" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
          </instr>
          <instr mname="">
            <constv typename="signed_char" value="32" />
            <constv typename="String" value="BUZ" />
            <constv typename="String" value="Buzzer czas aktywacji" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="15" />
            <constv typename="signed_char" value="1" />
            <constv typename="signed_char" value="9" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
          </instr>
          <instr mname="">
            <constv typename="signed_char" value="33" />
            <constv typename="String" value="AdL" />
            <constv typename="String" value="Opoznienie aktywacji stycznika alarmu" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_short" value="999" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="8" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
          </instr>
          <instr mname="">
            <constv typename="signed_char" value="34" />
            <constv typename="String" value="AOF" />
            <constv typename="String" value="Stycznik alarmu aktywny gdy jednostka WYL ?" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="1" />
            <constv typename="signed_char" value="1" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="32" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="1" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
          </instr>
          <instr mname="">
            <constv typename="signed_char" value="35" />
            <constv typename="String" value="y01" />
            <constv typename="String" value="ON/OFF" />
            <constv typename="signed_char" value="14" />
            <constv typename="signed_char" value="15" />
            <constv typename="signed_char" value="1" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="32" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="1" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
          </instr>
          <instr mname="">
            <constv typename="signed_char" value="36" />
            <constv typename="String" value="y07" />
            <constv typename="String" value="Przywroc ustawienia standardowe" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="1" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="32" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="1" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
          </instr>
          <instr mname="">
            <constv typename="signed_char" value="37" />
            <constv typename="String" value="L01" />
            <constv typename="String" value="Haslo poziom 1" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_short" value="999" />
            <constv typename="signed_char" value="100" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
          </instr>
          <instr mname="">
            <constv typename="signed_char" value="38" />
            <constv typename="String" value="L02" />
            <constv typename="String" value="Haslo poziom 2" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_short" value="999" />
            <constv typename="unsigned_char" value="200" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
          </instr>
        </instr>
      </valueexpr>
    </gvar>
    <gvar mem="ROM" name="MaskParams" address="1042" ByteSize="112">
      <type typename="Array">
        <ArrayItem maxlen="16" typename="TMask">
        </ArrayItem>
      </type>
      <valueexpr>
        <instr mname="">
          <instr mname="">
            <constv typename="String" value="NO" />
          </instr>
          <instr mname="">
            <constv typename="String" value="YES" />
          </instr>
          <instr mname="">
            <constv typename="String" value="0" />
          </instr>
          <instr mname="">
            <constv typename="String" value="12" />
          </instr>
          <instr mname="">
            <constv typename="String" value="24" />
          </instr>
          <instr mname="">
            <constv typename="String" value="48" />
          </instr>
          <instr mname="">
            <constv typename="String" value="96" />
          </instr>
          <instr mname="">
            <constv typename="String" value="144" />
          </instr>
          <instr mname="">
            <constv typename="String" value="192" />
          </instr>
          <instr mname="">
            <constv typename="String" value="288" />
          </instr>
          <instr mname="">
            <constv typename="String" value="384" />
          </instr>
          <instr mname="">
            <constv typename="String" value="8N1" />
          </instr>
          <instr mname="">
            <constv typename="String" value="8E1" />
          </instr>
          <instr mname="">
            <constv typename="String" value="8N2" />
          </instr>
          <instr mname="">
            <constv typename="String" value="OFF" />
          </instr>
          <instr mname="">
            <constv typename="String" value="ON" />
          </instr>
        </instr>
      </valueexpr>
    </gvar>
    <gvar mem="ROM" name="UnitTab" address="1154" ByteSize="96">
      <type typename="Array">
        <ArrayItem maxlen="12" typename="TUnit">
        </ArrayItem>
      </type>
      <valueexpr>
        <instr mname="">
          <instr mname="">
            <constv typename="String" value="" />
          </instr>
          <instr mname="">
            <constv typename="String" value="&#194;&#176;C" />
          </instr>
          <instr mname="">
            <constv typename="String" value="K" />
          </instr>
          <instr mname="">
            <constv typename="String" value="&#194;&#176;F" />
          </instr>
          <instr mname="">
            <constv typename="String" value="bar" />
          </instr>
          <instr mname="">
            <constv typename="String" value="%" />
          </instr>
          <instr mname="">
            <constv typename="String" value="Time" />
          </instr>
          <instr mname="">
            <constv typename="String" value="Psi" />
          </instr>
          <instr mname="">
            <constv typename="String" value="s" />
          </instr>
          <instr mname="">
            <constv typename="String" value="min" />
          </instr>
          <instr mname="">
            <constv typename="String" value="h" />
          </instr>
          <instr mname="">
            <constv typename="String" value="kW" />
          </instr>
        </instr>
      </valueexpr>
    </gvar>
    <item name="modbusdecl">
      <item name="ModbusTable">
      </item>
      <constv>
        <type typename="unsigned_char">
        </type>
        <valueexpr><constv value="128"/></valueexpr>
      </constv>
      <constv name="sum" ByteSize="2">
        <type typename="signed_short">
        </type>
        <valueexpr><constv value="3000"/></valueexpr>
        <constv ByteSize="1">
          <type typename="signed_char">
          </type>
          <valueexpr><constv value="0"/></valueexpr>
        </constv>
      </constv>
      <item name="geti">
        <constv>
          <type typename="signed_char">
          </type>
          <valueexpr><constv value="0"/></valueexpr>
        </constv>
      </item>
    </item>
    <item name="modbusdecl">
      <item name="ModbusTable">
      </item>
      <constv>
        <type typename="unsigned_char">
        </type>
        <valueexpr><constv value="128"/></valueexpr>
      </constv>
      <constv name="sum" ByteSize="2">
        <type typename="signed_short">
        </type>
        <valueexpr><constv value="3001"/></valueexpr>
        <constv ByteSize="1">
          <type typename="signed_char">
          </type>
          <valueexpr><constv value="1"/></valueexpr>
        </constv>
      </constv>
      <item name="geti">
        <constv>
          <type typename="signed_char">
          </type>
          <valueexpr><constv value="1"/></valueexpr>
        </constv>
      </item>
    </item>
    <item name="modbusdecl">
      <item name="ModbusTable">
      </item>
      <constv>
        <type typename="unsigned_char">
        </type>
        <valueexpr><constv value="128"/></valueexpr>
      </constv>
      <constv name="sum" ByteSize="2">
        <type typename="signed_short">
        </type>
        <valueexpr><constv value="3002"/></valueexpr>
        <constv ByteSize="1">
          <type typename="signed_char">
          </type>
          <valueexpr><constv value="2"/></valueexpr>
        </constv>
      </constv>
      <item name="geti">
        <constv>
          <type typename="signed_char">
          </type>
          <valueexpr><constv value="2"/></valueexpr>
        </constv>
      </item>
    </item>
    <item name="modbusdecl">
      <item name="ModbusTable">
      </item>
      <constv>
        <type typename="unsigned_char">
        </type>
        <valueexpr><constv value="128"/></valueexpr>
      </constv>
      <constv name="sum" ByteSize="2">
        <type typename="signed_short">
        </type>
        <valueexpr><constv value="3003"/></valueexpr>
        <constv ByteSize="1">
          <type typename="signed_char">
          </type>
          <valueexpr><constv value="3"/></valueexpr>
        </constv>
      </constv>
      <item name="geti">
        <constv>
          <type typename="signed_char">
          </type>
          <valueexpr><constv value="3"/></valueexpr>
        </constv>
      </item>
    </item>
    <item name="modbusdecl">
      <item name="ModbusTable">
      </item>
      <constv>
        <type typename="unsigned_char">
        </type>
        <valueexpr><constv value="128"/></valueexpr>
      </constv>
      <constv name="sum" ByteSize="2">
        <type typename="signed_short">
        </type>
        <valueexpr><constv value="3004"/></valueexpr>
        <constv ByteSize="1">
          <type typename="signed_char">
          </type>
          <valueexpr><constv value="4"/></valueexpr>
        </constv>
      </constv>
      <item name="geti">
        <constv>
          <type typename="signed_char">
          </type>
          <valueexpr><constv value="4"/></valueexpr>
        </constv>
      </item>
    </item>
    <item name="modbusdecl">
      <item name="ModbusTable">
      </item>
      <constv>
        <type typename="unsigned_char">
        </type>
        <valueexpr><constv value="128"/></valueexpr>
      </constv>
      <constv name="sum" ByteSize="2">
        <type typename="signed_short">
        </type>
        <valueexpr><constv value="3005"/></valueexpr>
        <constv ByteSize="1">
          <type typename="signed_char">
          </type>
          <valueexpr><constv value="5"/></valueexpr>
        </constv>
      </constv>
      <item name="geti">
        <constv>
          <type typename="signed_char">
          </type>
          <valueexpr><constv value="5"/></valueexpr>
        </constv>
      </item>
    </item>
    <item name="modbusdecl">
      <item name="ModbusTable">
      </item>
      <constv>
        <type typename="unsigned_char">
        </type>
        <valueexpr><constv value="128"/></valueexpr>
      </constv>
      <constv name="sum" ByteSize="2">
        <type typename="signed_short">
        </type>
        <valueexpr><constv value="3006"/></valueexpr>
        <constv ByteSize="1">
          <type typename="signed_char">
          </type>
          <valueexpr><constv value="6"/></valueexpr>
        </constv>
      </constv>
      <item name="geti">
        <constv>
          <type typename="signed_char">
          </type>
          <valueexpr><constv value="6"/></valueexpr>
        </constv>
      </item>
    </item>
    <item name="modbusdecl">
      <item name="ModbusTable">
      </item>
      <constv>
        <type typename="unsigned_char">
        </type>
        <valueexpr><constv value="128"/></valueexpr>
      </constv>
      <constv name="sum" ByteSize="2">
        <type typename="signed_short">
        </type>
        <valueexpr><constv value="3007"/></valueexpr>
        <constv ByteSize="1">
          <type typename="signed_char">
          </type>
          <valueexpr><constv value="7"/></valueexpr>
        </constv>
      </constv>
      <item name="geti">
        <constv>
          <type typename="signed_char">
          </type>
          <valueexpr><constv value="7"/></valueexpr>
        </constv>
      </item>
    </item>
    <item name="modbusdecl">
      <item name="ModbusTable">
      </item>
      <constv>
        <type typename="unsigned_char">
        </type>
        <valueexpr><constv value="128"/></valueexpr>
      </constv>
      <constv name="sum" ByteSize="2">
        <type typename="signed_short">
        </type>
        <valueexpr><constv value="3008"/></valueexpr>
        <constv ByteSize="1">
          <type typename="signed_char">
          </type>
          <valueexpr><constv value="8"/></valueexpr>
        </constv>
      </constv>
      <item name="geti">
        <constv>
          <type typename="signed_char">
          </type>
          <valueexpr><constv value="8"/></valueexpr>
        </constv>
      </item>
    </item>
    <item name="modbusdecl">
      <item name="ModbusTable">
      </item>
      <constv>
        <type typename="unsigned_char">
        </type>
        <valueexpr><constv value="128"/></valueexpr>
      </constv>
      <constv name="sum" ByteSize="2">
        <type typename="signed_short">
        </type>
        <valueexpr><constv value="3009"/></valueexpr>
        <constv ByteSize="1">
          <type typename="signed_char">
          </type>
          <valueexpr><constv value="9"/></valueexpr>
        </constv>
      </constv>
      <item name="geti">
        <constv>
          <type typename="signed_char">
          </type>
          <valueexpr><constv value="9"/></valueexpr>
        </constv>
      </item>
    </item>
    <item name="modbusdecl">
      <item name="ModbusTable">
      </item>
      <constv>
        <type typename="unsigned_char">
        </type>
        <valueexpr><constv value="128"/></valueexpr>
      </constv>
      <constv name="sum" ByteSize="2">
        <type typename="signed_short">
        </type>
        <valueexpr><constv value="3010"/></valueexpr>
        <constv ByteSize="1">
          <type typename="signed_char">
          </type>
          <valueexpr><constv value="10"/></valueexpr>
        </constv>
      </constv>
      <item name="geti">
        <constv>
          <type typename="signed_char">
          </type>
          <valueexpr><constv value="10"/></valueexpr>
        </constv>
      </item>
    </item>
    <item name="modbusdecl">
      <item name="ModbusTable">
      </item>
      <constv>
        <type typename="unsigned_char">
        </type>
        <valueexpr><constv value="128"/></valueexpr>
      </constv>
      <constv name="sum" ByteSize="2">
        <type typename="signed_short">
        </type>
        <valueexpr><constv value="3011"/></valueexpr>
        <constv ByteSize="1">
          <type typename="signed_char">
          </type>
          <valueexpr><constv value="11"/></valueexpr>
        </constv>
      </constv>
      <item name="geti">
        <constv>
          <type typename="signed_char">
          </type>
          <valueexpr><constv value="11"/></valueexpr>
        </constv>
      </item>
    </item>
    <item name="modbusdecl">
      <item name="ModbusTable">
      </item>
      <constv>
        <type typename="unsigned_char">
        </type>
        <valueexpr><constv value="128"/></valueexpr>
      </constv>
      <constv name="sum" ByteSize="2">
        <type typename="signed_short">
        </type>
        <valueexpr><constv value="3012"/></valueexpr>
        <constv ByteSize="1">
          <type typename="signed_char">
          </type>
          <valueexpr><constv value="12"/></valueexpr>
        </constv>
      </constv>
      <item name="geti">
        <constv>
          <type typename="signed_char">
          </type>
          <valueexpr><constv value="12"/></valueexpr>
        </constv>
      </item>
    </item>
    <item name="modbusdecl">
      <item name="ModbusTable">
      </item>
      <constv>
        <type typename="unsigned_char">
        </type>
        <valueexpr><constv value="128"/></valueexpr>
      </constv>
      <constv name="sum" ByteSize="2">
        <type typename="signed_short">
        </type>
        <valueexpr><constv value="3013"/></valueexpr>
        <constv ByteSize="1">
          <type typename="signed_char">
          </type>
          <valueexpr><constv value="13"/></valueexpr>
        </constv>
      </constv>
      <item name="geti">
        <constv>
          <type typename="signed_char">
          </type>
          <valueexpr><constv value="13"/></valueexpr>
        </constv>
      </item>
    </item>
    <item name="modbusdecl">
      <item name="ModbusTable">
      </item>
      <constv>
        <type typename="unsigned_char">
        </type>
        <valueexpr><constv value="128"/></valueexpr>
      </constv>
      <constv name="sum" ByteSize="2">
        <type typename="signed_short">
        </type>
        <valueexpr><constv value="3014"/></valueexpr>
        <constv ByteSize="1">
          <type typename="signed_char">
          </type>
          <valueexpr><constv value="14"/></valueexpr>
        </constv>
      </constv>
      <item name="geti">
        <constv>
          <type typename="signed_char">
          </type>
          <valueexpr><constv value="14"/></valueexpr>
        </constv>
      </item>
    </item>
    <item name="modbusdecl">
      <item name="ModbusTable">
      </item>
      <constv>
        <type typename="unsigned_char">
        </type>
        <valueexpr><constv value="128"/></valueexpr>
      </constv>
      <constv name="sum" ByteSize="2">
        <type typename="signed_short">
        </type>
        <valueexpr><constv value="3015"/></valueexpr>
        <constv ByteSize="1">
          <type typename="signed_char">
          </type>
          <valueexpr><constv value="15"/></valueexpr>
        </constv>
      </constv>
      <item name="geti">
        <constv>
          <type typename="signed_char">
          </type>
          <valueexpr><constv value="15"/></valueexpr>
        </constv>
      </item>
    </item>
    <item name="modbusdecl">
      <item name="ModbusTable">
      </item>
      <constv>
        <type typename="unsigned_char">
        </type>
        <valueexpr><constv value="128"/></valueexpr>
      </constv>
      <constv name="sum" ByteSize="2">
        <type typename="signed_short">
        </type>
        <valueexpr><constv value="3016"/></valueexpr>
        <constv ByteSize="1">
          <type typename="signed_char">
          </type>
          <valueexpr><constv value="16"/></valueexpr>
        </constv>
      </constv>
      <item name="geti">
        <constv>
          <type typename="signed_char">
          </type>
          <valueexpr><constv value="16"/></valueexpr>
        </constv>
      </item>
    </item>
    <item name="modbusdecl">
      <item name="ModbusTable">
      </item>
      <constv>
        <type typename="unsigned_char">
        </type>
        <valueexpr><constv value="128"/></valueexpr>
      </constv>
      <constv name="sum" ByteSize="2">
        <type typename="signed_short">
        </type>
        <valueexpr><constv value="3017"/></valueexpr>
        <constv ByteSize="1">
          <type typename="signed_char">
          </type>
          <valueexpr><constv value="17"/></valueexpr>
        </constv>
      </constv>
      <item name="geti">
        <constv>
          <type typename="signed_char">
          </type>
          <valueexpr><constv value="17"/></valueexpr>
        </constv>
      </item>
    </item>
    <item name="modbusdecl">
      <item name="ModbusTable">
      </item>
      <constv>
        <type typename="unsigned_char">
        </type>
        <valueexpr><constv value="128"/></valueexpr>
      </constv>
      <constv name="sum" ByteSize="2">
        <type typename="signed_short">
        </type>
        <valueexpr><constv value="3018"/></valueexpr>
        <constv ByteSize="1">
          <type typename="signed_char">
          </type>
          <valueexpr><constv value="18"/></valueexpr>
        </constv>
      </constv>
      <item name="geti">
        <constv>
          <type typename="signed_char">
          </type>
          <valueexpr><constv value="18"/></valueexpr>
        </constv>
      </item>
    </item>
    <item name="modbusdecl">
      <item name="ModbusTable">
      </item>
      <constv>
        <type typename="unsigned_char">
        </type>
        <valueexpr><constv value="128"/></valueexpr>
      </constv>
      <constv name="sum" ByteSize="2">
        <type typename="signed_short">
        </type>
        <valueexpr><constv value="3019"/></valueexpr>
        <constv ByteSize="1">
          <type typename="signed_char">
          </type>
          <valueexpr><constv value="19"/></valueexpr>
        </constv>
      </constv>
      <item name="geti">
        <constv>
          <type typename="signed_char">
          </type>
          <valueexpr><constv value="19"/></valueexpr>
        </constv>
      </item>
    </item>
    <item name="modbusdecl">
      <item name="ModbusTable">
      </item>
      <constv>
        <type typename="unsigned_char">
        </type>
        <valueexpr><constv value="128"/></valueexpr>
      </constv>
      <constv name="sum" ByteSize="2">
        <type typename="signed_short">
        </type>
        <valueexpr><constv value="3020"/></valueexpr>
        <constv ByteSize="1">
          <type typename="signed_char">
          </type>
          <valueexpr><constv value="20"/></valueexpr>
        </constv>
      </constv>
      <item name="geti">
        <constv>
          <type typename="signed_char">
          </type>
          <valueexpr><constv value="20"/></valueexpr>
        </constv>
      </item>
    </item>
    <item name="modbusdecl">
      <item name="ModbusTable">
      </item>
      <constv>
        <type typename="unsigned_char">
        </type>
        <valueexpr><constv value="128"/></valueexpr>
      </constv>
      <constv name="sum" ByteSize="2">
        <type typename="signed_short">
        </type>
        <valueexpr><constv value="3021"/></valueexpr>
        <constv ByteSize="1">
          <type typename="signed_char">
          </type>
          <valueexpr><constv value="21"/></valueexpr>
        </constv>
      </constv>
      <item name="geti">
        <constv>
          <type typename="signed_char">
          </type>
          <valueexpr><constv value="21"/></valueexpr>
        </constv>
      </item>
    </item>
    <item name="modbusdecl">
      <item name="ModbusTable">
      </item>
      <constv>
        <type typename="unsigned_char">
        </type>
        <valueexpr><constv value="128"/></valueexpr>
      </constv>
      <constv name="sum" ByteSize="2">
        <type typename="signed_short">
        </type>
        <valueexpr><constv value="3022"/></valueexpr>
        <constv ByteSize="1">
          <type typename="signed_char">
          </type>
          <valueexpr><constv value="22"/></valueexpr>
        </constv>
      </constv>
      <item name="geti">
        <constv>
          <type typename="signed_char">
          </type>
          <valueexpr><constv value="22"/></valueexpr>
        </constv>
      </item>
    </item>
    <item name="modbusdecl">
      <item name="ModbusTable">
      </item>
      <constv>
        <type typename="unsigned_char">
        </type>
        <valueexpr><constv value="128"/></valueexpr>
      </constv>
      <constv name="sum" ByteSize="2">
        <type typename="signed_short">
        </type>
        <valueexpr><constv value="3023"/></valueexpr>
        <constv ByteSize="1">
          <type typename="signed_char">
          </type>
          <valueexpr><constv value="23"/></valueexpr>
        </constv>
      </constv>
      <item name="geti">
        <constv>
          <type typename="signed_char">
          </type>
          <valueexpr><constv value="23"/></valueexpr>
        </constv>
      </item>
    </item>
    <item name="modbusdecl">
      <item name="ModbusTable">
      </item>
      <constv>
        <type typename="unsigned_char">
        </type>
        <valueexpr><constv value="128"/></valueexpr>
      </constv>
      <constv name="sum" ByteSize="2">
        <type typename="signed_short">
        </type>
        <valueexpr><constv value="3024"/></valueexpr>
        <constv ByteSize="1">
          <type typename="signed_char">
          </type>
          <valueexpr><constv value="24"/></valueexpr>
        </constv>
      </constv>
      <item name="geti">
        <constv>
          <type typename="signed_char">
          </type>
          <valueexpr><constv value="24"/></valueexpr>
        </constv>
      </item>
    </item>
    <item name="modbusdecl">
      <item name="ModbusTable">
      </item>
      <constv>
        <type typename="unsigned_char">
        </type>
        <valueexpr><constv value="128"/></valueexpr>
      </constv>
      <constv name="sum" ByteSize="2">
        <type typename="signed_short">
        </type>
        <valueexpr><constv value="3025"/></valueexpr>
        <constv ByteSize="1">
          <type typename="signed_char">
          </type>
          <valueexpr><constv value="25"/></valueexpr>
        </constv>
      </constv>
      <item name="geti">
        <constv>
          <type typename="signed_char">
          </type>
          <valueexpr><constv value="25"/></valueexpr>
        </constv>
      </item>
    </item>
    <item name="modbusdecl">
      <item name="ModbusTable">
      </item>
      <constv>
        <type typename="unsigned_char">
        </type>
        <valueexpr><constv value="128"/></valueexpr>
      </constv>
      <constv name="sum" ByteSize="2">
        <type typename="signed_short">
        </type>
        <valueexpr><constv value="3026"/></valueexpr>
        <constv ByteSize="1">
          <type typename="signed_char">
          </type>
          <valueexpr><constv value="26"/></valueexpr>
        </constv>
      </constv>
      <item name="geti">
        <constv>
          <type typename="signed_char">
          </type>
          <valueexpr><constv value="26"/></valueexpr>
        </constv>
      </item>
    </item>
    <item name="modbusdecl">
      <item name="ModbusTable">
      </item>
      <constv>
        <type typename="unsigned_char">
        </type>
        <valueexpr><constv value="128"/></valueexpr>
      </constv>
      <constv name="sum" ByteSize="2">
        <type typename="signed_short">
        </type>
        <valueexpr><constv value="3027"/></valueexpr>
        <constv ByteSize="1">
          <type typename="signed_char">
          </type>
          <valueexpr><constv value="27"/></valueexpr>
        </constv>
      </constv>
      <item name="geti">
        <constv>
          <type typename="signed_char">
          </type>
          <valueexpr><constv value="27"/></valueexpr>
        </constv>
      </item>
    </item>
    <item name="modbusdecl">
      <item name="ModbusTable">
      </item>
      <constv>
        <type typename="unsigned_char">
        </type>
        <valueexpr><constv value="128"/></valueexpr>
      </constv>
      <constv name="sum" ByteSize="2">
        <type typename="signed_short">
        </type>
        <valueexpr><constv value="3028"/></valueexpr>
        <constv ByteSize="1">
          <type typename="signed_char">
          </type>
          <valueexpr><constv value="28"/></valueexpr>
        </constv>
      </constv>
      <item name="geti">
        <constv>
          <type typename="signed_char">
          </type>
          <valueexpr><constv value="28"/></valueexpr>
        </constv>
      </item>
    </item>
    <item name="modbusdecl">
      <item name="ModbusTable">
      </item>
      <constv>
        <type typename="unsigned_char">
        </type>
        <valueexpr><constv value="128"/></valueexpr>
      </constv>
      <constv name="sum" ByteSize="2">
        <type typename="signed_short">
        </type>
        <valueexpr><constv value="3029"/></valueexpr>
        <constv ByteSize="1">
          <type typename="signed_char">
          </type>
          <valueexpr><constv value="29"/></valueexpr>
        </constv>
      </constv>
      <item name="geti">
        <constv>
          <type typename="signed_char">
          </type>
          <valueexpr><constv value="29"/></valueexpr>
        </constv>
      </item>
    </item>
    <item name="modbusdecl">
      <item name="ModbusTable">
      </item>
      <constv>
        <type typename="unsigned_char">
        </type>
        <valueexpr><constv value="128"/></valueexpr>
      </constv>
      <constv name="sum" ByteSize="2">
        <type typename="signed_short">
        </type>
        <valueexpr><constv value="3030"/></valueexpr>
        <constv ByteSize="1">
          <type typename="signed_char">
          </type>
          <valueexpr><constv value="30"/></valueexpr>
        </constv>
      </constv>
      <item name="geti">
        <constv>
          <type typename="signed_char">
          </type>
          <valueexpr><constv value="30"/></valueexpr>
        </constv>
      </item>
    </item>
    <item name="modbusdecl">
      <item name="ModbusTable">
      </item>
      <constv>
        <type typename="unsigned_char">
        </type>
        <valueexpr><constv value="128"/></valueexpr>
      </constv>
      <constv name="sum" ByteSize="2">
        <type typename="signed_short">
        </type>
        <valueexpr><constv value="3031"/></valueexpr>
        <constv ByteSize="1">
          <type typename="signed_char">
          </type>
          <valueexpr><constv value="31"/></valueexpr>
        </constv>
      </constv>
      <item name="geti">
        <constv>
          <type typename="signed_char">
          </type>
          <valueexpr><constv value="31"/></valueexpr>
        </constv>
      </item>
    </item>
    <item name="modbusdecl">
      <item name="ModbusTable">
      </item>
      <constv>
        <type typename="unsigned_char">
        </type>
        <valueexpr><constv value="128"/></valueexpr>
      </constv>
      <constv name="sum" ByteSize="2">
        <type typename="signed_short">
        </type>
        <valueexpr><constv value="3032"/></valueexpr>
        <constv ByteSize="1">
          <type typename="signed_char">
          </type>
          <valueexpr><constv value="32"/></valueexpr>
        </constv>
      </constv>
      <item name="geti">
        <constv>
          <type typename="signed_char">
          </type>
          <valueexpr><constv value="32"/></valueexpr>
        </constv>
      </item>
    </item>
    <item name="modbusdecl">
      <item name="ModbusTable">
      </item>
      <constv>
        <type typename="unsigned_char">
        </type>
        <valueexpr><constv value="128"/></valueexpr>
      </constv>
      <constv name="sum" ByteSize="2">
        <type typename="signed_short">
        </type>
        <valueexpr><constv value="3033"/></valueexpr>
        <constv ByteSize="1">
          <type typename="signed_char">
          </type>
          <valueexpr><constv value="33"/></valueexpr>
        </constv>
      </constv>
      <item name="geti">
        <constv>
          <type typename="signed_char">
          </type>
          <valueexpr><constv value="33"/></valueexpr>
        </constv>
      </item>
    </item>
    <item name="modbusdecl">
      <item name="ModbusTable">
      </item>
      <constv>
        <type typename="unsigned_char">
        </type>
        <valueexpr><constv value="128"/></valueexpr>
      </constv>
      <constv name="sum" ByteSize="2">
        <type typename="signed_short">
        </type>
        <valueexpr><constv value="3034"/></valueexpr>
        <constv ByteSize="1">
          <type typename="signed_char">
          </type>
          <valueexpr><constv value="34"/></valueexpr>
        </constv>
      </constv>
      <item name="geti">
        <constv>
          <type typename="signed_char">
          </type>
          <valueexpr><constv value="34"/></valueexpr>
        </constv>
      </item>
    </item>
    <item name="modbusdecl">
      <item name="ModbusTable">
      </item>
      <constv>
        <type typename="unsigned_char">
        </type>
        <valueexpr><constv value="128"/></valueexpr>
      </constv>
      <constv name="sum" ByteSize="2">
        <type typename="signed_short">
        </type>
        <valueexpr><constv value="3035"/></valueexpr>
        <constv ByteSize="1">
          <type typename="signed_char">
          </type>
          <valueexpr><constv value="35"/></valueexpr>
        </constv>
      </constv>
      <item name="geti">
        <constv>
          <type typename="signed_char">
          </type>
          <valueexpr><constv value="35"/></valueexpr>
        </constv>
      </item>
    </item>
    <item name="modbusdecl">
      <item name="ModbusTable">
      </item>
      <constv>
        <type typename="unsigned_char">
        </type>
        <valueexpr><constv value="128"/></valueexpr>
      </constv>
      <constv name="sum" ByteSize="2">
        <type typename="signed_short">
        </type>
        <valueexpr><constv value="3036"/></valueexpr>
        <constv ByteSize="1">
          <type typename="signed_char">
          </type>
          <valueexpr><constv value="36"/></valueexpr>
        </constv>
      </constv>
      <item name="geti">
        <constv>
          <type typename="signed_char">
          </type>
          <valueexpr><constv value="36"/></valueexpr>
        </constv>
      </item>
    </item>
    <item name="modbusdecl">
      <item name="ModbusTable">
      </item>
      <constv>
        <type typename="unsigned_char">
        </type>
        <valueexpr><constv value="128"/></valueexpr>
      </constv>
      <constv name="sum" ByteSize="2">
        <type typename="signed_short">
        </type>
        <valueexpr><constv value="3037"/></valueexpr>
        <constv ByteSize="1">
          <type typename="signed_char">
          </type>
          <valueexpr><constv value="37"/></valueexpr>
        </constv>
      </constv>
      <item name="geti">
        <constv>
          <type typename="signed_char">
          </type>
          <valueexpr><constv value="37"/></valueexpr>
        </constv>
      </item>
    </item>
    <item name="modbusdecl">
      <item name="ModbusTable">
      </item>
      <constv>
        <type typename="unsigned_char">
        </type>
        <valueexpr><constv value="128"/></valueexpr>
      </constv>
      <constv name="sum" ByteSize="2">
        <type typename="signed_short">
        </type>
        <valueexpr><constv value="3038"/></valueexpr>
        <constv ByteSize="1">
          <type typename="signed_char">
          </type>
          <valueexpr><constv value="38"/></valueexpr>
        </constv>
      </constv>
      <item name="geti">
        <constv>
          <type typename="signed_char">
          </type>
          <valueexpr><constv value="38"/></valueexpr>
        </constv>
      </item>
    </item>
    <item name="modbusdecl">
      <item name="ModbusTable">
      </item>
      <constv>
        <type typename="signed_char">
        </type>
        <valueexpr><constv value="0"/></valueexpr>
      </constv>
      <constv name="sum" ByteSize="2">
        <type typename="signed_short">
        </type>
        <valueexpr><constv value="3039"/></valueexpr>
        <constv ByteSize="1">
          <type typename="signed_char">
          </type>
          <valueexpr><constv value="39"/></valueexpr>
        </constv>
      </constv>
      <constv address="1777" ByteSize="2">
        <type typename="signed_short">
        </type>
        <valueexpr><constv value="300"/></valueexpr>
      </constv>
    </item>
    <class name="TParamsField" address="6861" ByteSize="22" CodeAddress="6861" CodeSize="12" SrcFile="UserInterface.lib">
      <ivar name="VarPtr" address="0" ByteSize="2">
        <type typename="unsigned_short">
        </type>
      </ivar>
      <ivar name="Code" address="2" ByteSize="6">
        <type typename="String">
          <initializer>"3"</initializer>
        </type>
      </ivar>
      <ivar name="Descr" address="8" ByteSize="4">
        <type typename="String">
          <initializer>"1"</initializer>
        </type>
      </ivar>
      <ivar name="Min" address="12" ByteSize="2">
        <type typename="signed_short">
        </type>
      </ivar>
      <ivar name="Max" address="14" ByteSize="2">
        <type typename="signed_short">
        </type>
      </ivar>
      <ivar name="Default" address="16" ByteSize="2">
        <type typename="signed_short">
        </type>
      </ivar>
      <ivar name="MUnit" address="18" ByteSize="1">
        <type typename="unsigned_char">
        </type>
      </ivar>
      <ivar name="Dec1" address="19" bitoffset="0" ByteSize="0" BitSize="1">
        <type typename="bit">
        </type>
      </ivar>
      <ivar name="Dec2" address="19" bitoffset="1" ByteSize="0" BitSize="1">
        <type typename="bit">
        </type>
      </ivar>
      <ivar name="RW" address="19" bitoffset="2" ByteSize="0" BitSize="1">
        <type typename="bit">
        </type>
      </ivar>
      <ivar name="VMin" address="19" bitoffset="3" ByteSize="0" BitSize="1">
        <type typename="bit">
        </type>
      </ivar>
      <ivar name="VMax" address="19" bitoffset="4" ByteSize="0" BitSize="1">
        <type typename="bit">
        </type>
      </ivar>
      <ivar name="Mask" address="19" bitoffset="5" ByteSize="0" BitSize="1">
        <type typename="bit">
        </type>
      </ivar>
      <ivar name="Level" address="20" ByteSize="1">
        <type typename="unsigned_char">
        </type>
      </ivar>
      <ivar name="Visibility" address="21" ByteSize="1">
        <type typename="signed_char">
        </type>
      </ivar>
    </class>
    <class name="TMask" address="6861" ByteSize="7" CodeAddress="6861" CodeSize="12" SrcFile="UserInterface.lib">
      <ivar name="Mask" address="0" ByteSize="7">
        <type typename="String">
          <initializer>"4"</initializer>
        </type>
      </ivar>
    </class>
    <class name="TUnit" address="6861" ByteSize="8" CodeAddress="6861" CodeSize="12" SrcFile="UserInterface.lib">
      <ivar name="Unit" address="0" ByteSize="8">
        <type typename="String">
          <initializer>"5"</initializer>
        </type>
      </ivar>
    </class>
    <class name="TMenuGroups">
      <ivar name="Code">
        <type typename="String">
          <initializer>"3"</initializer>
        </type>
      </ivar>
      <ivar name="Descr">
        <type typename="String">
          <initializer>"21"</initializer>
        </type>
      </ivar>
      <ivar name="AccessLevel">
        <type typename="unsigned_char">
        </type>
      </ivar>
      <ivar name="ActiveCode">
        <type typename="signed_long">
        </type>
      </ivar>
      <ivar name="Start">
        <type typename="unsigned_char">
        </type>
      </ivar>
      <ivar name="Stop">
        <type typename="unsigned_char">
        </type>
      </ivar>
    </class>
    <class name="TUserInterface">
      <ivar name="CurrFormID">
        <type typename="signed_long">
        </type>
      </ivar>
      <ivar name="NewForm">
        <type typename="bit">
        </type>
      </ivar>
      <ivar name="tmrInactive">
        <type typename="TTimerSec">
        </type>
      </ivar>
      <ivar name="InactivityTimeout">
        <type typename="unsigned_short">
        </type>
      </ivar>
      <ivar name="FormHistory">
        <type typename="Array">
          <ArrayItem maxlen="8" typename="signed_long">
          </ArrayItem>
        </type>
      </ivar>
      <ivar name="FormHistoryUsed">
        <type typename="signed_char">
        </type>
      </ivar>
    </class>
    <class name="TMenuInterface">
      <ivar name="super">
        <type typename="TUserInterface">
        </type>
      </ivar>
      <ivar name="CacheArray">
        <type typename="Array">
          <ArrayItem maxlen="32" typename="signed_short">
          </ArrayItem>
        </type>
      </ivar>
      <ivar name="CacheArrayUsed">
        <type typename="signed_char">
        </type>
      </ivar>
      <ivar name="ActiveItem">
        <type typename="signed_short">
        </type>
      </ivar>
      <ivar name="StartItem">
        <type typename="signed_char">
        </type>
      </ivar>
      <ivar name="MenuHistory">
        <type typename="Array">
          <ArrayItem maxlen="8" typename="signed_char">
          </ArrayItem>
        </type>
      </ivar>
      <ivar name="AccessLevel">
        <type typename="unsigned_char">
        </type>
      </ivar>
    </class>
    <class name="TParamForm">
      <ivar name="ActiveItem">
        <type typename="signed_short">
        </type>
      </ivar>
      <ivar name="RedrawScreen">
        <type typename="bit">
        </type>
      </ivar>
      <ivar name="EditMode">
        <type typename="bit">
        </type>
      </ivar>
    </class>
    <class name="TCANVarValMng">
    </class>
    <class name="TCANVarValMng_v2">
      <ivar name="UITargetID">
        <type typename="signed_char">
        </type>
      </ivar>
    </class>
    <class name="TCANVarValMngMB">
      <ivar name="UITargetID">
        <type typename="signed_char">
        </type>
      </ivar>
    </class>
    <class name="TMaxLoopForm">
      <ivar name="LastLoopTime">
        <type typename="signed_long">
        </type>
      </ivar>
      <ivar name="tmrLoop">
        <type typename="TTimer">
        </type>
      </ivar>
      <ivar name="MaxLoopTime">
        <type typename="signed_long">
        </type>
      </ivar>
    </class>
    <class name="TSimpleUI">
      <ivar name="CurrFormID">
        <type typename="unsigned_char">
        </type>
      </ivar>
      <ivar name="NewForm">
        <type typename="bit">
        </type>
      </ivar>
    </class>
    <gvar mem="ROM" name="AlarmsConfig" address="1250" ByteSize="210">
      <type typename="Array">
        <ArrayItem maxlen="10" typename="TAlarmConfig">
        </ArrayItem>
      </type>
      <valueexpr>
        <instr mname="">
          <instr mname="">
            <constv typename="String" value="A01" />
            <constv typename="unsigned_char" value="255" />
            <constv typename="signed_char" value="60" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="2" />
            <constv typename="signed_char" value="1" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="String" value="General alarm" />
          </instr>
          <instr mname="">
            <constv typename="String" value="A85" />
            <constv typename="signed_char" value="5" />
            <constv typename="signed_char" value="60" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="3" />
            <constv typename="signed_char" value="1" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="String" value="CzT1 - temp. w zbiorniku buforowym przekroczyla bezpieczne wartosci" />
          </instr>
          <instr mname="">
            <constv typename="String" value="A87" />
            <constv typename="signed_char" value="5" />
            <constv typename="signed_char" value="60" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="3" />
            <constv typename="signed_char" value="1" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="String" value="CzT3 - awaria czujnika temp. zewn." />
          </instr>
          <instr mname="">
            <constv typename="String" value="A88" />
            <constv typename="signed_char" value="5" />
            <constv typename="signed_char" value="60" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="3" />
            <constv typename="signed_char" value="1" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="String" value="CzT4 - temp. w zbiorniku cwu przekroczyla bezpieczne wartosci" />
          </instr>
          <instr mname="">
            <constv typename="String" value="A90" />
            <constv typename="signed_char" value="5" />
            <constv typename="signed_char" value="60" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="3" />
            <constv typename="signed_char" value="1" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="String" value="CzT6 - zbyt niska temp. glikolu za parownikiem PC W/W" />
          </instr>
          <instr mname="">
            <constv typename="String" value="A02" />
            <constv typename="signed_char" value="5" />
            <constv typename="signed_char" value="60" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="3" />
            <constv typename="signed_char" value="1" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="String" value="CzP - zanik lub niedostateczny przeplyw glikolu" />
          </instr>
          <instr mname="">
            <constv typename="String" value="A03" />
            <constv typename="signed_char" value="5" />
            <constv typename="signed_char" value="60" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="3" />
            <constv typename="signed_char" value="1" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="String" value="PWN 1 - za niskie lub za wysokie cisnienie freonu w obiegu S1" />
          </instr>
          <instr mname="">
            <constv typename="String" value="A04" />
            <constv typename="signed_char" value="5" />
            <constv typename="signed_char" value="60" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="3" />
            <constv typename="signed_char" value="1" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="String" value="PWN 2 - za niskie lub za wysokie ci&#197;&#155;nienie freonu w obiegu S2" />
          </instr>
          <instr mname="">
            <constv typename="String" value="A05" />
            <constv typename="signed_char" value="5" />
            <constv typename="signed_char" value="60" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="3" />
            <constv typename="signed_char" value="1" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="String" value="PWN 3 - za niskie lub za wysokie ci&#197;&#155;nienie freonu w obiegu S3" />
          </instr>
          <instr mname="">
            <constv typename="String" value="A97" />
            <constv typename="signed_char" value="1" />
            <constv typename="signed_char" value="60" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="3" />
            <constv typename="signed_char" value="1" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="String" value="Przekroczony dopuszczalny czas pasteryzacji" />
          </instr>
        </instr>
      </valueexpr>
    </gvar>
    <item name="modbusdecl">
      <item name="ModbusTable">
      </item>
      <constv>
        <type typename="signed_char">
        </type>
        <valueexpr><constv value="0"/></valueexpr>
      </constv>
      <constv name="sum" ByteSize="2">
        <type typename="signed_short">
        </type>
        <valueexpr><constv value="2002"/></valueexpr>
        <constv ByteSize="1">
          <type typename="signed_char">
          </type>
          <valueexpr><constv value="0"/></valueexpr>
        </constv>
      </constv>
      <item name="AlarmActive">
      </item>
    </item>
    <item name="modbusdecl">
      <item name="ModbusTable">
      </item>
      <constv>
        <type typename="signed_char">
        </type>
        <valueexpr><constv value="0"/></valueexpr>
      </constv>
      <constv name="sum" ByteSize="2">
        <type typename="signed_short">
        </type>
        <valueexpr><constv value="2003"/></valueexpr>
        <constv ByteSize="1">
          <type typename="signed_char">
          </type>
          <valueexpr><constv value="1"/></valueexpr>
        </constv>
      </constv>
      <item name="AlarmActive">
      </item>
    </item>
    <item name="modbusdecl">
      <item name="ModbusTable">
      </item>
      <constv>
        <type typename="signed_char">
        </type>
        <valueexpr><constv value="0"/></valueexpr>
      </constv>
      <constv name="sum" ByteSize="2">
        <type typename="signed_short">
        </type>
        <valueexpr><constv value="2004"/></valueexpr>
        <constv ByteSize="1">
          <type typename="signed_char">
          </type>
          <valueexpr><constv value="2"/></valueexpr>
        </constv>
      </constv>
      <item name="AlarmActive">
      </item>
    </item>
    <item name="modbusdecl">
      <item name="ModbusTable">
      </item>
      <constv>
        <type typename="signed_char">
        </type>
        <valueexpr><constv value="0"/></valueexpr>
      </constv>
      <constv name="sum" ByteSize="2">
        <type typename="signed_short">
        </type>
        <valueexpr><constv value="2005"/></valueexpr>
        <constv ByteSize="1">
          <type typename="signed_char">
          </type>
          <valueexpr><constv value="3"/></valueexpr>
        </constv>
      </constv>
      <item name="AlarmActive">
      </item>
    </item>
    <item name="modbusdecl">
      <item name="ModbusTable">
      </item>
      <constv>
        <type typename="signed_char">
        </type>
        <valueexpr><constv value="0"/></valueexpr>
      </constv>
      <constv name="sum" ByteSize="2">
        <type typename="signed_short">
        </type>
        <valueexpr><constv value="2006"/></valueexpr>
        <constv ByteSize="1">
          <type typename="signed_char">
          </type>
          <valueexpr><constv value="4"/></valueexpr>
        </constv>
      </constv>
      <item name="AlarmActive">
      </item>
    </item>
    <item name="modbusdecl">
      <item name="ModbusTable">
      </item>
      <constv>
        <type typename="signed_char">
        </type>
        <valueexpr><constv value="0"/></valueexpr>
      </constv>
      <constv name="sum" ByteSize="2">
        <type typename="signed_short">
        </type>
        <valueexpr><constv value="2007"/></valueexpr>
        <constv ByteSize="1">
          <type typename="signed_char">
          </type>
          <valueexpr><constv value="5"/></valueexpr>
        </constv>
      </constv>
      <item name="AlarmActive">
      </item>
    </item>
    <item name="modbusdecl">
      <item name="ModbusTable">
      </item>
      <constv>
        <type typename="signed_char">
        </type>
        <valueexpr><constv value="0"/></valueexpr>
      </constv>
      <constv name="sum" ByteSize="2">
        <type typename="signed_short">
        </type>
        <valueexpr><constv value="2008"/></valueexpr>
        <constv ByteSize="1">
          <type typename="signed_char">
          </type>
          <valueexpr><constv value="6"/></valueexpr>
        </constv>
      </constv>
      <item name="AlarmActive">
      </item>
    </item>
    <item name="modbusdecl">
      <item name="ModbusTable">
      </item>
      <constv>
        <type typename="signed_char">
        </type>
        <valueexpr><constv value="0"/></valueexpr>
      </constv>
      <constv name="sum" ByteSize="2">
        <type typename="signed_short">
        </type>
        <valueexpr><constv value="2009"/></valueexpr>
        <constv ByteSize="1">
          <type typename="signed_char">
          </type>
          <valueexpr><constv value="7"/></valueexpr>
        </constv>
      </constv>
      <item name="AlarmActive">
      </item>
    </item>
    <item name="modbusdecl">
      <item name="ModbusTable">
      </item>
      <constv>
        <type typename="signed_char">
        </type>
        <valueexpr><constv value="0"/></valueexpr>
      </constv>
      <constv name="sum" ByteSize="2">
        <type typename="signed_short">
        </type>
        <valueexpr><constv value="2010"/></valueexpr>
        <constv ByteSize="1">
          <type typename="signed_char">
          </type>
          <valueexpr><constv value="8"/></valueexpr>
        </constv>
      </constv>
      <item name="AlarmActive">
      </item>
    </item>
    <item name="modbusdecl">
      <item name="ModbusTable">
      </item>
      <constv>
        <type typename="signed_char">
        </type>
        <valueexpr><constv value="0"/></valueexpr>
      </constv>
      <constv name="sum" ByteSize="2">
        <type typename="signed_short">
        </type>
        <valueexpr><constv value="2011"/></valueexpr>
        <constv ByteSize="1">
          <type typename="signed_char">
          </type>
          <valueexpr><constv value="9"/></valueexpr>
        </constv>
      </constv>
      <item name="AlarmActive">
      </item>
    </item>
    <item name="modbusdecl">
      <item name="ModbusTable">
      </item>
      <constv>
        <type typename="signed_char">
        </type>
        <valueexpr><constv value="0"/></valueexpr>
      </constv>
      <constv name="sum" ByteSize="2">
        <type typename="signed_short">
        </type>
        <valueexpr><constv value="2258"/></valueexpr>
        <constv name="mul" ByteSize="1">
          <type typename="signed_char">
          </type>
          <valueexpr><constv value="0"/></valueexpr>
          <constv ByteSize="1">
            <type typename="signed_char">
            </type>
            <valueexpr><constv value="2"/></valueexpr>
          </constv>
        </constv>
      </constv>
      <item name="Sec">
      </item>
    </item>
    <item name="modbusdecl">
      <item name="ModbusTable">
      </item>
      <constv>
        <type typename="signed_char">
        </type>
        <valueexpr><constv value="0"/></valueexpr>
      </constv>
      <constv name="sum" ByteSize="2">
        <type typename="signed_short">
        </type>
        <valueexpr><constv value="2260"/></valueexpr>
        <constv name="mul" ByteSize="1">
          <type typename="signed_char">
          </type>
          <valueexpr><constv value="2"/></valueexpr>
          <constv ByteSize="1">
            <type typename="signed_char">
            </type>
            <valueexpr><constv value="2"/></valueexpr>
          </constv>
        </constv>
      </constv>
      <item name="Sec">
      </item>
    </item>
    <item name="modbusdecl">
      <item name="ModbusTable">
      </item>
      <constv>
        <type typename="signed_char">
        </type>
        <valueexpr><constv value="0"/></valueexpr>
      </constv>
      <constv name="sum" ByteSize="2">
        <type typename="signed_short">
        </type>
        <valueexpr><constv value="2262"/></valueexpr>
        <constv name="mul" ByteSize="1">
          <type typename="signed_char">
          </type>
          <valueexpr><constv value="4"/></valueexpr>
          <constv ByteSize="1">
            <type typename="signed_char">
            </type>
            <valueexpr><constv value="2"/></valueexpr>
          </constv>
        </constv>
      </constv>
      <item name="Sec">
      </item>
    </item>
    <item name="modbusdecl">
      <item name="ModbusTable">
      </item>
      <constv>
        <type typename="signed_char">
        </type>
        <valueexpr><constv value="0"/></valueexpr>
      </constv>
      <constv name="sum" ByteSize="2">
        <type typename="signed_short">
        </type>
        <valueexpr><constv value="2264"/></valueexpr>
        <constv name="mul" ByteSize="1">
          <type typename="signed_char">
          </type>
          <valueexpr><constv value="6"/></valueexpr>
          <constv ByteSize="1">
            <type typename="signed_char">
            </type>
            <valueexpr><constv value="2"/></valueexpr>
          </constv>
        </constv>
      </constv>
      <item name="Sec">
      </item>
    </item>
    <item name="modbusdecl">
      <item name="ModbusTable">
      </item>
      <constv>
        <type typename="signed_char">
        </type>
        <valueexpr><constv value="0"/></valueexpr>
      </constv>
      <constv name="sum" ByteSize="2">
        <type typename="signed_short">
        </type>
        <valueexpr><constv value="2266"/></valueexpr>
        <constv name="mul" ByteSize="1">
          <type typename="signed_char">
          </type>
          <valueexpr><constv value="8"/></valueexpr>
          <constv ByteSize="1">
            <type typename="signed_char">
            </type>
            <valueexpr><constv value="2"/></valueexpr>
          </constv>
        </constv>
      </constv>
      <item name="Sec">
      </item>
    </item>
    <item name="modbusdecl">
      <item name="ModbusTable">
      </item>
      <constv>
        <type typename="signed_char">
        </type>
        <valueexpr><constv value="0"/></valueexpr>
      </constv>
      <constv name="sum" ByteSize="2">
        <type typename="signed_short">
        </type>
        <valueexpr><constv value="2268"/></valueexpr>
        <constv name="mul" ByteSize="1">
          <type typename="signed_char">
          </type>
          <valueexpr><constv value="10"/></valueexpr>
          <constv ByteSize="1">
            <type typename="signed_char">
            </type>
            <valueexpr><constv value="2"/></valueexpr>
          </constv>
        </constv>
      </constv>
      <item name="Sec">
      </item>
    </item>
    <item name="modbusdecl">
      <item name="ModbusTable">
      </item>
      <constv>
        <type typename="signed_char">
        </type>
        <valueexpr><constv value="0"/></valueexpr>
      </constv>
      <constv name="sum" ByteSize="2">
        <type typename="signed_short">
        </type>
        <valueexpr><constv value="2270"/></valueexpr>
        <constv name="mul" ByteSize="1">
          <type typename="signed_char">
          </type>
          <valueexpr><constv value="12"/></valueexpr>
          <constv ByteSize="1">
            <type typename="signed_char">
            </type>
            <valueexpr><constv value="2"/></valueexpr>
          </constv>
        </constv>
      </constv>
      <item name="Sec">
      </item>
    </item>
    <item name="modbusdecl">
      <item name="ModbusTable">
      </item>
      <constv>
        <type typename="signed_char">
        </type>
        <valueexpr><constv value="0"/></valueexpr>
      </constv>
      <constv name="sum" ByteSize="2">
        <type typename="signed_short">
        </type>
        <valueexpr><constv value="2272"/></valueexpr>
        <constv name="mul" ByteSize="1">
          <type typename="signed_char">
          </type>
          <valueexpr><constv value="14"/></valueexpr>
          <constv ByteSize="1">
            <type typename="signed_char">
            </type>
            <valueexpr><constv value="2"/></valueexpr>
          </constv>
        </constv>
      </constv>
      <item name="Sec">
      </item>
    </item>
    <item name="modbusdecl">
      <item name="ModbusTable">
      </item>
      <constv>
        <type typename="signed_char">
        </type>
        <valueexpr><constv value="0"/></valueexpr>
      </constv>
      <constv name="sum" ByteSize="2">
        <type typename="signed_short">
        </type>
        <valueexpr><constv value="2274"/></valueexpr>
        <constv name="mul" ByteSize="1">
          <type typename="signed_char">
          </type>
          <valueexpr><constv value="16"/></valueexpr>
          <constv ByteSize="1">
            <type typename="signed_char">
            </type>
            <valueexpr><constv value="2"/></valueexpr>
          </constv>
        </constv>
      </constv>
      <item name="Sec">
      </item>
    </item>
    <item name="modbusdecl">
      <item name="ModbusTable">
      </item>
      <constv>
        <type typename="signed_char">
        </type>
        <valueexpr><constv value="0"/></valueexpr>
      </constv>
      <constv name="sum" ByteSize="2">
        <type typename="signed_short">
        </type>
        <valueexpr><constv value="2276"/></valueexpr>
        <constv name="mul" ByteSize="1">
          <type typename="signed_char">
          </type>
          <valueexpr><constv value="18"/></valueexpr>
          <constv ByteSize="1">
            <type typename="signed_char">
            </type>
            <valueexpr><constv value="2"/></valueexpr>
          </constv>
        </constv>
      </constv>
      <item name="Sec">
      </item>
    </item>
    <class name="TAlarmConfig" address="6861" ByteSize="21" CodeAddress="6861" CodeSize="12" SrcFile="alarms.lib">
      <ivar name="Code" address="0" ByteSize="6">
        <type typename="String">
          <initializer>"3"</initializer>
        </type>
      </ivar>
      <ivar name="ResetID" address="6" ByteSize="1">
        <type typename="unsigned_char">
        </type>
      </ivar>
      <ivar name="ResetTime" address="7" ByteSize="1">
        <type typename="unsigned_char">
        </type>
      </ivar>
      <ivar name="StartupDelayID" address="8" ByteSize="2">
        <type typename="unsigned_short">
        </type>
      </ivar>
      <ivar name="DelayID" address="10" ByteSize="2">
        <type typename="unsigned_short">
        </type>
      </ivar>
      <ivar name="StandbyActive" address="12" bitoffset="0" ByteSize="0" BitSize="1">
        <type typename="bit">
        </type>
      </ivar>
      <ivar name="SetAlarmR" address="12" bitoffset="1" ByteSize="0" BitSize="1">
        <type typename="bit">
        </type>
      </ivar>
      <ivar name="SetWarningR" address="12" bitoffset="2" ByteSize="0" BitSize="1">
        <type typename="bit">
        </type>
      </ivar>
      <ivar name="VReset" address="12" bitoffset="3" ByteSize="0" BitSize="1">
        <type typename="bit">
        </type>
      </ivar>
      <ivar name="VStartupDelay" address="12" bitoffset="4" ByteSize="0" BitSize="1">
        <type typename="bit">
        </type>
      </ivar>
      <ivar name="VDelay" address="12" bitoffset="5" ByteSize="0" BitSize="1">
        <type typename="bit">
        </type>
      </ivar>
      <ivar name="ComprStatus" address="13" ByteSize="1">
        <type typename="signed_char">
        </type>
      </ivar>
      <ivar name="PumpStatus" address="14" ByteSize="1">
        <type typename="signed_char">
        </type>
      </ivar>
      <ivar name="FanStatus" address="15" ByteSize="1">
        <type typename="signed_char">
        </type>
      </ivar>
      <ivar name="HeaterStatus" address="16" ByteSize="1">
        <type typename="signed_char">
        </type>
      </ivar>
      <ivar name="Descr" address="17" ByteSize="4">
        <type typename="String">
          <initializer>"1"</initializer>
        </type>
      </ivar>
      <meth name="Reset" address="6861" pathname=".MyPackage.TAlarmConfig.Reset" MaxStackCallSz="36" MaxInternalStackSz="36" MaxInternalStackCallPos="alarms.lib:84" ByteSize="4" CodeAddress="6861" CodeSize="99" SrcFile="alarms.lib">
        <type typename="signed_long">
        </type>
        <pvar name="RetVal" address="0" ByteSize="4">
          <type typename="signed_long"></type>
        </pvar>
        <pvar name="this" address="4" ByteSize="4">
          <type typename="TAlarmConfig" reference="1"></type>
        </pvar>
      </meth>
      <meth name="StartupDelay" address="6960" pathname=".MyPackage.TAlarmConfig.StartupDelay" MaxStackCallSz="36" MaxInternalStackSz="36" MaxInternalStackCallPos="alarms.lib:95" ByteSize="4" CodeAddress="6960" CodeSize="66" SrcFile="alarms.lib">
        <type typename="signed_long">
        </type>
        <pvar name="RetVal" address="0" ByteSize="4">
          <type typename="signed_long"></type>
        </pvar>
        <pvar name="this" address="4" ByteSize="4">
          <type typename="TAlarmConfig" reference="1"></type>
        </pvar>
      </meth>
      <meth name="Delay" address="7026" pathname=".MyPackage.TAlarmConfig.Delay" MaxStackCallSz="36" MaxInternalStackSz="36" MaxInternalStackCallPos="alarms.lib:104" ByteSize="4" CodeAddress="7026" CodeSize="66" SrcFile="alarms.lib">
        <type typename="signed_long">
        </type>
        <pvar name="RetVal" address="0" ByteSize="4">
          <type typename="signed_long"></type>
        </pvar>
        <pvar name="this" address="4" ByteSize="4">
          <type typename="TAlarmConfig" reference="1"></type>
        </pvar>
      </meth>
    </class>
    <class name="TAlarmStatus" address="7092" ByteSize="10" CodeAddress="7092" CodeSize="12" SrcFile="alarms.lib">
      <ivar name="AlarmActive" address="0" ByteSize="1">
        <type typename="signed_char">
        </type>
      </ivar>
      <ivar name="AutoReset" address="1" ByteSize="1">
        <type typename="signed_char">
        </type>
      </ivar>
      <ivar name="AlarmStart" address="2" ByteSize="4">
        <type typename="TTimerSec">
        </type>
      </ivar>
      <ivar name="Alarm1stStart" address="6" ByteSize="4">
        <type typename="TTimerSec">
        </type>
      </ivar>
    </class>
    <class name="TAlarmsManager" address="7092" ByteSize="119" CodeAddress="7092" CodeSize="12" SrcFile="alarms.lib">
      <ivar name="AlarmsStatus" address="0" ByteSize="100">
        <type typename="Array">
          <ArrayItem maxlen="10" typename="TAlarmStatus">
          </ArrayItem>
        </type>
      </ivar>
      <ivar name="PackedAlarmsStatus" address="100" ByteSize="4">
        <type typename="Array">
          <ArrayItem maxlen="32" typename="bit">
          </ArrayItem>
        </type>
      </ivar>
      <ivar name="BuzzerReq" address="104" bitoffset="0" ByteSize="0" BitSize="1">
        <type typename="bit">
        </type>
      </ivar>
      <ivar name="AlarmR" address="104" bitoffset="1" ByteSize="0" BitSize="1">
        <type typename="bit">
        </type>
      </ivar>
      <ivar name="WarningR" address="104" bitoffset="2" ByteSize="0" BitSize="1">
        <type typename="bit">
        </type>
      </ivar>
      <ivar name="AlarmRTimer" address="105" ByteSize="4">
        <type typename="TTimerSec">
        </type>
      </ivar>
      <ivar name="BuzzerTimer" address="109" ByteSize="4">
        <type typename="TTimerSec">
        </type>
      </ivar>
      <ivar name="ActiveAlarms" address="113" ByteSize="2">
        <type typename="unsigned_short">
        </type>
      </ivar>
      <ivar name="ActiveWarnings" address="115" ByteSize="2">
        <type typename="unsigned_short">
        </type>
      </ivar>
      <ivar name="NackAlarms" address="117" ByteSize="2">
        <type typename="unsigned_short">
        </type>
      </ivar>
      <meth name="Init" address="7092" pathname=".MyPackage.TAlarmsManager.Init" MaxStackCallSz="16" MaxInternalStackSz="16" MaxInternalStackCallPos="" ByteSize="0" CodeAddress="7092" CodeSize="13" SrcFile="alarms.lib">
        <type typename="object">
        </type>
        <pvar name="this" address="0" ByteSize="4">
          <type typename="TAlarmsManager" reference="1"></type>
        </pvar>
      </meth>
      <meth name="Mute" address="7105" pathname=".MyPackage.TAlarmsManager.Mute" MaxStackCallSz="25" MaxInternalStackSz="25" MaxInternalStackCallPos="alarms.lib:164" ByteSize="0" CodeAddress="7105" CodeSize="20" SrcFile="alarms.lib">
        <type typename="object">
        </type>
        <pvar name="this" address="0" ByteSize="4">
          <type typename="TAlarmsManager" reference="1"></type>
        </pvar>
      </meth>
      <meth name="ResetAlarms" address="7125" pathname=".MyPackage.TAlarmsManager.ResetAlarms" MaxStackCallSz="114" MaxInternalStackSz="48" MaxInternalStackCallPos="alarms.lib:186" ByteSize="0" CodeAddress="7125" CodeSize="322" SrcFile="alarms.lib">
        <type typename="object">
        </type>
        <pvar name="this" address="0" ByteSize="4">
          <type typename="TAlarmsManager" reference="1"></type>
        </pvar>
        <pvar name="iOnlyInactiveAlarms" address="4" ByteSize="4">
          <type typename="signed_long">
          </type>
          <valueexpr><constv value="0"/></valueexpr>
        </pvar>
      </meth>
      <meth name="SetAlarmCondition" address="7447" pathname=".MyPackage.TAlarmsManager.SetAlarmCondition" MaxStackCallSz="119" MaxInternalStackSz="61" MaxInternalStackCallPos="alarms.lib:371" ByteSize="0" CodeAddress="7447" CodeSize="984" SrcFile="alarms.lib">
        <type typename="object">
        </type>
        <pvar name="this" address="0" ByteSize="4">
          <type typename="TAlarmsManager" reference="1"></type>
        </pvar>
        <pvar name="iIndex" address="4" ByteSize="4">
          <type typename="signed_long">
          </type>
        </pvar>
        <pvar name="iCondition" address="8" ByteSize="4">
          <type typename="signed_long">
          </type>
        </pvar>
        <pvar name="iDevActive" address="12" ByteSize="1">
          <type typename="signed_char">
          </type>
          <valueexpr><constv value="0"/></valueexpr>
        </pvar>
        <pvar name="iStartElapsedTime" address="13" ByteSize="4">
          <type typename="signed_long">
          </type>
          <valueexpr><constv value="0"/></valueexpr>
        </pvar>
      </meth>
      <meth name="isAlarm" address="8431" pathname=".MyPackage.TAlarmsManager.isAlarm" MaxStackCallSz="44" MaxInternalStackSz="44" MaxInternalStackCallPos="alarms.lib:408" ByteSize="4" CodeAddress="8431" CodeSize="61" SrcFile="alarms.lib">
        <type typename="signed_long">
        </type>
        <pvar name="RetVal" address="0" ByteSize="4">
          <type typename="signed_long"></type>
        </pvar>
        <pvar name="this" address="4" ByteSize="4">
          <type typename="TAlarmsManager" reference="1"></type>
        </pvar>
        <pvar name="iIndex" address="8" ByteSize="4">
          <type typename="signed_long">
          </type>
        </pvar>
      </meth>
      <meth name="Run" address="8492" pathname=".MyPackage.TAlarmsManager.Run" MaxStackCallSz="92" MaxInternalStackSz="48" MaxInternalStackCallPos="alarms.lib:433" ByteSize="0" CodeAddress="8492" CodeSize="131" SrcFile="alarms.lib">
        <type typename="object">
        </type>
        <pvar name="this" address="0" ByteSize="4">
          <type typename="TAlarmsManager" reference="1"></type>
        </pvar>
      </meth>
    </class>
    <funct name="alr_HandleAlarmChange" address="8623" pathname=".MyPackage.alr_HandleAlarmChange" MaxStackCallSz="20" MaxInternalStackSz="20" MaxInternalStackCallPos="" ByteSize="0" CodeAddress="8623" CodeSize="13" SrcFile="alarms.lib">
      <type typename="object">
      </type>
      <pvar name="iIndex" address="0" ByteSize="4">
        <type typename="signed_long">
        </type>
      </pvar>
      <pvar name="iStatus" address="4" ByteSize="4">
        <type typename="signed_long">
        </type>
      </pvar>
    </funct>
    <gvar mem="RAM" name="DIValue" address="739" ByteSize="4">
      <type typename="signed_long">
      </type>
    </gvar>
    <gvar mem="RAM" name="DOValue" address="743" ByteSize="4">
      <type typename="signed_long">
      </type>
    </gvar>
    <gvar mem="RAM" name="AIValue" address="747" ByteSize="32">
      <type typename="Array">
        <ArrayItem maxlen="16" typename="signed_short">
        </ArrayItem>
      </type>
    </gvar>
    <gvar mem="RAM" name="AOValue" address="779" ByteSize="12">
      <type typename="Array">
        <ArrayItem maxlen="6" typename="signed_short">
        </ArrayItem>
      </type>
    </gvar>
    <item name="modbusdecl">
      <item name="ModbusTable">
      </item>
      <constv>
        <type typename="signed_char">
        </type>
        <valueexpr><constv value="0"/></valueexpr>
      </constv>
      <constv name="sum" ByteSize="2">
        <type typename="signed_short">
        </type>
        <valueexpr><constv value="1000"/></valueexpr>
        <constv ByteSize="1">
          <type typename="signed_char">
          </type>
          <valueexpr><constv value="0"/></valueexpr>
        </constv>
      </constv>
      <item name="DIValue">
      </item>
    </item>
    <item name="modbusdecl">
      <item name="ModbusTable">
      </item>
      <constv>
        <type typename="signed_char">
        </type>
        <valueexpr><constv value="0"/></valueexpr>
      </constv>
      <constv name="sum" ByteSize="2">
        <type typename="signed_short">
        </type>
        <valueexpr><constv value="1002"/></valueexpr>
        <constv ByteSize="1">
          <type typename="signed_char">
          </type>
          <valueexpr><constv value="2"/></valueexpr>
        </constv>
      </constv>
      <item name="DOValue">
      </item>
    </item>
    <item name="modbusdecl">
      <item name="ModbusTable">
      </item>
      <constv>
        <type typename="signed_char">
        </type>
        <valueexpr><constv value="0"/></valueexpr>
      </constv>
      <constv name="sum" ByteSize="2">
        <type typename="signed_short">
        </type>
        <valueexpr><constv value="1004"/></valueexpr>
        <constv ByteSize="1">
          <type typename="signed_char">
          </type>
          <valueexpr><constv value="4"/></valueexpr>
        </constv>
      </constv>
      <item name="AIValue">
      </item>
    </item>
    <item name="modbusdecl">
      <item name="ModbusTable">
      </item>
      <constv>
        <type typename="signed_char">
        </type>
        <valueexpr><constv value="0"/></valueexpr>
      </constv>
      <constv name="sum" ByteSize="2">
        <type typename="signed_short">
        </type>
        <valueexpr><constv value="1030"/></valueexpr>
        <constv ByteSize="1">
          <type typename="signed_char">
          </type>
          <valueexpr><constv value="30"/></valueexpr>
        </constv>
      </constv>
      <item name="AOValue">
      </item>
    </item>
    <class name="TIOValue">
    </class>
    <class name="TEventHistory" address="8636" ByteSize="5" CodeAddress="8636" CodeSize="12" SrcFile="TEventHistoryLog.lib">
      <ivar name="TimeOffset" address="0" ByteSize="4">
        <type typename="signed_long">
        </type>
      </ivar>
      <ivar name="NextWrite" address="4" ByteSize="1">
        <type typename="unsigned_char">
        </type>
      </ivar>
      <meth name="Init" address="8636" pathname=".MyPackage.TEventHistory.Init" MaxStackCallSz="104" MaxInternalStackSz="40" MaxInternalStackCallPos="TEventHistoryLog.lib:183" ByteSize="0" CodeAddress="8636" CodeSize="79" SrcFile="TEventHistoryLog.lib">
        <type typename="object">
        </type>
        <pvar name="this" address="0" ByteSize="4">
          <type typename="TEventHistory" reference="1"></type>
        </pvar>
        <pvar name="rtc" address="4" ByteSize="4">
          <type typename="TDateTime" reference="1">
          </type>
        </pvar>
      </meth>
      <meth name="ClearHistory" address="8715" pathname=".MyPackage.TEventHistory.ClearHistory" MaxStackCallSz="84" MaxInternalStackSz="32" MaxInternalStackCallPos="TEventHistoryLog.lib:216" ByteSize="0" CodeAddress="8715" CodeSize="80" SrcFile="TEventHistoryLog.lib">
        <type typename="object">
        </type>
        <pvar name="this" address="0" ByteSize="4">
          <type typename="TEventHistory" reference="1"></type>
        </pvar>
      </meth>
      <meth name="Run" address="8795" pathname=".MyPackage.TEventHistory.Run" MaxStackCallSz="56" MaxInternalStackSz="36" MaxInternalStackCallPos="TEventHistoryLog.lib:230" ByteSize="0" CodeAddress="8795" CodeSize="43" SrcFile="TEventHistoryLog.lib">
        <type typename="object">
        </type>
        <pvar name="this" address="0" ByteSize="4">
          <type typename="TEventHistory" reference="1"></type>
        </pvar>
        <pvar name="rtc" address="4" ByteSize="4">
          <type typename="TDateTime" reference="1">
          </type>
        </pvar>
      </meth>
      <meth name="EventStarted" address="8838" pathname=".MyPackage.TEventHistory.EventStarted" MaxStackCallSz="64" MaxInternalStackSz="32" MaxInternalStackCallPos="TEventHistoryLog.lib:267" ByteSize="0" CodeAddress="8838" CodeSize="24" SrcFile="TEventHistoryLog.lib">
        <type typename="object">
        </type>
        <pvar name="this" address="0" ByteSize="4">
          <type typename="TEventHistory" reference="1"></type>
        </pvar>
        <pvar name="iID" address="4" ByteSize="4">
          <type typename="signed_long">
          </type>
        </pvar>
      </meth>
      <meth name="EventEnded" address="8862" pathname=".MyPackage.TEventHistory.EventEnded" MaxStackCallSz="90" MaxInternalStackSz="40" MaxInternalStackCallPos="TEventHistoryLog.lib:278" ByteSize="0" CodeAddress="8862" CodeSize="74" SrcFile="TEventHistoryLog.lib">
        <type typename="object">
        </type>
        <pvar name="this" address="0" ByteSize="4">
          <type typename="TEventHistory" reference="1"></type>
        </pvar>
        <pvar name="iID" address="4" ByteSize="4">
          <type typename="signed_long">
          </type>
        </pvar>
      </meth>
      <meth name="WriteEvent" address="8936" pathname=".MyPackage.TEventHistory.WriteEvent" MaxStackCallSz="44" MaxInternalStackSz="44" MaxInternalStackCallPos="TEventHistoryLog.lib:302" ByteSize="0" CodeAddress="8936" CodeSize="130" SrcFile="TEventHistoryLog.lib">
        <type typename="object">
        </type>
        <pvar name="this" address="0" ByteSize="4">
          <type typename="TEventHistory" reference="1"></type>
        </pvar>
        <pvar name="iID" address="4" ByteSize="4">
          <type typename="signed_long">
          </type>
        </pvar>
        <pvar name="iData" address="8" ByteSize="4">
          <type typename="signed_long">
          </type>
        </pvar>
      </meth>
      <meth name="SearchEventStart" address="9066" pathname=".MyPackage.TEventHistory.SearchEventStart" MaxStackCallSz="62" MaxInternalStackSz="46" MaxInternalStackCallPos="TEventHistoryLog.lib:347" ByteSize="4" CodeAddress="9066" CodeSize="154" SrcFile="TEventHistoryLog.lib">
        <type typename="signed_long">
        </type>
        <pvar name="RetVal" address="0" ByteSize="4">
          <type typename="signed_long"></type>
        </pvar>
        <pvar name="this" address="4" ByteSize="4">
          <type typename="TEventHistory" reference="1"></type>
        </pvar>
        <pvar name="iID" address="8" ByteSize="4">
          <type typename="signed_long">
          </type>
        </pvar>
      </meth>
    </class>
    <class name="TEventHistoryItem">
      <ivar name="EventID">
        <type typename="signed_short">
        </type>
      </ivar>
      <ivar name="StartEvent">
        <type typename="signed_long">
        </type>
      </ivar>
      <ivar name="EndEvent">
        <type typename="signed_long">
        </type>
      </ivar>
    </class>
    <gvar mem="RAM" name="EventHistoryLog" address="791" ByteSize="5">
      <type typename="TEventHistory">
      </type>
    </gvar>
    <gvar mem="E2P" name="EventHistoryLog_Signature" address="16" ByteSize="4">
      <type typename="signed_long">
      </type>
    </gvar>
    <gvar mem="E2P" name="EventHistoryLog_EventID" address="20" ByteSize="40">
      <type typename="Array">
        <ArrayItem maxlen="20" typename="signed_short">
        </ArrayItem>
      </type>
    </gvar>
    <gvar mem="E2P" name="EventHistoryLog_StartEvent" address="60" ByteSize="80">
      <type typename="Array">
        <ArrayItem maxlen="20" typename="signed_long">
        </ArrayItem>
      </type>
    </gvar>
    <gvar mem="E2P" name="EventHistoryLog_EndEvent" address="140" ByteSize="80">
      <type typename="Array">
        <ArrayItem maxlen="20" typename="signed_long">
        </ArrayItem>
      </type>
    </gvar>
    <gvar mem="E2P" name="EventHistoryLog_NextWrite" address="220" ByteSize="1">
      <type typename="unsigned_char">
      </type>
    </gvar>
    <item name="modbusdecl">
      <item name="ModbusTable">
      </item>
      <constv>
        <type typename="signed_char">
        </type>
        <valueexpr><constv value="0"/></valueexpr>
      </constv>
      <constv name="sum" ByteSize="2">
        <type typename="signed_short">
        </type>
        <valueexpr><constv value="3200"/></valueexpr>
        <constv ByteSize="1">
          <type typename="signed_char">
          </type>
          <valueexpr><constv value="0"/></valueexpr>
        </constv>
      </constv>
      <constv address="1779" ByteSize="1">
        <type typename="signed_char">
        </type>
        <valueexpr><constv value="20"/></valueexpr>
      </constv>
    </item>
    <item name="modbusdecl">
      <item name="ModbusTable">
      </item>
      <constv>
        <type typename="signed_char">
        </type>
        <valueexpr><constv value="0"/></valueexpr>
      </constv>
      <constv name="sum" ByteSize="2">
        <type typename="signed_short">
        </type>
        <valueexpr><constv value="3201"/></valueexpr>
        <constv ByteSize="1">
          <type typename="signed_char">
          </type>
          <valueexpr><constv value="1"/></valueexpr>
        </constv>
      </constv>
      <item name="NextWrite">
      </item>
    </item>
    <item name="modbusdecl">
      <item name="ModbusTable">
      </item>
      <constv>
        <type typename="signed_char">
        </type>
        <valueexpr><constv value="0"/></valueexpr>
      </constv>
      <constv name="sum" ByteSize="2">
        <type typename="signed_short">
        </type>
        <valueexpr><constv value="3202"/></valueexpr>
        <constv ByteSize="1">
          <type typename="signed_char">
          </type>
          <valueexpr><constv value="2"/></valueexpr>
        </constv>
      </constv>
      <item name="EventHistoryLog_EventID">
      </item>
    </item>
    <item name="modbusdecl">
      <item name="ModbusTable">
      </item>
      <constv>
        <type typename="signed_char">
        </type>
        <valueexpr><constv value="0"/></valueexpr>
      </constv>
      <constv name="sum" ByteSize="2">
        <type typename="signed_short">
        </type>
        <valueexpr><constv value="3222"/></valueexpr>
        <constv ByteSize="1">
          <type typename="signed_char">
          </type>
          <valueexpr><constv value="20"/></valueexpr>
        </constv>
      </constv>
      <item name="EventHistoryLog_StartEvent">
      </item>
    </item>
    <item name="modbusdecl">
      <item name="ModbusTable">
      </item>
      <constv>
        <type typename="signed_char">
        </type>
        <valueexpr><constv value="0"/></valueexpr>
      </constv>
      <constv name="sum" ByteSize="2">
        <type typename="signed_short">
        </type>
        <valueexpr><constv value="3262"/></valueexpr>
        <constv name="mul" ByteSize="1">
          <type typename="signed_char">
          </type>
          <valueexpr><constv value="60"/></valueexpr>
          <constv ByteSize="1">
            <type typename="signed_char">
            </type>
            <valueexpr><constv value="3"/></valueexpr>
          </constv>
        </constv>
      </constv>
      <item name="EventHistoryLog_EndEvent">
      </item>
    </item>
    <gvar mem="RAM" name="EventHistoryLog_AddEvent" address="796" ByteSize="2">
      <type typename="signed_short">
      </type>
    </gvar>
    <gvar mem="RAM" name="EventHistoryLog_AddEventData" address="798" ByteSize="4">
      <type typename="signed_long">
      </type>
    </gvar>
    <item name="modbusdecl">
      <item name="ModbusTable">
      </item>
      <constv>
        <type typename="unsigned_char">
        </type>
        <valueexpr><constv value="128"/></valueexpr>
      </constv>
      <constv ByteSize="2">
        <type typename="signed_short">
        </type>
        <valueexpr><constv value="3302"/></valueexpr>
        <constv name="sum" ByteSize="2">
          <type typename="signed_short">
          </type>
          <valueexpr><constv value="3302"/></valueexpr>
          <constv name="mul" ByteSize="1">
            <type typename="signed_char">
            </type>
            <valueexpr><constv value="100"/></valueexpr>
            <constv ByteSize="1">
              <type typename="signed_char">
              </type>
              <valueexpr><constv value="5"/></valueexpr>
            </constv>
          </constv>
        </constv>
      </constv>
      <item name="EventHistoryLog_AddEvent">
      </item>
    </item>
    <item name="modbusdecl">
      <item name="ModbusTable">
      </item>
      <constv>
        <type typename="unsigned_char">
        </type>
        <valueexpr><constv value="128"/></valueexpr>
      </constv>
      <constv name="sum" ByteSize="2">
        <type typename="signed_short">
        </type>
        <valueexpr><constv value="3303"/></valueexpr>
        <constv ByteSize="1">
          <type typename="signed_char">
          </type>
          <valueexpr><constv value="1"/></valueexpr>
        </constv>
      </constv>
      <item name="EventHistoryLog_AddEventData">
      </item>
    </item>
    <gvar mem="RAM" name="UIResetHistory" address="537" bitoffset="1" ByteSize="0" BitSize="1">
      <type typename="bit">
      </type>
    </gvar>
    <item name="modbusdecl">
      <item name="ModbusTable">
      </item>
      <constv>
        <type typename="unsigned_char">
        </type>
        <valueexpr><constv value="128"/></valueexpr>
      </constv>
      <constv name="sum" ByteSize="2">
        <type typename="signed_short">
        </type>
        <valueexpr><constv value="3199"/></valueexpr>
        <constv ByteSize="1">
          <type typename="signed_char">
          </type>
          <valueexpr><constv value="-1"/></valueexpr>
        </constv>
      </constv>
      <item name="UIResetHistory">
      </item>
    </item>
    <class name="T7dScheduledAction">
      <ivar name="WeekDays">
        <type typename="unsigned_char">
        </type>
      </ivar>
      <ivar name="Time">
        <type typename="unsigned_char">
        </type>
      </ivar>
      <ivar name="Action">
        <type typename="unsigned_char">
        </type>
      </ivar>
      <ivar name="DayOfMonth">
        <type typename="unsigned_short">
        </type>
      </ivar>
    </class>
    <class name="T7dScheduler" address="9220" ByteSize="6" CodeAddress="9220" CodeSize="12" SrcFile="Scheduler7d.lib">
      <ivar name="LastTimeFrame" address="0" ByteSize="4">
        <type typename="signed_long">
        </type>
      </ivar>
      <ivar name="LastSchedule" address="4" ByteSize="1">
        <type typename="signed_char">
        </type>
      </ivar>
      <ivar name="TriggeredIndex" address="5" ByteSize="1">
        <type typename="signed_char">
        </type>
        <valueexpr><constv value="-1"/></valueexpr>
      </ivar>
      <meth name="Init" address="9220" pathname=".MyPackage.T7dScheduler.Init" MaxStackCallSz="16" MaxInternalStackSz="16" MaxInternalStackCallPos="" ByteSize="0" CodeAddress="9220" CodeSize="13" SrcFile="Scheduler7d.lib">
        <type typename="object">
        </type>
        <pvar name="this" address="0" ByteSize="4">
          <type typename="T7dScheduler" reference="1"></type>
        </pvar>
      </meth>
      <meth name="Clear" address="9233" pathname=".MyPackage.T7dScheduler.Clear" MaxStackCallSz="32" MaxInternalStackSz="32" MaxInternalStackCallPos="Scheduler7d.lib:643" ByteSize="0" CodeAddress="9233" CodeSize="55" SrcFile="Scheduler7d.lib">
        <type typename="object">
        </type>
        <pvar name="this" address="0" ByteSize="4">
          <type typename="T7dScheduler" reference="1"></type>
        </pvar>
      </meth>
    </class>
    <class name="T7dScheduleUI">
      <ivar name="schedule">
        <type typename="T7dScheduledAction">
        </type>
      </ivar>
      <ivar name="EditField">
        <type typename="signed_long">
        </type>
      </ivar>
      <ivar name="ScheduleIndex">
        <type typename="signed_long">
        </type>
      </ivar>
    </class>
    <item name="modbusdecl">
      <item name="ModbusTable">
      </item>
      <constv>
        <type typename="unsigned_char">
        </type>
        <valueexpr><constv value="128"/></valueexpr>
      </constv>
      <constv>
        <type typename="signed_short">
        </type>
        <valueexpr><constv value="6657"/></valueexpr>
      </constv>
      <item name="ScheduledAction">
      </item>
    </item>
    <gvar mem="E2P" name="ScheduledAction" address="221" ByteSize="60">
      <type typename="Array">
        <ArrayItem maxlen="15" typename="signed_long">
        </ArrayItem>
      </type>
    </gvar>
    <gvar mem="RAM" name="Scheduler" address="802" ByteSize="6">
      <type typename="T7dScheduler">
      </type>
    </gvar>
    <gvar mem="ROM" name="FormRTC_Limits" address="1460" ByteSize="24">
      <type typename="Array">
        <ArrayItem maxlen="12" typename="signed_short">
        </ArrayItem>
      </type>
      <valueexpr>
        <instr mname="">
          <constv typename="signed_short" value="2008" />
          <constv typename="signed_short" value="2020" />
          <constv typename="signed_char" value="1" />
          <constv typename="signed_char" value="12" />
          <constv typename="signed_char" value="1" />
          <constv typename="signed_char" value="31" />
          <constv typename="signed_char" value="0" />
          <constv typename="signed_char" value="23" />
          <constv typename="signed_char" value="0" />
          <constv typename="signed_char" value="59" />
          <constv typename="signed_char" value="0" />
          <constv typename="signed_char" value="59" />
        </instr>
      </valueexpr>
    </gvar>
    <gvar mem="ROM" name="FormRTC_WeekDays" address="1484" ByteSize="35">
      <type typename="Array">
        <ArrayItem maxlen="7" typename="String">
        </ArrayItem>
      </type>
      <valueexpr>
        <instr mname="">
          <constv typename="String" value="MO" />
          <constv typename="String" value="TU" />
          <constv typename="String" value="WE" />
          <constv typename="String" value="TH" />
          <constv typename="String" value="FR" />
          <constv typename="String" value="SA" />
          <constv typename="String" value="SU" />
        </instr>
      </valueexpr>
    </gvar>
    <gvar mem="RAM" name="RTC" address="808" ByteSize="11">
      <type typename="TDateTime">
      </type>
    </gvar>
    <gvar mem="RAM" name="RTC_NewTime" address="819" ByteSize="4">
      <type typename="signed_long">
      </type>
    </gvar>
    <item name="modbusdecl">
      <item name="ModbusTable">
      </item>
      <constv>
        <type typename="signed_char">
        </type>
        <valueexpr><constv value="0"/></valueexpr>
      </constv>
      <constv>
        <type typename="signed_short">
        </type>
        <valueexpr><constv value="9000"/></valueexpr>
      </constv>
      <item name="Sec">
      </item>
    </item>
    <item name="modbusdecl">
      <item name="ModbusTable">
      </item>
      <constv>
        <type typename="unsigned_char">
        </type>
        <valueexpr><constv value="128"/></valueexpr>
      </constv>
      <constv name="sum" ByteSize="2">
        <type typename="signed_short">
        </type>
        <valueexpr><constv value="9002"/></valueexpr>
        <constv ByteSize="1">
          <type typename="signed_char">
          </type>
          <valueexpr><constv value="2"/></valueexpr>
        </constv>
      </constv>
      <item name="RTC_NewTime">
      </item>
    </item>
    <funct name="RTC_Run" address="9288" pathname=".MyPackage.RTC_Run" MaxStackCallSz="68" MaxInternalStackSz="24" MaxInternalStackCallPos="RTC_UI.lib:284" ByteSize="0" CodeAddress="9288" CodeSize="95" SrcFile="RTC_UI.lib">
      <type typename="object">
      </type>
    </funct>
    <class name="TRemoteRTC">
      <ivar name="super">
        <type typename="TRTCEmulator">
        </type>
      </ivar>
      <ivar name="LastUpdate">
        <type typename="TTimerSec">
        </type>
      </ivar>
    </class>
    <gvar mem="E2P" name="ParVersion" address="281" ByteSize="4">
      <type typename="signed_long">
      </type>
    </gvar>
    <gvar mem="E2P" name="ParamVal" address="285" ByteSize="80">
      <type typename="Array">
        <ArrayItem maxlen="40" typename="signed_short">
        </ArrayItem>
      </type>
    </gvar>
    <gvar mem="RAM" name="UIParamsChanged" address="537" bitoffset="2" ByteSize="0" BitSize="1">
      <type typename="bit">
      </type>
    </gvar>
    <gvar mem="RAM" name="LastNodeID" address="823" ByteSize="2">
      <type typename="signed_short">
      </type>
    </gvar>
    <item name="modbusdecl">
      <item name="ModbusTable">
      </item>
      <constv>
        <type typename="unsigned_char">
        </type>
        <valueexpr><constv value="128"/></valueexpr>
      </constv>
      <constv ByteSize="2">
        <type typename="signed_short">
        </type>
        <valueexpr><constv value="2999"/></valueexpr>
        <constv name="sum" ByteSize="2">
          <type typename="signed_short">
          </type>
          <valueexpr><constv value="2999"/></valueexpr>
          <constv ByteSize="1">
            <type typename="signed_char">
            </type>
            <valueexpr><constv value="-1"/></valueexpr>
          </constv>
        </constv>
      </constv>
      <item name="UIParamsChanged">
      </item>
    </item>
    <item name="modbusdecl">
      <item name="ModbusTable">
      </item>
      <constv name="sum" ByteSize="2">
        <type typename="signed_short">
        </type>
        <valueexpr><constv value="640"/></valueexpr>
        <constv ByteSize="2">
          <type typename="signed_short">
          </type>
          <valueexpr><constv value="512"/></valueexpr>
        </constv>
      </constv>
      <constv ByteSize="2">
        <type typename="signed_short">
        </type>
        <valueexpr><constv value="4000"/></valueexpr>
        <constv name="sum" ByteSize="2">
          <type typename="signed_short">
          </type>
          <valueexpr><constv value="4000"/></valueexpr>
          <constv ByteSize="1">
            <type typename="signed_char">
            </type>
            <valueexpr><constv value="0"/></valueexpr>
          </constv>
        </constv>
      </constv>
      <item name="VDIValue">
      </item>
    </item>
    <item name="modbusdecl">
      <item name="ModbusTable">
      </item>
      <constv name="sum" ByteSize="2">
        <type typename="signed_short">
        </type>
        <valueexpr><constv value="640"/></valueexpr>
        <constv ByteSize="2">
          <type typename="signed_short">
          </type>
          <valueexpr><constv value="512"/></valueexpr>
        </constv>
      </constv>
      <constv ByteSize="2">
        <type typename="signed_short">
        </type>
        <valueexpr><constv value="4200"/></valueexpr>
        <constv name="sum" ByteSize="2">
          <type typename="signed_short">
          </type>
          <valueexpr><constv value="4200"/></valueexpr>
          <constv ByteSize="1">
            <type typename="unsigned_char">
            </type>
            <valueexpr><constv value="200"/></valueexpr>
          </constv>
        </constv>
      </constv>
      <item name="VDOValue">
      </item>
    </item>
    <item name="modbusdecl">
      <item name="ModbusTable">
      </item>
      <constv name="sum" ByteSize="2">
        <type typename="signed_short">
        </type>
        <valueexpr><constv value="640"/></valueexpr>
        <constv ByteSize="2">
          <type typename="signed_short">
          </type>
          <valueexpr><constv value="512"/></valueexpr>
        </constv>
      </constv>
      <constv ByteSize="2">
        <type typename="signed_short">
        </type>
        <valueexpr><constv value="4400"/></valueexpr>
        <constv name="sum" ByteSize="2">
          <type typename="signed_short">
          </type>
          <valueexpr><constv value="4400"/></valueexpr>
          <constv ByteSize="2">
            <type typename="signed_short">
            </type>
            <valueexpr><constv value="400"/></valueexpr>
          </constv>
        </constv>
      </constv>
      <item name="VAIValue">
      </item>
    </item>
    <item name="modbusdecl">
      <item name="ModbusTable">
      </item>
      <constv name="sum" ByteSize="2">
        <type typename="signed_short">
        </type>
        <valueexpr><constv value="640"/></valueexpr>
        <constv ByteSize="2">
          <type typename="signed_short">
          </type>
          <valueexpr><constv value="512"/></valueexpr>
        </constv>
      </constv>
      <constv ByteSize="2">
        <type typename="signed_short">
        </type>
        <valueexpr><constv value="4600"/></valueexpr>
        <constv name="sum" ByteSize="2">
          <type typename="signed_short">
          </type>
          <valueexpr><constv value="4600"/></valueexpr>
          <constv ByteSize="2">
            <type typename="signed_short">
            </type>
            <valueexpr><constv value="600"/></valueexpr>
          </constv>
        </constv>
      </constv>
      <item name="VAOValue">
      </item>
    </item>
    <funct name="InitializeParamVal" address="9383" pathname=".MyPackage.InitializeParamVal" MaxStackCallSz="36" MaxInternalStackSz="36" MaxInternalStackCallPos="AlgoLib.c:109" ByteSize="0" CodeAddress="9383" CodeSize="134" SrcFile="AlgoLib.c">
      <type typename="object">
      </type>
      <code>
        <instr mname="" CodeAddress="9395" CodeSize="121">
          <var name="i" address="12" ByteSize="4" CodeAddress="9395" CodeSize="1" SrcFile="AlgoLib.c" SrcRow="104">
            <type typename="signed_long">
            </type>
          </var>
          <instr mname="for" CodeAddress="9396" CodeSize="90">
            <instr mname="">
            </instr>
            <instr mname="LessThan" linkedname=".MyPackage.signed_char.LessThan" CodeAddress="9474" CodeSize="9" SrcRow="106">
              <subj>
                <instr mname="i" linkedname=".MyPackage..i" CodeAddress="9475" CodeSize="3" SrcRow="106">
                </instr>
              </subj>
              <constv typename="signed_char" value="39" />
            </instr>
            <instr mname="sum_set" linkedname=".MyPackage.signed_char.sum_set" CodeAddress="9467" CodeSize="7" SrcRow="106">
              <subj>
                <instr mname="i" linkedname=".MyPackage..i" CodeAddress="9467" CodeSize="3" SrcRow="106">
                </instr>
              </subj>
              <constv typename="signed_char" value="1" />
            </instr>
            <instr mname="" CodeAddress="9399" CodeSize="68">
              <if>
                <condition>
                  <instr mname="NotEqual" linkedname=".MyPackage.signed_char.NotEqual" CodeAddress="9399" CodeSize="20" SrcRow="108">
                    <subj>
                      <instr mname="VarPtr" linkedname=".MyPackage.TParamsField.VarPtr" CodeAddress="9400" CodeSize="14" SrcRow="108">
                        <subj>
                          <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="9400" CodeSize="14" SrcRow="108">
                            <subj>
                              <instr mname="ParamField" linkedname=".MyPackage.ParamField" CodeAddress="9401" CodeSize="3" SrcRow="108">
                              </instr>
                            </subj>
                            <instr mname="i" linkedname=".MyPackage..i" CodeAddress="9404" CodeSize="3" SrcRow="108">
                            </instr>
                          </instr>
                        </subj>
                      </instr>
                    </subj>
                    <constv typename="signed_char" value="36" />
                  </instr>
                </condition>
                <then>
                  <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="9422" CodeSize="45" SrcRow="109">
                    <subj>
                      <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="9422" CodeSize="25" SrcRow="109">
                        <subj>
                          <instr mname="ParamVal" linkedname=".MyPackage.ParamVal" CodeAddress="9423" CodeSize="3" SrcRow="109">
                          </instr>
                        </subj>
                        <instr mname="VarPtr" linkedname=".MyPackage.TParamsField.VarPtr" CodeAddress="9426" CodeSize="14" SrcRow="109">
                          <subj>
                            <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="9426" CodeSize="14" SrcRow="109">
                              <subj>
                                <instr mname="ParamField" linkedname=".MyPackage.ParamField" CodeAddress="9427" CodeSize="3" SrcRow="109">
                                </instr>
                              </subj>
                              <instr mname="i" linkedname=".MyPackage..i" CodeAddress="9430" CodeSize="3" SrcRow="109">
                              </instr>
                            </instr>
                          </subj>
                        </instr>
                      </instr>
                    </subj>
                    <instr mname="Default" linkedname=".MyPackage.TParamsField.Default" CodeAddress="9447" CodeSize="17" SrcRow="109">
                      <subj>
                        <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="9447" CodeSize="14" SrcRow="109">
                          <subj>
                            <instr mname="ParamField" linkedname=".MyPackage.ParamField" CodeAddress="9448" CodeSize="3" SrcRow="109">
                            </instr>
                          </subj>
                          <instr mname="i" linkedname=".MyPackage..i" CodeAddress="9451" CodeSize="3" SrcRow="109">
                          </instr>
                        </instr>
                      </subj>
                    </instr>
                  </instr>
                </then>
              </if>
            </instr>
          </instr>
          <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="9486" CodeSize="11" SrcRow="112">
            <subj>
              <instr mname="UIParamsChanged" linkedname=".MyPackage.UIParamsChanged" CodeAddress="9486" CodeSize="6" SrcRow="112">
              </instr>
            </subj>
            <constv typename="signed_char" value="1" />
          </instr>
          <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="9497" CodeSize="17" SrcRow="116">
            <subj>
              <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="9497" CodeSize="11" SrcRow="116">
                <subj>
                  <instr mname="ParamVal" linkedname=".MyPackage.ParamVal" CodeAddress="9498" CodeSize="3" SrcRow="116">
                  </instr>
                </subj>
                <constv typename="signed_char" value="29" />
              </instr>
            </subj>
            <instr mname="NodeID" linkedname=".MyPackage.TCANopen.NodeID" CodeAddress="9508" CodeSize="3" SrcRow="116">
              <subj>
                <instr mname="Can" linkedname=".MyPackage.Can" CodeAddress="9508" CodeSize="3" SrcRow="116">
                </instr>
              </subj>
            </instr>
          </instr>
        </instr>
      </code>
    </funct>
    <funct name="IOManager_Init" address="9517" pathname=".MyPackage.IOManager_Init" MaxStackCallSz="12" MaxInternalStackSz="12" MaxInternalStackCallPos="" ByteSize="0" CodeAddress="9517" CodeSize="13" SrcFile="AlgoLib.c">
      <type typename="object">
      </type>
    </funct>
    <funct name="IOManager_Run" address="9530" pathname=".MyPackage.IOManager_Run" MaxStackCallSz="128" MaxInternalStackSz="69" MaxInternalStackCallPos="AlgoLib.c:190" ByteSize="0" CodeAddress="9530" CodeSize="618" SrcFile="AlgoLib.c">
      <type typename="object">
      </type>
      <code>
        <instr mname="" CodeAddress="9542" CodeSize="605">
          <var name="tmp" address="12" ByteSize="4" CodeAddress="9542" CodeSize="1" SrcFile="AlgoLib.c" SrcRow="128">
            <type typename="signed_long">
            </type>
          </var>
          <var name="i" address="16" ByteSize="4" CodeAddress="9543" CodeSize="1" SrcFile="AlgoLib.c" SrcRow="129">
            <type typename="signed_long">
            </type>
          </var>
          <var name="typ" address="20" ByteSize="1" CodeAddress="9544" CodeSize="2" SrcFile="AlgoLib.c" SrcRow="130">
            <type typename="signed_char">
            </type>
          </var>
          <instr mname="for" CodeAddress="9546" CodeSize="411">
            <instr mname="">
            </instr>
            <instr mname="LessThan" linkedname=".MyPackage.signed_char.LessThan" CodeAddress="9945" CodeSize="9" SrcRow="133">
              <subj>
                <instr mname="i" linkedname=".MyPackage..i" CodeAddress="9946" CodeSize="3" SrcRow="133">
                </instr>
              </subj>
              <constv typename="signed_char" value="16" />
            </instr>
            <instr mname="sum_set" linkedname=".MyPackage.signed_char.sum_set" CodeAddress="9938" CodeSize="7" SrcRow="133">
              <subj>
                <instr mname="i" linkedname=".MyPackage..i" CodeAddress="9938" CodeSize="3" SrcRow="133">
                </instr>
              </subj>
              <constv typename="signed_char" value="1" />
            </instr>
            <instr mname="" CodeAddress="9549" CodeSize="389">
              <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="9549" CodeSize="22" SrcRow="134">
                <subj>
                  <instr mname="typ" linkedname=".MyPackage..typ" CodeAddress="9549" CodeSize="3" SrcRow="134">
                  </instr>
                </subj>
                <instr mname="GetAIType" linkedname=".MyPackage.TIO.GetAIType" CodeAddress="9552" CodeSize="18" SrcRow="134">
                  <subj>
                    <instr mname="IO" linkedname=".MyPackage.IO" CodeAddress="9553" CodeSize="3" SrcRow="134">
                    </instr>
                  </subj>
                  <instr mname="ToChar" linkedname=".MyPackage.ToChar" CodeAddress="9556" CodeSize="11" SrcRow="134">
                    <instr mname="sum" linkedname=".MyPackage.signed_char.sum" CodeAddress="9556" CodeSize="9" SrcRow="134">
                      <subj>
                        <instr mname="i" linkedname=".MyPackage..i" CodeAddress="9557" CodeSize="3" SrcRow="134">
                        </instr>
                      </subj>
                      <constv typename="signed_char" value="1" />
                    </instr>
                  </instr>
                </instr>
              </instr>
              <if>
                <condition>
                  <instr mname="Equal" linkedname=".MyPackage.signed_char.Equal" CodeAddress="9571" CodeSize="13" SrcRow="135">
                    <subj>
                      <instr mname="typ" linkedname=".MyPackage..typ" CodeAddress="9572" CodeSize="3" SrcRow="135">
                      </instr>
                    </subj>
                    <constv typename="signed_char" value="10" />
                  </instr>
                </condition>
                <then>
                  <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="9587" CodeSize="22" SrcRow="136">
                    <subj>
                      <instr mname="tmp" linkedname=".MyPackage..tmp" CodeAddress="9587" CodeSize="3" SrcRow="136">
                      </instr>
                    </subj>
                    <instr mname="GetFilteredAI" linkedname=".MyPackage.TFilteredAI.GetFilteredAI" CodeAddress="9590" CodeSize="18" SrcRow="136">
                      <subj>
                        <instr mname="IO" linkedname=".MyPackage.IO" CodeAddress="9591" CodeSize="3" SrcRow="136">
                        </instr>
                      </subj>
                      <instr mname="ToChar" linkedname=".MyPackage.ToChar" CodeAddress="9594" CodeSize="11" SrcRow="136">
                        <instr mname="sum" linkedname=".MyPackage.signed_char.sum" CodeAddress="9594" CodeSize="9" SrcRow="136">
                          <subj>
                            <instr mname="i" linkedname=".MyPackage..i" CodeAddress="9595" CodeSize="3" SrcRow="136">
                            </instr>
                          </subj>
                          <constv typename="signed_char" value="1" />
                        </instr>
                      </instr>
                    </instr>
                  </instr>
                </then>
                <else>
                  <if>
                    <condition>
                      <instr mname="or" linkedname=".MyPackage.signed_char.or" CodeAddress="9612" CodeSize="28" SrcRow="138">
                        <subj>
                          <instr mname="Equal" linkedname=".MyPackage.signed_char.Equal" CodeAddress="9613" CodeSize="13" SrcRow="138">
                            <subj>
                              <instr mname="typ" linkedname=".MyPackage..typ" CodeAddress="9614" CodeSize="3" SrcRow="138">
                              </instr>
                            </subj>
                            <constv typename="signed_char" value="1" />
                          </instr>
                        </subj>
                        <instr mname="Equal" linkedname=".MyPackage.signed_char.Equal" CodeAddress="9626" CodeSize="13" SrcRow="138">
                          <subj>
                            <instr mname="typ" linkedname=".MyPackage..typ" CodeAddress="9627" CodeSize="3" SrcRow="138">
                            </instr>
                          </subj>
                          <constv typename="signed_char" value="6" />
                        </instr>
                      </instr>
                    </condition>
                    <then>
                      <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="9643" CodeSize="22" SrcRow="139">
                        <subj>
                          <instr mname="tmp" linkedname=".MyPackage..tmp" CodeAddress="9643" CodeSize="3" SrcRow="139">
                          </instr>
                        </subj>
                        <instr mname="GetFilteredAI" linkedname=".MyPackage.TFilteredAI.GetFilteredAI" CodeAddress="9646" CodeSize="18" SrcRow="139">
                          <subj>
                            <instr mname="IO" linkedname=".MyPackage.IO" CodeAddress="9647" CodeSize="3" SrcRow="139">
                            </instr>
                          </subj>
                          <instr mname="ToChar" linkedname=".MyPackage.ToChar" CodeAddress="9650" CodeSize="11" SrcRow="139">
                            <instr mname="sum" linkedname=".MyPackage.signed_char.sum" CodeAddress="9650" CodeSize="9" SrcRow="139">
                              <subj>
                                <instr mname="i" linkedname=".MyPackage..i" CodeAddress="9651" CodeSize="3" SrcRow="139">
                                </instr>
                              </subj>
                              <constv typename="signed_char" value="1" />
                            </instr>
                          </instr>
                        </instr>
                      </instr>
                    </then>
                    <else>
                      <instr mname="" CodeAddress="9668" CodeSize="157">
                        <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="9668" CodeSize="22" SrcRow="142">
                          <subj>
                            <instr mname="tmp" linkedname=".MyPackage..tmp" CodeAddress="9668" CodeSize="3" SrcRow="142">
                            </instr>
                          </subj>
                          <instr mname="GetAI" linkedname=".MyPackage.TIO.GetAI" CodeAddress="9671" CodeSize="18" SrcRow="142">
                            <subj>
                              <instr mname="IO" linkedname=".MyPackage.IO" CodeAddress="9672" CodeSize="3" SrcRow="142">
                              </instr>
                            </subj>
                            <instr mname="ToChar" linkedname=".MyPackage.ToChar" CodeAddress="9675" CodeSize="11" SrcRow="142">
                              <instr mname="sum" linkedname=".MyPackage.signed_char.sum" CodeAddress="9675" CodeSize="9" SrcRow="142">
                                <subj>
                                  <instr mname="i" linkedname=".MyPackage..i" CodeAddress="9676" CodeSize="3" SrcRow="142">
                                  </instr>
                                </subj>
                                <constv typename="signed_char" value="1" />
                              </instr>
                            </instr>
                          </instr>
                        </instr>
                        <var name="TempDelta" address="21" ByteSize="4" CodeAddress="9690" CodeSize="1" SrcFile="AlgoLib.c" SrcRow="144">
                          <type typename="signed_long">
                          </type>
                        </var>
                        <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="9691" CodeSize="23" SrcRow="146">
                          <subj>
                            <instr mname="TempDelta" linkedname=".MyPackage....TempDelta" CodeAddress="9691" CodeSize="3" SrcRow="146">
                            </instr>
                          </subj>
                          <instr mname="PercentVAI" linkedname=".MyPackage.TAIDefault.PercentVAI" CodeAddress="9694" CodeSize="17" SrcRow="146">
                            <subj>
                              <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="9694" CodeSize="14" SrcRow="146">
                                <subj>
                                  <instr mname="AIDefault" linkedname=".MyPackage.AIDefault" CodeAddress="9695" CodeSize="3" SrcRow="146">
                                  </instr>
                                </subj>
                                <instr mname="i" linkedname=".MyPackage..i" CodeAddress="9698" CodeSize="3" SrcRow="146">
                                </instr>
                              </instr>
                            </subj>
                          </instr>
                        </instr>
                        <if>
                          <condition>
                            <instr mname="not" linkedname=".MyPackage.signed_char.not" CodeAddress="9714" CodeSize="8" SrcRow="150">
                              <subj>
                                <instr mname="RunningIntoSimulation" linkedname=".MyPackage.RunningIntoSimulation" CodeAddress="9715" CodeSize="5" SrcRow="150">
                                </instr>
                              </subj>
                            </instr>
                          </condition>
                          <then>
                            <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="9725" CodeSize="98" SrcRow="153">
                              <subj>
                                <instr mname="tmp" linkedname=".MyPackage..tmp" CodeAddress="9725" CodeSize="3" SrcRow="153">
                                </instr>
                              </subj>
                              <instr mname="sum" linkedname=".MyPackage.signed_char.sum" CodeAddress="9728" CodeSize="94" SrcRow="153">
                                <subj>
                                  <instr mname="IndexVAIMIN" linkedname=".MyPackage.TAIDefault.IndexVAIMIN" CodeAddress="9729" CodeSize="17" SrcRow="153">
                                    <subj>
                                      <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="9729" CodeSize="14" SrcRow="153">
                                        <subj>
                                          <instr mname="AIDefault" linkedname=".MyPackage.AIDefault" CodeAddress="9730" CodeSize="3" SrcRow="153">
                                          </instr>
                                        </subj>
                                        <instr mname="i" linkedname=".MyPackage..i" CodeAddress="9733" CodeSize="3" SrcRow="153">
                                        </instr>
                                      </instr>
                                    </subj>
                                  </instr>
                                </subj>
                                <instr mname="div" linkedname=".MyPackage.signed_char.div" CodeAddress="9748" CodeSize="73" SrcRow="153">
                                  <subj>
                                    <instr mname="" CodeAddress="9749" CodeSize="54">
                                      <instr mname="mul" linkedname=".MyPackage.signed_char.mul" CodeAddress="9749" CodeSize="54" SrcRow="153">
                                        <subj>
                                          <instr mname="" CodeAddress="9750" CodeSize="12">
                                            <instr mname="sub" linkedname=".MyPackage.signed_char.sub" CodeAddress="9750" CodeSize="12" SrcRow="153">
                                              <subj>
                                                <instr mname="tmp" linkedname=".MyPackage..tmp" CodeAddress="9751" CodeSize="3" SrcRow="153">
                                                </instr>
                                              </subj>
                                              <instr mname="TempDelta" linkedname=".MyPackage....TempDelta" CodeAddress="9756" CodeSize="3" SrcRow="153">
                                              </instr>
                                            </instr>
                                          </instr>
                                        </subj>
                                        <instr mname="" CodeAddress="9762" CodeSize="40">
                                          <instr mname="sub" linkedname=".MyPackage.signed_char.sub" CodeAddress="9762" CodeSize="40" SrcRow="153">
                                            <subj>
                                              <instr mname="IndexVAIMAX" linkedname=".MyPackage.TAIDefault.IndexVAIMAX" CodeAddress="9763" CodeSize="17" SrcRow="153">
                                                <subj>
                                                  <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="9763" CodeSize="14" SrcRow="153">
                                                    <subj>
                                                      <instr mname="AIDefault" linkedname=".MyPackage.AIDefault" CodeAddress="9764" CodeSize="3" SrcRow="153">
                                                      </instr>
                                                    </subj>
                                                    <instr mname="i" linkedname=".MyPackage..i" CodeAddress="9767" CodeSize="3" SrcRow="153">
                                                    </instr>
                                                  </instr>
                                                </subj>
                                              </instr>
                                            </subj>
                                            <instr mname="IndexVAIMIN" linkedname=".MyPackage.TAIDefault.IndexVAIMIN" CodeAddress="9782" CodeSize="17" SrcRow="153">
                                              <subj>
                                                <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="9782" CodeSize="14" SrcRow="153">
                                                  <subj>
                                                    <instr mname="AIDefault" linkedname=".MyPackage.AIDefault" CodeAddress="9783" CodeSize="3" SrcRow="153">
                                                    </instr>
                                                  </subj>
                                                  <instr mname="i" linkedname=".MyPackage..i" CodeAddress="9786" CodeSize="3" SrcRow="153">
                                                  </instr>
                                                </instr>
                                              </subj>
                                            </instr>
                                          </instr>
                                        </instr>
                                      </instr>
                                    </instr>
                                  </subj>
                                  <instr mname="" CodeAddress="9803" CodeSize="17">
                                    <instr mname="sub" linkedname=".MyPackage.signed_char.sub" CodeAddress="9803" CodeSize="17" SrcRow="153">
                                      <subj>
                                        <constv typename="signed_short" value="1000" />
                                      </subj>
                                      <instr mname="mul" linkedname=".MyPackage.signed_char.mul" CodeAddress="9810" CodeSize="9" SrcRow="153">
                                        <subj>
                                          <constv typename="signed_char" value="2" />
                                        </subj>
                                        <instr mname="TempDelta" linkedname=".MyPackage....TempDelta" SrcRow="153">
                                        </instr>
                                      </instr>
                                    </instr>
                                  </instr>
                                </instr>
                              </instr>
                            </instr>
                          </then>
                        </if>
                      </instr>
                    </else>
                  </if>
                </else>
              </if>
              <if>
                <condition>
                  <instr mname="ErrorOnVAI" linkedname=".MyPackage.TAIDefault.ErrorOnVAI" CodeAddress="9825" CodeSize="17" SrcRow="173">
                    <subj>
                      <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="9825" CodeSize="14" SrcRow="173">
                        <subj>
                          <instr mname="AIDefault" linkedname=".MyPackage.AIDefault" CodeAddress="9826" CodeSize="3" SrcRow="173">
                          </instr>
                        </subj>
                        <instr mname="i" linkedname=".MyPackage..i" CodeAddress="9829" CodeSize="3" SrcRow="173">
                        </instr>
                      </instr>
                    </subj>
                  </instr>
                </condition>
                <then>
                  <if>
                    <condition>
                      <instr mname="or" linkedname=".MyPackage.signed_char.or" CodeAddress="9847" CodeSize="58" SrcRow="174">
                        <subj>
                          <instr mname="LessThan" linkedname=".MyPackage.signed_char.LessThan" CodeAddress="9848" CodeSize="26" SrcRow="174">
                            <subj>
                              <instr mname="tmp" linkedname=".MyPackage..tmp" CodeAddress="9849" CodeSize="3" SrcRow="174">
                              </instr>
                            </subj>
                            <instr mname="IndexVAIMIN" linkedname=".MyPackage.TAIDefault.IndexVAIMIN" CodeAddress="9854" CodeSize="17" SrcRow="174">
                              <subj>
                                <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="9854" CodeSize="14" SrcRow="174">
                                  <subj>
                                    <instr mname="AIDefault" linkedname=".MyPackage.AIDefault" CodeAddress="9855" CodeSize="3" SrcRow="174">
                                    </instr>
                                  </subj>
                                  <instr mname="i" linkedname=".MyPackage..i" CodeAddress="9858" CodeSize="3" SrcRow="174">
                                  </instr>
                                </instr>
                              </subj>
                            </instr>
                          </instr>
                        </subj>
                        <instr mname="GreaterThan" linkedname=".MyPackage.signed_char.GreaterThan" CodeAddress="9874" CodeSize="30" SrcRow="174">
                          <subj>
                            <instr mname="tmp" linkedname=".MyPackage..tmp" CodeAddress="9875" CodeSize="3" SrcRow="174">
                            </instr>
                          </subj>
                          <instr mname="IndexVAIMAX" linkedname=".MyPackage.TAIDefault.IndexVAIMAX" CodeAddress="9880" CodeSize="17" SrcRow="174">
                            <subj>
                              <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="9880" CodeSize="14" SrcRow="174">
                                <subj>
                                  <instr mname="AIDefault" linkedname=".MyPackage.AIDefault" CodeAddress="9881" CodeSize="3" SrcRow="174">
                                  </instr>
                                </subj>
                                <instr mname="i" linkedname=".MyPackage..i" CodeAddress="9884" CodeSize="3" SrcRow="174">
                                </instr>
                              </instr>
                            </subj>
                          </instr>
                        </instr>
                      </instr>
                    </condition>
                    <then>
                      <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="9908" CodeSize="10" SrcRow="175">
                        <subj>
                          <instr mname="tmp" linkedname=".MyPackage..tmp" CodeAddress="9908" CodeSize="3" SrcRow="175">
                          </instr>
                        </subj>
                        <constv typename="signed_short" value="32767" />
                      </instr>
                    </then>
                  </if>
                </then>
              </if>
              <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="9918" CodeSize="20" SrcRow="178">
                <subj>
                  <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="9918" CodeSize="14" SrcRow="178">
                    <subj>
                      <instr mname="AIValue" linkedname=".MyPackage.AIValue" CodeAddress="9919" CodeSize="3" SrcRow="178">
                      </instr>
                    </subj>
                    <instr mname="i" linkedname=".MyPackage..i" CodeAddress="9922" CodeSize="3" SrcRow="178">
                    </instr>
                  </instr>
                </subj>
                <instr mname="tmp" linkedname=".MyPackage..tmp" CodeAddress="9932" CodeSize="3" SrcRow="178">
                </instr>
              </instr>
            </instr>
          </instr>
          <instr mname="for" CodeAddress="9957" CodeSize="61">
            <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="9957" CodeSize="6" SrcRow="183">
              <subj>
                <instr mname="i" linkedname=".MyPackage..i" CodeAddress="9957" CodeSize="3" SrcRow="183">
                </instr>
              </subj>
              <constv typename="signed_char" value="0" />
            </instr>
            <instr mname="LessThan" linkedname=".MyPackage.signed_char.LessThan" CodeAddress="10006" CodeSize="9" SrcRow="183">
              <subj>
                <instr mname="i" linkedname=".MyPackage..i" CodeAddress="10007" CodeSize="3" SrcRow="183">
                </instr>
              </subj>
              <constv typename="signed_char" value="22" />
            </instr>
            <instr mname="sum_set" linkedname=".MyPackage.signed_char.sum_set" CodeAddress="9999" CodeSize="7" SrcRow="183">
              <subj>
                <instr mname="i" linkedname=".MyPackage..i" CodeAddress="9999" CodeSize="3" SrcRow="183">
                </instr>
              </subj>
              <constv typename="signed_char" value="1" />
            </instr>
            <instr mname="" CodeAddress="9966" CodeSize="33">
              <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="9966" CodeSize="33" SrcRow="184">
                <subj>
                  <instr mname="LBit" linkedname=".MyPackage.signed_char.LBit" CodeAddress="9966" CodeSize="14" SrcRow="184">
                    <subj>
                      <instr mname="DIValue" linkedname=".MyPackage.DIValue" CodeAddress="9967" CodeSize="3" SrcRow="184">
                      </instr>
                    </subj>
                    <instr mname="i" linkedname=".MyPackage..i" CodeAddress="9970" CodeSize="3" SrcRow="184">
                    </instr>
                  </instr>
                </subj>
                <instr mname="GetDI" linkedname=".MyPackage.TFilteredIO.GetDI" CodeAddress="9980" CodeSize="18" SrcRow="184">
                  <subj>
                    <instr mname="IO" linkedname=".MyPackage.IO" CodeAddress="9981" CodeSize="3" SrcRow="184">
                    </instr>
                  </subj>
                  <instr mname="ToChar" linkedname=".MyPackage.ToChar" CodeAddress="9984" CodeSize="11" SrcRow="184">
                    <instr mname="sum" linkedname=".MyPackage.signed_char.sum" CodeAddress="9984" CodeSize="9" SrcRow="184">
                      <subj>
                        <instr mname="i" linkedname=".MyPackage..i" CodeAddress="9985" CodeSize="3" SrcRow="184">
                        </instr>
                      </subj>
                      <constv typename="signed_char" value="1" />
                    </instr>
                  </instr>
                </instr>
              </instr>
            </instr>
          </instr>
          <instr mname="for" CodeAddress="10018" CodeSize="64">
            <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="10018" CodeSize="6" SrcRow="189">
              <subj>
                <instr mname="i" linkedname=".MyPackage..i" CodeAddress="10018" CodeSize="3" SrcRow="189">
                </instr>
              </subj>
              <constv typename="signed_char" value="0" />
            </instr>
            <instr mname="LessThan" linkedname=".MyPackage.signed_char.LessThan" CodeAddress="10070" CodeSize="9" SrcRow="189">
              <subj>
                <instr mname="i" linkedname=".MyPackage..i" CodeAddress="10071" CodeSize="3" SrcRow="189">
                </instr>
              </subj>
              <constv typename="signed_char" value="6" />
            </instr>
            <instr mname="sum_set" linkedname=".MyPackage.signed_char.sum_set" CodeAddress="10063" CodeSize="7" SrcRow="189">
              <subj>
                <instr mname="i" linkedname=".MyPackage..i" CodeAddress="10063" CodeSize="3" SrcRow="189">
                </instr>
              </subj>
              <constv typename="signed_char" value="1" />
            </instr>
            <instr mname="" CodeAddress="10027" CodeSize="36">
              <instr mname="SetAO" linkedname=".MyPackage.TFilteredIO.SetAO" CodeAddress="10027" CodeSize="34" SrcRow="190">
                <subj>
                  <instr mname="IO" linkedname=".MyPackage.IO" CodeAddress="10028" CodeSize="3" SrcRow="190">
                  </instr>
                </subj>
                <instr mname="ToChar" linkedname=".MyPackage.ToChar" CodeAddress="10031" CodeSize="11" SrcRow="190">
                  <instr mname="sum" linkedname=".MyPackage.signed_char.sum" CodeAddress="10031" CodeSize="9" SrcRow="190">
                    <subj>
                      <instr mname="i" linkedname=".MyPackage..i" CodeAddress="10032" CodeSize="3" SrcRow="190">
                      </instr>
                    </subj>
                    <constv typename="signed_char" value="1" />
                  </instr>
                </instr>
                <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="10042" CodeSize="14" SrcRow="190">
                  <subj>
                    <instr mname="AOValue" linkedname=".MyPackage.AOValue" CodeAddress="10043" CodeSize="3" SrcRow="190">
                    </instr>
                  </subj>
                  <instr mname="i" linkedname=".MyPackage..i" CodeAddress="10046" CodeSize="3" SrcRow="190">
                  </instr>
                </instr>
              </instr>
            </instr>
          </instr>
          <instr mname="for" CodeAddress="10082" CodeSize="63">
            <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="10082" CodeSize="6" SrcRow="195">
              <subj>
                <instr mname="i" linkedname=".MyPackage..i" CodeAddress="10082" CodeSize="3" SrcRow="195">
                </instr>
              </subj>
              <constv typename="signed_char" value="0" />
            </instr>
            <instr mname="LessThan" linkedname=".MyPackage.signed_char.LessThan" CodeAddress="10133" CodeSize="9" SrcRow="195">
              <subj>
                <instr mname="i" linkedname=".MyPackage..i" CodeAddress="10134" CodeSize="3" SrcRow="195">
                </instr>
              </subj>
              <constv typename="signed_char" value="20" />
            </instr>
            <instr mname="sum_set" linkedname=".MyPackage.signed_char.sum_set" CodeAddress="10126" CodeSize="7" SrcRow="195">
              <subj>
                <instr mname="i" linkedname=".MyPackage..i" CodeAddress="10126" CodeSize="3" SrcRow="195">
                </instr>
              </subj>
              <constv typename="signed_char" value="1" />
            </instr>
            <instr mname="" CodeAddress="10091" CodeSize="35">
              <instr mname="SetDO" linkedname=".MyPackage.TFilteredIO.SetDO" CodeAddress="10091" CodeSize="33" SrcRow="196">
                <subj>
                  <instr mname="IO" linkedname=".MyPackage.IO" CodeAddress="10092" CodeSize="3" SrcRow="196">
                  </instr>
                </subj>
                <instr mname="ToChar" linkedname=".MyPackage.ToChar" CodeAddress="10095" CodeSize="11" SrcRow="196">
                  <instr mname="sum" linkedname=".MyPackage.signed_char.sum" CodeAddress="10095" CodeSize="9" SrcRow="196">
                    <subj>
                      <instr mname="i" linkedname=".MyPackage..i" CodeAddress="10096" CodeSize="3" SrcRow="196">
                      </instr>
                    </subj>
                    <constv typename="signed_char" value="1" />
                  </instr>
                </instr>
                <instr mname="LBit" linkedname=".MyPackage.signed_char.LBit" CodeAddress="10106" CodeSize="14" SrcRow="196">
                  <subj>
                    <instr mname="DOValue" linkedname=".MyPackage.DOValue" CodeAddress="10107" CodeSize="3" SrcRow="196">
                    </instr>
                  </subj>
                  <instr mname="i" linkedname=".MyPackage..i" CodeAddress="10110" CodeSize="3" SrcRow="196">
                  </instr>
                </instr>
              </instr>
            </instr>
          </instr>
        </instr>
      </code>
    </funct>
    <gvar mem="RAM" name="AlarmsManager" address="825" ByteSize="119">
      <type typename="TAlarmsManager">
      </type>
    </gvar>
    <gvar mem="RAM" name="UIAlarmNotification" address="944" ByteSize="1">
      <type typename="signed_char">
      </type>
    </gvar>
    <gvar mem="RAM" name="UIAlarmReset" address="945" ByteSize="1">
      <type typename="signed_char">
      </type>
    </gvar>
    <gvar mem="RAM" name="UIActiveAlarms" address="946" ByteSize="16">
      <type typename="Array">
        <ArrayItem maxlen="4" typename="signed_long">
        </ArrayItem>
      </type>
    </gvar>
    <item name="modbusdecl">
      <item name="ModbusTable">
      </item>
      <constv>
        <type typename="signed_char">
        </type>
        <valueexpr><constv value="0"/></valueexpr>
      </constv>
      <constv>
        <type typename="signed_short">
        </type>
        <valueexpr><constv value="2000"/></valueexpr>
      </constv>
      <item name="UIAlarmNotification">
      </item>
    </item>
    <item name="modbusdecl">
      <item name="ModbusTable">
      </item>
      <constv>
        <type typename="unsigned_char">
        </type>
        <valueexpr><constv value="128"/></valueexpr>
      </constv>
      <constv ByteSize="2">
        <type typename="signed_short">
        </type>
        <valueexpr><constv value="2001"/></valueexpr>
        <constv name="sum" ByteSize="2">
          <type typename="signed_short">
          </type>
          <valueexpr><constv value="2001"/></valueexpr>
          <constv ByteSize="1">
            <type typename="signed_char">
            </type>
            <valueexpr><constv value="1"/></valueexpr>
          </constv>
        </constv>
      </constv>
      <item name="UIAlarmReset">
      </item>
    </item>
    <funct name="Alarms_Init" address="10148" pathname=".MyPackage.Alarms_Init" MaxStackCallSz="28" MaxInternalStackSz="16" MaxInternalStackCallPos="AlgoLib.c:218" ByteSize="0" CodeAddress="10148" CodeSize="19" SrcFile="AlgoLib.c">
      <type typename="object">
      </type>
      <code>
        <instr mname="" CodeAddress="10160" CodeSize="6">
          <instr mname="Init" linkedname=".MyPackage.TAlarmsManager.Init" CodeAddress="10160" CodeSize="6" SrcRow="218">
            <subj>
              <instr mname="AlarmsManager" linkedname=".MyPackage.AlarmsManager" CodeAddress="10160" CodeSize="3" SrcRow="218">
              </instr>
            </subj>
          </instr>
        </instr>
      </code>
    </funct>
    <funct name="Alarms_Run" address="10167" pathname=".MyPackage.Alarms_Run" MaxStackCallSz="130" MaxInternalStackSz="45" MaxInternalStackCallPos="AlgoLib.c:251" ByteSize="0" CodeAddress="10167" CodeSize="314" SrcFile="AlgoLib.c">
      <type typename="object">
      </type>
      <code>
        <instr mname="" CodeAddress="10179" CodeSize="301">
          <var name="i" address="12" ByteSize="4" CodeAddress="10179" CodeSize="1" SrcFile="AlgoLib.c" SrcRow="222">
            <type typename="signed_long">
            </type>
          </var>
          <instr mname="Run" linkedname=".MyPackage.TAlarmsManager.Run" CodeAddress="10180" CodeSize="6" SrcRow="224">
            <subj>
              <instr mname="AlarmsManager" linkedname=".MyPackage.AlarmsManager" CodeAddress="10180" CodeSize="3" SrcRow="224">
              </instr>
            </subj>
          </instr>
          <if>
            <condition>
              <instr mname="BuzzerReq" linkedname=".MyPackage.TAlarmsManager.BuzzerReq" CodeAddress="10186" CodeSize="5" SrcRow="226">
                <subj>
                  <instr mname="AlarmsManager" linkedname=".MyPackage.AlarmsManager" CodeAddress="10186" CodeSize="3" SrcRow="226">
                  </instr>
                </subj>
              </instr>
            </condition>
            <then>
              <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="10195" CodeSize="6" SrcRow="227">
                <subj>
                  <instr mname="UIAlarmNotification" linkedname=".MyPackage.UIAlarmNotification" CodeAddress="10195" CodeSize="3" SrcRow="227">
                  </instr>
                </subj>
                <constv typename="signed_char" value="2" />
              </instr>
            </then>
            <else>
              <if>
                <condition>
                  <instr mname="ActiveAlarms" linkedname=".MyPackage.TAlarmsManager.ActiveAlarms" CodeAddress="10204" CodeSize="3" SrcRow="229">
                    <subj>
                      <instr mname="AlarmsManager" linkedname=".MyPackage.AlarmsManager" CodeAddress="10204" CodeSize="3" SrcRow="229">
                      </instr>
                    </subj>
                  </instr>
                </condition>
                <then>
                  <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="10212" CodeSize="6" SrcRow="230">
                    <subj>
                      <instr mname="UIAlarmNotification" linkedname=".MyPackage.UIAlarmNotification" CodeAddress="10212" CodeSize="3" SrcRow="230">
                      </instr>
                    </subj>
                    <constv typename="signed_char" value="1" />
                  </instr>
                </then>
                <else>
                  <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="10221" CodeSize="6" SrcRow="232">
                    <subj>
                      <instr mname="UIAlarmNotification" linkedname=".MyPackage.UIAlarmNotification" CodeAddress="10221" CodeSize="3" SrcRow="232">
                      </instr>
                    </subj>
                    <constv typename="signed_char" value="0" />
                  </instr>
                </else>
              </if>
            </else>
          </if>
          <instr mname="SetLed" linkedname=".MyPackage.TIO.SetLed" CodeAddress="10227" CodeSize="32" SrcRow="235">
            <subj>
              <instr mname="IO" linkedname=".MyPackage.IO" CodeAddress="10228" CodeSize="3" SrcRow="235">
              </instr>
            </subj>
            <constv typename="signed_char" value="2" />
            <instr mname="or" linkedname=".MyPackage.signed_char.or" CodeAddress="10234" CodeSize="20" SrcRow="235">
              <subj>
                <instr mname="NotEqual" linkedname=".MyPackage.signed_char.NotEqual" CodeAddress="10235" CodeSize="9" SrcRow="235">
                  <subj>
                    <instr mname="ActiveWarnings" linkedname=".MyPackage.TAlarmsManager.ActiveWarnings" CodeAddress="10236" CodeSize="3" SrcRow="235">
                      <subj>
                        <instr mname="AlarmsManager" linkedname=".MyPackage.AlarmsManager" CodeAddress="10236" CodeSize="3" SrcRow="235">
                        </instr>
                      </subj>
                    </instr>
                  </subj>
                  <constv typename="signed_char" value="0" />
                </instr>
              </subj>
              <instr mname="NotEqual" linkedname=".MyPackage.signed_char.NotEqual" CodeAddress="10244" CodeSize="9" SrcRow="235">
                <subj>
                  <instr mname="NackAlarms" linkedname=".MyPackage.TAlarmsManager.NackAlarms" CodeAddress="10245" CodeSize="3" SrcRow="235">
                    <subj>
                      <instr mname="AlarmsManager" linkedname=".MyPackage.AlarmsManager" CodeAddress="10245" CodeSize="3" SrcRow="235">
                      </instr>
                    </subj>
                  </instr>
                </subj>
                <constv typename="signed_char" value="0" />
              </instr>
            </instr>
          </instr>
          <instr mname="SetLed" linkedname=".MyPackage.TIO.SetLed" CodeAddress="10259" CodeSize="17" SrcRow="236">
            <subj>
              <instr mname="IO" linkedname=".MyPackage.IO" CodeAddress="10260" CodeSize="3" SrcRow="236">
              </instr>
            </subj>
            <constv typename="signed_char" value="3" />
            <instr mname="ActiveAlarms" linkedname=".MyPackage.TAlarmsManager.ActiveAlarms" CodeAddress="10266" CodeSize="3" SrcRow="236">
              <subj>
                <instr mname="AlarmsManager" linkedname=".MyPackage.AlarmsManager" CodeAddress="10266" CodeSize="3" SrcRow="236">
                </instr>
              </subj>
            </instr>
          </instr>
          <instr mname="for" CodeAddress="10276" CodeSize="45">
            <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="10276" CodeSize="6" SrcRow="239">
              <subj>
                <instr mname="i" linkedname=".MyPackage..i" CodeAddress="10276" CodeSize="3" SrcRow="239">
                </instr>
              </subj>
              <constv typename="signed_char" value="0" />
            </instr>
            <instr mname="LessThan" linkedname=".MyPackage.signed_char.LessThan" CodeAddress="10309" CodeSize="9" SrcRow="239">
              <subj>
                <instr mname="i" linkedname=".MyPackage..i" CodeAddress="10310" CodeSize="3" SrcRow="239">
                </instr>
              </subj>
              <constv typename="signed_char" value="4" />
            </instr>
            <instr mname="sum_set" linkedname=".MyPackage.signed_char.sum_set" CodeAddress="10302" CodeSize="7" SrcRow="239">
              <subj>
                <instr mname="i" linkedname=".MyPackage..i" CodeAddress="10302" CodeSize="3" SrcRow="239">
                </instr>
              </subj>
              <constv typename="signed_char" value="1" />
            </instr>
            <instr mname="" CodeAddress="10285" CodeSize="17">
              <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="10285" CodeSize="17" SrcRow="240">
                <subj>
                  <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="10285" CodeSize="14" SrcRow="240">
                    <subj>
                      <instr mname="UIActiveAlarms" linkedname=".MyPackage.UIActiveAlarms" CodeAddress="10286" CodeSize="3" SrcRow="240">
                      </instr>
                    </subj>
                    <instr mname="i" linkedname=".MyPackage..i" CodeAddress="10289" CodeSize="3" SrcRow="240">
                    </instr>
                  </instr>
                </subj>
                <constv typename="signed_char" value="0" />
              </instr>
            </instr>
          </instr>
          <instr mname="for" CodeAddress="10321" CodeSize="83">
            <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="10321" CodeSize="6" SrcRow="242">
              <subj>
                <instr mname="i" linkedname=".MyPackage..i" CodeAddress="10321" CodeSize="3" SrcRow="242">
                </instr>
              </subj>
              <constv typename="signed_char" value="0" />
            </instr>
            <instr mname="LessThan" linkedname=".MyPackage.signed_char.LessThan" CodeAddress="10392" CodeSize="9" SrcRow="242">
              <subj>
                <instr mname="i" linkedname=".MyPackage..i" CodeAddress="10393" CodeSize="3" SrcRow="242">
                </instr>
              </subj>
              <constv typename="signed_char" value="10" />
            </instr>
            <instr mname="sum_set" linkedname=".MyPackage.signed_char.sum_set" CodeAddress="10385" CodeSize="7" SrcRow="242">
              <subj>
                <instr mname="i" linkedname=".MyPackage..i" CodeAddress="10385" CodeSize="3" SrcRow="242">
                </instr>
              </subj>
              <constv typename="signed_char" value="1" />
            </instr>
            <instr mname="" CodeAddress="10330" CodeSize="55">
              <if>
                <condition>
                  <instr mname="AlarmActive" linkedname=".MyPackage.TAlarmStatus.AlarmActive" CodeAddress="10330" CodeSize="14" SrcRow="243">
                    <subj>
                      <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="10330" CodeSize="14" SrcRow="243">
                        <subj>
                          <instr mname="AlarmsStatus" linkedname=".MyPackage.TAlarmsManager.AlarmsStatus" CodeAddress="10331" CodeSize="3" SrcRow="243">
                            <subj>
                              <instr mname="AlarmsManager" linkedname=".MyPackage.AlarmsManager" CodeAddress="10331" CodeSize="3" SrcRow="243">
                              </instr>
                            </subj>
                          </instr>
                        </subj>
                        <instr mname="i" linkedname=".MyPackage..i" CodeAddress="10334" CodeSize="3" SrcRow="243">
                        </instr>
                      </instr>
                    </subj>
                  </instr>
                </condition>
                <then>
                  <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="10349" CodeSize="36" SrcRow="244">
                    <subj>
                      <instr mname="LBit" linkedname=".MyPackage.signed_char.LBit" CodeAddress="10349" CodeSize="33" SrcRow="244">
                        <subj>
                          <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="10350" CodeSize="18" SrcRow="244">
                            <subj>
                              <instr mname="UIActiveAlarms" linkedname=".MyPackage.UIActiveAlarms" CodeAddress="10351" CodeSize="3" SrcRow="244">
                              </instr>
                            </subj>
                            <instr mname="div" linkedname=".MyPackage.signed_char.div" CodeAddress="10354" CodeSize="9" SrcRow="244">
                              <subj>
                                <instr mname="i" linkedname=".MyPackage..i" CodeAddress="10355" CodeSize="3" SrcRow="244">
                                </instr>
                              </subj>
                              <constv typename="signed_char" value="32" />
                            </instr>
                          </instr>
                        </subj>
                        <instr mname="mod" linkedname=".MyPackage.signed_char.mod" CodeAddress="10368" CodeSize="9" SrcRow="244">
                          <subj>
                            <instr mname="i" linkedname=".MyPackage..i" CodeAddress="10369" CodeSize="3" SrcRow="244">
                            </instr>
                          </subj>
                          <constv typename="signed_char" value="32" />
                        </instr>
                      </instr>
                    </subj>
                    <constv typename="signed_char" value="1" />
                  </instr>
                </then>
              </if>
            </instr>
          </instr>
          <if>
            <condition>
              <instr mname="UIAlarmReset" linkedname=".MyPackage.UIAlarmReset" CodeAddress="10404" CodeSize="3" SrcRow="248">
              </instr>
            </condition>
            <then>
              <instr mname="" CodeAddress="10412" CodeSize="36">
                <instr mname="Mute" linkedname=".MyPackage.TAlarmsManager.Mute" CodeAddress="10412" CodeSize="6" SrcRow="249">
                  <subj>
                    <instr mname="AlarmsManager" linkedname=".MyPackage.AlarmsManager" CodeAddress="10412" CodeSize="3" SrcRow="249">
                    </instr>
                  </subj>
                </instr>
                <if>
                  <condition>
                    <instr mname="GreaterThan" linkedname=".MyPackage.signed_char.GreaterThan" CodeAddress="10418" CodeSize="13" SrcRow="250">
                      <subj>
                        <instr mname="UIAlarmReset" linkedname=".MyPackage.UIAlarmReset" CodeAddress="10419" CodeSize="3" SrcRow="250">
                        </instr>
                      </subj>
                      <constv typename="signed_char" value="1" />
                    </instr>
                  </condition>
                  <then>
                    <instr mname="ResetAlarms" linkedname=".MyPackage.TAlarmsManager.ResetAlarms" CodeAddress="10434" CodeSize="8" SrcRow="251">
                      <subj>
                        <instr mname="AlarmsManager" linkedname=".MyPackage.AlarmsManager" CodeAddress="10434" CodeSize="3" SrcRow="251">
                        </instr>
                      </subj>
                      <constv typename="signed_char" value="1" />
                    </instr>
                  </then>
                </if>
                <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="10442" CodeSize="6" SrcRow="252">
                  <subj>
                    <instr mname="UIAlarmReset" linkedname=".MyPackage.UIAlarmReset" CodeAddress="10442" CodeSize="3" SrcRow="252">
                    </instr>
                  </subj>
                  <constv typename="signed_char" value="0" />
                </instr>
              </instr>
            </then>
          </if>
          <if>
            <condition>
              <instr mname="EventHistoryLog_AddEvent" linkedname=".MyPackage.EventHistoryLog_AddEvent" CodeAddress="10448" CodeSize="3" SrcRow="257">
              </instr>
            </condition>
            <then>
              <instr mname="" CodeAddress="10456" CodeSize="22">
                <instr mname="WriteEvent" linkedname=".MyPackage.TEventHistory.WriteEvent" CodeAddress="10456" CodeSize="16" SrcRow="258">
                  <subj>
                    <instr mname="EventHistoryLog" linkedname=".MyPackage.EventHistoryLog" CodeAddress="10456" CodeSize="3" SrcRow="258">
                    </instr>
                  </subj>
                  <instr mname="EventHistoryLog_AddEvent" linkedname=".MyPackage.EventHistoryLog_AddEvent" CodeAddress="10459" CodeSize="3" SrcRow="258">
                  </instr>
                  <instr mname="EventHistoryLog_AddEventData" linkedname=".MyPackage.EventHistoryLog_AddEventData" CodeAddress="10464" CodeSize="3" SrcRow="258">
                  </instr>
                </instr>
                <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="10472" CodeSize="6" SrcRow="259">
                  <subj>
                    <instr mname="EventHistoryLog_AddEvent" linkedname=".MyPackage.EventHistoryLog_AddEvent" CodeAddress="10472" CodeSize="3" SrcRow="259">
                    </instr>
                  </subj>
                  <constv typename="signed_char" value="0" />
                </instr>
              </instr>
            </then>
          </if>
        </instr>
      </code>
    </funct>
    <funct name="AlgoLib_Init" address="10481" pathname=".MyPackage.AlgoLib_Init" MaxStackCallSz="117" MaxInternalStackSz="33" MaxInternalStackCallPos="AlgoLib.c:327" ByteSize="0" CodeAddress="10481" CodeSize="184" SrcFile="AlgoLib.c">
      <type typename="object">
      </type>
      <code>
        <instr mname="" CodeAddress="10493" CodeSize="171">
          <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="10493" CodeSize="17" SrcRow="302">
            <subj>
              <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="10493" CodeSize="11" SrcRow="302">
                <subj>
                  <instr mname="ParamVal" linkedname=".MyPackage.ParamVal" CodeAddress="10494" CodeSize="3" SrcRow="302">
                  </instr>
                </subj>
                <constv typename="signed_char" value="29" />
              </instr>
            </subj>
            <instr mname="NodeID" linkedname=".MyPackage.TCANopen.NodeID" CodeAddress="10504" CodeSize="3" SrcRow="302">
              <subj>
                <instr mname="Can" linkedname=".MyPackage.Can" CodeAddress="10504" CodeSize="3" SrcRow="302">
                </instr>
              </subj>
            </instr>
          </instr>
          <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="10510" CodeSize="9" SrcRow="303">
            <subj>
              <instr mname="LastNodeID" linkedname=".MyPackage.LastNodeID" CodeAddress="10510" CodeSize="3" SrcRow="303">
              </instr>
            </subj>
            <instr mname="NodeID" linkedname=".MyPackage.TCANopen.NodeID" CodeAddress="10513" CodeSize="3" SrcRow="303">
              <subj>
                <instr mname="Can" linkedname=".MyPackage.Can" CodeAddress="10513" CodeSize="3" SrcRow="303">
                </instr>
              </subj>
            </instr>
          </instr>
          <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="10519" CodeSize="9" SrcRow="307">
            <subj>
              <instr mname="Ident" linkedname=".MyPackage.TModbus.Ident" CodeAddress="10519" CodeSize="3" SrcRow="307">
                <subj>
                  <instr mname="Com1" linkedname=".MyPackage.Com1" CodeAddress="10519" CodeSize="3" SrcRow="307">
                  </instr>
                </subj>
              </instr>
            </subj>
            <instr mname="NodeID" linkedname=".MyPackage.TCANopen.NodeID" CodeAddress="10522" CodeSize="3" SrcRow="307">
              <subj>
                <instr mname="Can" linkedname=".MyPackage.Can" CodeAddress="10522" CodeSize="3" SrcRow="307">
                </instr>
              </subj>
            </instr>
          </instr>
          <var name="flags" address="12" ByteSize="1" CodeAddress="10528" CodeSize="2" SrcFile="AlgoLib.c" SrcRow="309">
            <type typename="signed_char">
            </type>
          </var>
          <if>
            <condition>
              <instr mname="Equal" linkedname=".MyPackage.signed_char.Equal" CodeAddress="10530" CodeSize="19" SrcRow="310">
                <subj>
                  <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="10530" CodeSize="10" SrcRow="310">
                    <subj>
                      <instr mname="ParamVal" linkedname=".MyPackage.ParamVal" CodeAddress="10530" CodeSize="3" SrcRow="310">
                      </instr>
                    </subj>
                    <constv typename="signed_char" value="31" />
                  </instr>
                </subj>
                <constv typename="signed_char" value="0" />
              </instr>
            </condition>
            <then>
              <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="10552" CodeSize="6" SrcRow="311">
                <subj>
                  <instr mname="flags" linkedname=".MyPackage..flags" CodeAddress="10552" CodeSize="3" SrcRow="311">
                  </instr>
                </subj>
                <constv typename="signed_char" value="8" />
              </instr>
            </then>
            <else>
              <if>
                <condition>
                  <instr mname="Equal" linkedname=".MyPackage.signed_char.Equal" CodeAddress="10561" CodeSize="21" SrcRow="312">
                    <subj>
                      <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="10562" CodeSize="11" SrcRow="312">
                        <subj>
                          <instr mname="ParamVal" linkedname=".MyPackage.ParamVal" CodeAddress="10563" CodeSize="3" SrcRow="312">
                          </instr>
                        </subj>
                        <constv typename="signed_char" value="31" />
                      </instr>
                    </subj>
                    <constv typename="signed_char" value="1" />
                  </instr>
                </condition>
                <then>
                  <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="10585" CodeSize="6" SrcRow="313">
                    <subj>
                      <instr mname="flags" linkedname=".MyPackage..flags" CodeAddress="10585" CodeSize="3" SrcRow="313">
                      </instr>
                    </subj>
                    <constv typename="signed_char" value="14" />
                  </instr>
                </then>
                <else>
                  <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="10594" CodeSize="6" SrcRow="315">
                    <subj>
                      <instr mname="flags" linkedname=".MyPackage..flags" CodeAddress="10594" CodeSize="3" SrcRow="315">
                      </instr>
                    </subj>
                    <constv typename="signed_char" value="12" />
                  </instr>
                </else>
              </if>
            </else>
          </if>
          <instr mname="Init" linkedname=".MyPackage.TModbus.Init" CodeAddress="10600" CodeSize="27" SrcRow="316">
            <subj>
              <instr mname="Com1" linkedname=".MyPackage.Com1" CodeAddress="10601" CodeSize="3" SrcRow="316">
              </instr>
            </subj>
            <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="10604" CodeSize="11" SrcRow="316">
              <subj>
                <instr mname="ParamVal" linkedname=".MyPackage.ParamVal" CodeAddress="10605" CodeSize="3" SrcRow="316">
                </instr>
              </subj>
              <constv typename="signed_char" value="30" />
            </instr>
            <instr mname="flags" linkedname=".MyPackage..flags" CodeAddress="10617" CodeSize="3" SrcRow="316">
            </instr>
          </instr>
          <instr mname="IOManager_Init" linkedname=".MyPackage.IOManager_Init" CodeAddress="10627" CodeSize="3" SrcRow="318">
          </instr>
          <instr mname="Alarms_Init" linkedname=".MyPackage.Alarms_Init" CodeAddress="10630" CodeSize="3" SrcRow="319">
          </instr>
          <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="10633" CodeSize="11" SrcRow="320">
            <subj>
              <instr mname="UIParamsChanged" linkedname=".MyPackage.UIParamsChanged" CodeAddress="10633" CodeSize="6" SrcRow="320">
              </instr>
            </subj>
            <constv typename="signed_char" value="1" />
          </instr>
          <instr mname="RTC_Run" linkedname=".MyPackage.RTC_Run" CodeAddress="10644" CodeSize="3" SrcRow="323">
          </instr>
          <instr mname="Init" linkedname=".MyPackage.TEventHistory.Init" CodeAddress="10647" CodeSize="9" SrcRow="327">
            <subj>
              <instr mname="EventHistoryLog" linkedname=".MyPackage.EventHistoryLog" CodeAddress="10647" CodeSize="3" SrcRow="327">
              </instr>
            </subj>
            <instr mname="RTC" linkedname=".MyPackage.RTC" CodeAddress="10650" CodeSize="3" SrcRow="327">
            </instr>
          </instr>
          <instr mname="Init" linkedname=".MyPackage.T7dScheduler.Init" CodeAddress="10656" CodeSize="6" SrcRow="331">
            <subj>
              <instr mname="Scheduler" linkedname=".MyPackage.Scheduler" CodeAddress="10656" CodeSize="3" SrcRow="331">
              </instr>
            </subj>
          </instr>
        </instr>
      </code>
    </funct>
    <funct name="AlgoLib_Run" address="10665" pathname=".MyPackage.AlgoLib_Run" MaxStackCallSz="142" MaxInternalStackSz="34" MaxInternalStackCallPos="AlgoLib.c:388" ByteSize="0" CodeAddress="10665" CodeSize="208" SrcFile="AlgoLib.c">
      <type typename="object">
      </type>
      <code>
        <instr mname="" CodeAddress="10677" CodeSize="195">
          <if>
            <condition>
              <instr mname="NotEqual" linkedname=".MyPackage.signed_char.NotEqual" CodeAddress="10677" CodeSize="14" SrcRow="342">
                <subj>
                  <instr mname="CANgetNodeID" linkedname=".MyPackage.CANgetNodeID" CodeAddress="10678" CodeSize="5" SrcRow="342">
                  </instr>
                </subj>
                <instr mname="NodeID" linkedname=".MyPackage.TCANopen.NodeID" CodeAddress="10685" CodeSize="3" SrcRow="342">
                  <subj>
                    <instr mname="Can" linkedname=".MyPackage.Can" CodeAddress="10685" CodeSize="3" SrcRow="342">
                    </instr>
                  </subj>
                </instr>
              </instr>
            </condition>
            <then>
              <instr mname="" CodeAddress="10694" CodeSize="37">
                <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="10694" CodeSize="11" SrcRow="344">
                  <subj>
                    <instr mname="NodeID" linkedname=".MyPackage.TCANopen.NodeID" CodeAddress="10694" CodeSize="3" SrcRow="344">
                      <subj>
                        <instr mname="Can" linkedname=".MyPackage.Can" CodeAddress="10694" CodeSize="3" SrcRow="344">
                        </instr>
                      </subj>
                    </instr>
                  </subj>
                  <instr mname="CANgetNodeID" linkedname=".MyPackage.CANgetNodeID" CodeAddress="10697" CodeSize="5" SrcRow="344">
                  </instr>
                </instr>
                <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="10705" CodeSize="17" SrcRow="345">
                  <subj>
                    <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="10705" CodeSize="11" SrcRow="345">
                      <subj>
                        <instr mname="ParamVal" linkedname=".MyPackage.ParamVal" CodeAddress="10706" CodeSize="3" SrcRow="345">
                        </instr>
                      </subj>
                      <constv typename="signed_char" value="29" />
                    </instr>
                  </subj>
                  <instr mname="NodeID" linkedname=".MyPackage.TCANopen.NodeID" CodeAddress="10716" CodeSize="3" SrcRow="345">
                    <subj>
                      <instr mname="Can" linkedname=".MyPackage.Can" CodeAddress="10716" CodeSize="3" SrcRow="345">
                      </instr>
                    </subj>
                  </instr>
                </instr>
                <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="10722" CodeSize="9" SrcRow="346">
                  <subj>
                    <instr mname="LastNodeID" linkedname=".MyPackage.LastNodeID" CodeAddress="10722" CodeSize="3" SrcRow="346">
                    </instr>
                  </subj>
                  <instr mname="NodeID" linkedname=".MyPackage.TCANopen.NodeID" CodeAddress="10725" CodeSize="3" SrcRow="346">
                    <subj>
                      <instr mname="Can" linkedname=".MyPackage.Can" CodeAddress="10725" CodeSize="3" SrcRow="346">
                      </instr>
                    </subj>
                  </instr>
                </instr>
              </instr>
            </then>
          </if>
          <if>
            <condition>
              <instr mname="NotEqual" linkedname=".MyPackage.signed_char.NotEqual" CodeAddress="10731" CodeSize="20" SrcRow="350">
                <subj>
                  <instr mname="LastNodeID" linkedname=".MyPackage.LastNodeID" CodeAddress="10732" CodeSize="3" SrcRow="350">
                  </instr>
                </subj>
                <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="10737" CodeSize="11" SrcRow="350">
                  <subj>
                    <instr mname="ParamVal" linkedname=".MyPackage.ParamVal" CodeAddress="10738" CodeSize="3" SrcRow="350">
                    </instr>
                  </subj>
                  <constv typename="signed_char" value="29" />
                </instr>
              </instr>
            </condition>
            <then>
              <instr mname="" CodeAddress="10754" CodeSize="53">
                <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="10754" CodeSize="17" SrcRow="352">
                  <subj>
                    <instr mname="NodeID" linkedname=".MyPackage.TCANopen.NodeID" CodeAddress="10754" CodeSize="3" SrcRow="352">
                      <subj>
                        <instr mname="Can" linkedname=".MyPackage.Can" CodeAddress="10754" CodeSize="3" SrcRow="352">
                        </instr>
                      </subj>
                    </instr>
                  </subj>
                  <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="10757" CodeSize="11" SrcRow="352">
                    <subj>
                      <instr mname="ParamVal" linkedname=".MyPackage.ParamVal" CodeAddress="10758" CodeSize="3" SrcRow="352">
                      </instr>
                    </subj>
                    <constv typename="signed_char" value="29" />
                  </instr>
                </instr>
                <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="10771" CodeSize="9" SrcRow="353">
                  <subj>
                    <instr mname="LastNodeID" linkedname=".MyPackage.LastNodeID" CodeAddress="10771" CodeSize="3" SrcRow="353">
                    </instr>
                  </subj>
                  <instr mname="NodeID" linkedname=".MyPackage.TCANopen.NodeID" CodeAddress="10774" CodeSize="3" SrcRow="353">
                    <subj>
                      <instr mname="Can" linkedname=".MyPackage.Can" CodeAddress="10774" CodeSize="3" SrcRow="353">
                      </instr>
                    </subj>
                  </instr>
                </instr>
                <instr mname="Init" linkedname=".MyPackage.TCom.Init" CodeAddress="10780" CodeSize="18" SrcRow="354">
                  <subj>
                    <instr mname="Can" linkedname=".MyPackage.Can" CodeAddress="10781" CodeSize="3" SrcRow="354">
                    </instr>
                  </subj>
                  <instr mname="CurrSpeed" linkedname=".MyPackage.TCANopen.CurrSpeed" CodeAddress="10784" CodeSize="7" SrcRow="354">
                    <subj>
                      <instr mname="Can" linkedname=".MyPackage.Can" CodeAddress="10785" CodeSize="3" SrcRow="354">
                      </instr>
                    </subj>
                  </instr>
                  <constv typename="signed_char" value="0" />
                </instr>
                <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="10798" CodeSize="9" SrcRow="355">
                  <subj>
                    <instr mname="Ident" linkedname=".MyPackage.TModbus.Ident" CodeAddress="10798" CodeSize="3" SrcRow="355">
                      <subj>
                        <instr mname="Com1" linkedname=".MyPackage.Com1" CodeAddress="10798" CodeSize="3" SrcRow="355">
                        </instr>
                      </subj>
                    </instr>
                  </subj>
                  <instr mname="NodeID" linkedname=".MyPackage.TCANopen.NodeID" CodeAddress="10801" CodeSize="3" SrcRow="355">
                    <subj>
                      <instr mname="Can" linkedname=".MyPackage.Can" CodeAddress="10801" CodeSize="3" SrcRow="355">
                      </instr>
                    </subj>
                  </instr>
                </instr>
              </instr>
            </then>
          </if>
          <instr mname="IOManager_Run" linkedname=".MyPackage.IOManager_Run" CodeAddress="10807" CodeSize="3" SrcRow="360">
          </instr>
          <instr mname="Alarms_Run" linkedname=".MyPackage.Alarms_Run" CodeAddress="10810" CodeSize="3" SrcRow="371">
          </instr>
          <instr mname="RTC_Run" linkedname=".MyPackage.RTC_Run" CodeAddress="10813" CodeSize="3" SrcRow="374">
          </instr>
          <instr mname="Run" linkedname=".MyPackage.TEventHistory.Run" CodeAddress="10816" CodeSize="9" SrcRow="378">
            <subj>
              <instr mname="EventHistoryLog" linkedname=".MyPackage.EventHistoryLog" CodeAddress="10816" CodeSize="3" SrcRow="378">
              </instr>
            </subj>
            <instr mname="RTC" linkedname=".MyPackage.RTC" CodeAddress="10819" CodeSize="3" SrcRow="378">
            </instr>
          </instr>
          <if>
            <condition>
              <instr mname="UIResetHistory" linkedname=".MyPackage.UIResetHistory" CodeAddress="10825" CodeSize="6" SrcRow="380">
              </instr>
            </condition>
            <then>
              <instr mname="" CodeAddress="10835" CodeSize="15">
                <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="10835" CodeSize="9" SrcRow="382">
                  <subj>
                    <instr mname="UIResetHistory" linkedname=".MyPackage.UIResetHistory" CodeAddress="10835" CodeSize="6" SrcRow="382">
                    </instr>
                  </subj>
                  <constv typename="signed_char" value="0" />
                </instr>
                <instr mname="ClearHistory" linkedname=".MyPackage.TEventHistory.ClearHistory" CodeAddress="10844" CodeSize="6" SrcRow="383">
                  <subj>
                    <instr mname="EventHistoryLog" linkedname=".MyPackage.EventHistoryLog" CodeAddress="10844" CodeSize="3" SrcRow="383">
                    </instr>
                  </subj>
                </instr>
              </instr>
            </then>
          </if>
          <instr mname="SetLed" linkedname=".MyPackage.TIO.SetLed" CodeAddress="10850" CodeSize="22" SrcRow="388">
            <subj>
              <instr mname="IO" linkedname=".MyPackage.IO" CodeAddress="10851" CodeSize="3" SrcRow="388">
              </instr>
            </subj>
            <constv typename="signed_char" value="1" />
            <instr mname="not" linkedname=".MyPackage.signed_char.not" CodeAddress="10857" CodeSize="12" SrcRow="388">
              <subj>
                <instr mname="GetLed" linkedname=".MyPackage.TIO.GetLed" CodeAddress="10858" CodeSize="10" SrcRow="388">
                  <subj>
                    <instr mname="IO" linkedname=".MyPackage.IO" CodeAddress="10859" CodeSize="3" SrcRow="388">
                    </instr>
                  </subj>
                  <constv typename="signed_char" value="1" />
                </instr>
              </subj>
            </instr>
          </instr>
        </instr>
      </code>
    </funct>
    <class name="float" address="10873" ByteSize="4" CodeAddress="10873" CodeSize="12" SrcFile="math.lib">
      <ivar name="super" address="0" ByteSize="0">
        <type typename="object">
        </type>
      </ivar>
      <ivar name="lval" address="0" ByteSize="4">
        <type typename="signed_long">
        </type>
      </ivar>
      <meth name="set" pathname=".MyPackage.float.set" ByteSize="0" SrcFile="math.lib">
        <type typename="object">
        </type>
        <pvar name="this" address="0" ByteSize="4">
          <type typename="float" reference="1"></type>
        </pvar>
        <pvar name="n" ByteSize="4">
          <type typename="float">
          </type>
        </pvar>
      </meth>
      <meth name="sum" pathname=".MyPackage.float.sum" ByteSize="4" SrcFile="math.lib">
        <type typename="float">
        </type>
        <pvar name="RetVal" address="0" ByteSize="4">
          <type typename="float"></type>
        </pvar>
        <pvar name="this" address="4" ByteSize="4">
          <type typename="float" reference="1"></type>
        </pvar>
        <pvar name="n" ByteSize="4">
          <type typename="float">
          </type>
        </pvar>
      </meth>
      <meth name="mul" pathname=".MyPackage.float.mul" ByteSize="4" SrcFile="math.lib">
        <type typename="float">
        </type>
        <pvar name="RetVal" address="0" ByteSize="4">
          <type typename="float"></type>
        </pvar>
        <pvar name="this" address="4" ByteSize="4">
          <type typename="float" reference="1"></type>
        </pvar>
        <pvar name="n" ByteSize="4">
          <type typename="float">
          </type>
        </pvar>
      </meth>
      <meth name="sub" pathname=".MyPackage.float.sub" ByteSize="4" SrcFile="math.lib">
        <type typename="float">
        </type>
        <pvar name="RetVal" address="0" ByteSize="4">
          <type typename="float"></type>
        </pvar>
        <pvar name="this" address="4" ByteSize="4">
          <type typename="float" reference="1"></type>
        </pvar>
        <pvar name="n" ByteSize="4">
          <type typename="float">
          </type>
        </pvar>
      </meth>
      <meth name="div" pathname=".MyPackage.float.div" ByteSize="4" SrcFile="math.lib">
        <type typename="float">
        </type>
        <pvar name="RetVal" address="0" ByteSize="4">
          <type typename="float"></type>
        </pvar>
        <pvar name="this" address="4" ByteSize="4">
          <type typename="float" reference="1"></type>
        </pvar>
        <pvar name="n" ByteSize="4">
          <type typename="float">
          </type>
        </pvar>
      </meth>
      <meth name="LessThan" pathname=".MyPackage.float.LessThan" ByteSize="4" SrcFile="math.lib">
        <type typename="signed_long">
        </type>
        <pvar name="RetVal" address="0" ByteSize="4">
          <type typename="signed_long"></type>
        </pvar>
        <pvar name="this" address="4" ByteSize="4">
          <type typename="float" reference="1"></type>
        </pvar>
        <pvar name="n" ByteSize="4">
          <type typename="float">
          </type>
        </pvar>
      </meth>
      <meth name="LessOrEqual" pathname=".MyPackage.float.LessOrEqual" ByteSize="4" SrcFile="math.lib">
        <type typename="signed_long">
        </type>
        <pvar name="RetVal" address="0" ByteSize="4">
          <type typename="signed_long"></type>
        </pvar>
        <pvar name="this" address="4" ByteSize="4">
          <type typename="float" reference="1"></type>
        </pvar>
        <pvar name="n" ByteSize="4">
          <type typename="float">
          </type>
        </pvar>
      </meth>
      <meth name="GreaterOrEqual" pathname=".MyPackage.float.GreaterOrEqual" ByteSize="4" SrcFile="math.lib">
        <type typename="signed_long">
        </type>
        <pvar name="RetVal" address="0" ByteSize="4">
          <type typename="signed_long"></type>
        </pvar>
        <pvar name="this" address="4" ByteSize="4">
          <type typename="float" reference="1"></type>
        </pvar>
        <pvar name="n" ByteSize="4">
          <type typename="float">
          </type>
        </pvar>
      </meth>
      <meth name="GreaterThan" pathname=".MyPackage.float.GreaterThan" ByteSize="4" SrcFile="math.lib">
        <type typename="signed_long">
        </type>
        <pvar name="RetVal" address="0" ByteSize="4">
          <type typename="signed_long"></type>
        </pvar>
        <pvar name="this" address="4" ByteSize="4">
          <type typename="float" reference="1"></type>
        </pvar>
        <pvar name="n" ByteSize="4">
          <type typename="float">
          </type>
        </pvar>
      </meth>
    </class>
    <funct name="IntegerToFloat" address="10873" pathname=".MyPackage.IntegerToFloat" MaxStackCallSz="104" MaxInternalStackSz="48" MaxInternalStackCallPos="math.lib:286" ByteSize="4" CodeAddress="10873" CodeSize="39" SrcFile="math.lib">
      <type typename="float">
      </type>
      <pvar name="RetVal" address="0" ByteSize="4">
        <type typename="float"></type>
      </pvar>
      <pvar name="Val" address="4" ByteSize="4">
        <type typename="float">
        </type>
      </pvar>
      <pvar name="Exp" address="8" ByteSize="4" CodeAddress="15015" CodeSize="1" SrcFile="math.lib">
        <type typename="signed_long">
        </type>
        <valueexpr><constv value="0"/></valueexpr>
      </pvar>
    </funct>
    <funct name="FloatToIntegerTrunc" pathname=".MyPackage.FloatToIntegerTrunc" ByteSize="4" SrcFile="math.lib">
      <type typename="signed_long">
      </type>
      <pvar name="RetVal" address="0" ByteSize="4">
        <type typename="signed_long"></type>
      </pvar>
      <pvar name="Val" ByteSize="4">
        <type typename="float">
        </type>
      </pvar>
    </funct>
    <funct name="FloatToIntegerRound" address="10912" pathname=".MyPackage.FloatToIntegerRound" MaxStackCallSz="44" MaxInternalStackSz="44" MaxInternalStackCallPos="math.lib:338" ByteSize="4" CodeAddress="10912" CodeSize="63" SrcFile="math.lib">
      <type typename="signed_long">
      </type>
      <pvar name="RetVal" address="0" ByteSize="4">
        <type typename="signed_long"></type>
      </pvar>
      <pvar name="Val" address="4" ByteSize="4">
        <type typename="float">
        </type>
      </pvar>
    </funct>
    <funct name="powf_i" address="10975" pathname=".MyPackage.powf_i" MaxStackCallSz="68" MaxInternalStackSz="44" MaxInternalStackCallPos="math.lib:446" ByteSize="4" CodeAddress="10975" CodeSize="319" SrcFile="math.lib">
      <type typename="float">
      </type>
      <pvar name="RetVal" address="0" ByteSize="4">
        <type typename="float"></type>
      </pvar>
      <pvar name="x" address="4" ByteSize="4">
        <type typename="float">
        </type>
      </pvar>
      <pvar name="y" address="8" ByteSize="4">
        <type typename="signed_long">
        </type>
      </pvar>
    </funct>
    <class name="p1">
      <ivar name="p1a">
        <type typename="float">
        </type>
        <valueexpr><constv value="5.1"/></valueexpr>
      </ivar>
      <ivar name="p1b">
        <type typename="float">
        </type>
        <valueexpr><constv value="6"/></valueexpr>
      </ivar>
    </class>
    <class name="nvm_thread_function_prototype">
      <ivar name="fnaddr">
        <type typename="signed_long">
        </type>
      </ivar>
      <ivar name="ReqStack">
        <type typename="signed_long">
        </type>
      </ivar>
    </class>
    <class name="nvm_thread_method_prototype">
      <ivar name="fnaddr">
        <type typename="signed_long">
        </type>
      </ivar>
      <ivar name="ReqStack">
        <type typename="signed_long">
        </type>
      </ivar>
      <ivar name="Subject">
        <type typename="signed_long">
        </type>
      </ivar>
    </class>
    <class name="TMutex">
      <ivar name="LockStatus">
        <type typename="signed_char">
        </type>
      </ivar>
    </class>
    <class name="TModbusMaster" address="11294" ByteSize="36" CodeAddress="11294" CodeSize="12" SrcFile="ModbusMaster.lib">
      <ivar name="super" address="0" ByteSize="27">
        <type typename="TCom">
        </type>
      </ivar>
      <ivar name="Timeout" address="27" ByteSize="2">
        <type typename="unsigned_short">
        </type>
        <valueexpr><constv value="1500"/></valueexpr>
      </ivar>
      <ivar name="Status" address="29" ByteSize="1">
        <type typename="signed_char">
        </type>
      </ivar>
      <ivar name="TTimeout" address="30" ByteSize="6">
        <type typename="TTimer">
        </type>
      </ivar>
      <meth name="Init" address="11294" pathname=".MyPackage.TModbusMaster.Init" MaxStackCallSz="88" MaxInternalStackSz="42" MaxInternalStackCallPos="ModbusMaster.lib:143" ByteSize="4" CodeAddress="11294" CodeSize="43" SrcFile="ModbusMaster.lib">
        <type typename="signed_long">
        </type>
        <pvar name="RetVal" address="0" ByteSize="4">
          <type typename="signed_long"></type>
        </pvar>
        <pvar name="this" address="4" ByteSize="4">
          <type typename="TModbusMaster" reference="1"></type>
        </pvar>
        <pvar name="iSpeed" address="8" ByteSize="4">
          <type typename="signed_long">
          </type>
        </pvar>
        <pvar name="iFlags" address="12" ByteSize="2">
          <type typename="unsigned_short">
          </type>
        </pvar>
      </meth>
      <meth name="Run" address="11337" pathname=".MyPackage.TModbusMaster.Run" MaxStackCallSz="84" MaxInternalStackSz="42" MaxInternalStackCallPos="ModbusMaster.lib:175" ByteSize="0" CodeAddress="11337" CodeSize="193" SrcFile="ModbusMaster.lib">
        <type typename="object">
        </type>
        <pvar name="this" address="0" ByteSize="4">
          <type typename="TModbusMaster" reference="1"></type>
        </pvar>
      </meth>
      <meth name="CRCModbus" address="11530" pathname=".MyPackage.TModbusMaster.CRCModbus" MaxStackCallSz="30" MaxInternalStackSz="30" MaxInternalStackCallPos="ModbusMaster.lib:187" ByteSize="2" CodeAddress="11530" CodeSize="27" SrcFile="ModbusMaster.lib">
        <type typename="unsigned_short">
        </type>
        <pvar name="RetVal" address="0" ByteSize="2">
          <type typename="unsigned_short"></type>
        </pvar>
        <pvar name="this" address="2" ByteSize="4">
          <type typename="TModbusMaster" reference="1"></type>
        </pvar>
        <pvar name="a" address="6" ByteSize="4">
          <type typename="object" reference="1">
          </type>
        </pvar>
        <pvar name="iSize" address="10" ByteSize="4">
          <type typename="signed_long">
          </type>
        </pvar>
      </meth>
      <meth name="StartRequest" address="11557" pathname=".MyPackage.TModbusMaster.StartRequest" MaxStackCallSz="100" MaxInternalStackSz="31" MaxInternalStackCallPos="ModbusMaster.lib:202" ByteSize="0" CodeAddress="11557" CodeSize="51" SrcFile="ModbusMaster.lib">
        <type typename="object">
        </type>
        <pvar name="this" address="0" ByteSize="4">
          <type typename="TModbusMaster" reference="1"></type>
        </pvar>
        <pvar name="SlaveAddress" address="4" ByteSize="1">
          <type typename="unsigned_char">
          </type>
        </pvar>
        <pvar name="FunctionCode" address="5" ByteSize="2">
          <type typename="unsigned_short">
          </type>
        </pvar>
      </meth>
      <meth name="AddToRequest" address="11608" pathname=".MyPackage.TModbusMaster.AddToRequest" MaxStackCallSz="81" MaxInternalStackSz="44" MaxInternalStackCallPos="ModbusMaster.lib:215" ByteSize="0" CodeAddress="11608" CodeSize="93" SrcFile="ModbusMaster.lib">
        <type typename="object">
        </type>
        <pvar name="this" address="0" ByteSize="4">
          <type typename="TModbusMaster" reference="1"></type>
        </pvar>
        <pvar name="iValue" address="4" ByteSize="4">
          <type typename="signed_long">
          </type>
        </pvar>
        <pvar name="iLen" address="8" ByteSize="4" CodeAddress="11898" CodeSize="6" SrcFile="ModbusMaster.lib">
          <type typename="signed_long">
          </type>
          <valueexpr><constv value="-2"/></valueexpr>
        </pvar>
      </meth>
      <meth name="EndRequest" address="11701" pathname=".MyPackage.TModbusMaster.EndRequest" MaxStackCallSz="99" MaxInternalStackSz="44" MaxInternalStackCallPos="ModbusMaster.lib:235" ByteSize="0" CodeAddress="11701" CodeSize="142" SrcFile="ModbusMaster.lib">
        <type typename="object">
        </type>
        <pvar name="this" address="0" ByteSize="4">
          <type typename="TModbusMaster" reference="1"></type>
        </pvar>
      </meth>
      <meth name="ReadRequest" address="11843" pathname=".MyPackage.TModbusMaster.ReadRequest" MaxStackCallSz="122" MaxInternalStackSz="34" MaxInternalStackCallPos="ModbusMaster.lib:252" ByteSize="0" CodeAddress="11843" CodeSize="65" SrcFile="ModbusMaster.lib">
        <type typename="object">
        </type>
        <pvar name="this" address="0" ByteSize="4">
          <type typename="TModbusMaster" reference="1"></type>
        </pvar>
        <pvar name="Ident" address="4" ByteSize="1">
          <type typename="unsigned_char">
          </type>
        </pvar>
        <pvar name="FunctionCode" address="5" ByteSize="1">
          <type typename="unsigned_char">
          </type>
        </pvar>
        <pvar name="StartAddress" address="6" ByteSize="2">
          <type typename="unsigned_short">
          </type>
        </pvar>
        <pvar name="QuantityObject" address="8" ByteSize="2">
          <type typename="unsigned_short">
          </type>
        </pvar>
      </meth>
      <meth name="ReadAnswerVarShort" address="11908" pathname=".MyPackage.TModbusMaster.ReadAnswerVarShort" MaxStackCallSz="100" MaxInternalStackSz="36" MaxInternalStackCallPos="ModbusMaster.lib:344" ByteSize="2" CodeAddress="11908" CodeSize="32" SrcFile="ModbusMaster.lib">
        <type typename="signed_short">
        </type>
        <pvar name="RetVal" address="0" ByteSize="2">
          <type typename="signed_short"></type>
        </pvar>
        <pvar name="this" address="2" ByteSize="4">
          <type typename="TModbusMaster" reference="1"></type>
        </pvar>
        <pvar name="Index" address="6" ByteSize="4" CodeAddress="16996" CodeSize="6" SrcFile="ModbusMaster.lib">
          <type typename="signed_long">
          </type>
          <valueexpr><constv value="1"/></valueexpr>
        </pvar>
      </meth>
      <meth name="ReadAnswerVar" address="11940" pathname=".MyPackage.TModbusMaster.ReadAnswerVar" MaxStackCallSz="74" MaxInternalStackSz="54" MaxInternalStackCallPos="ModbusMaster.lib:365" ByteSize="2" CodeAddress="11940" CodeSize="290" SrcFile="ModbusMaster.lib">
        <type typename="unsigned_short">
        </type>
        <pvar name="RetVal" address="0" ByteSize="2">
          <type typename="unsigned_short"></type>
        </pvar>
        <pvar name="this" address="2" ByteSize="4">
          <type typename="TModbusMaster" reference="1"></type>
        </pvar>
        <pvar name="Index" address="6" ByteSize="4">
          <type typename="signed_long">
          </type>
          <valueexpr><constv value="1"/></valueexpr>
        </pvar>
      </meth>
    </class>
    <gvar mem="ROM" name="DIDefault" address="1519" ByteSize="44">
      <type typename="Array">
        <ArrayItem maxlen="22" typename="TDIDefault">
        </ArrayItem>
      </type>
      <valueexpr>
        <instr mname="">
          <instr mname="">
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="3" />
          </instr>
          <instr mname="">
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="4" />
          </instr>
          <instr mname="">
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="5" />
          </instr>
          <instr mname="">
            <constv typename="signed_char" value="1" />
            <constv typename="signed_char" value="6" />
          </instr>
          <instr mname="">
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="7" />
          </instr>
          <instr mname="">
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="8" />
          </instr>
          <instr mname="">
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="1" />
          </instr>
          <instr mname="">
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
          </instr>
          <instr mname="">
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
          </instr>
          <instr mname="">
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
          </instr>
          <instr mname="">
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
          </instr>
          <instr mname="">
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
          </instr>
          <instr mname="">
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
          </instr>
          <instr mname="">
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
          </instr>
          <instr mname="">
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
          </instr>
          <instr mname="">
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
          </instr>
          <instr mname="">
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
          </instr>
          <instr mname="">
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
          </instr>
          <instr mname="">
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
          </instr>
          <instr mname="">
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
          </instr>
          <instr mname="">
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
          </instr>
          <instr mname="">
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
          </instr>
        </instr>
      </valueexpr>
    </gvar>
    <gvar mem="ROM" name="DODefault" address="1563" ByteSize="40">
      <type typename="Array">
        <ArrayItem maxlen="20" typename="TDODefault">
        </ArrayItem>
      </type>
      <valueexpr>
        <instr mname="">
          <instr mname="">
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="3" />
          </instr>
          <instr mname="">
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="4" />
          </instr>
          <instr mname="">
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="5" />
          </instr>
          <instr mname="">
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="6" />
          </instr>
          <instr mname="">
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="7" />
          </instr>
          <instr mname="">
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="8" />
          </instr>
          <instr mname="">
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="9" />
          </instr>
          <instr mname="">
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="15" />
          </instr>
          <instr mname="">
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="16" />
          </instr>
          <instr mname="">
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="10" />
          </instr>
          <instr mname="">
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="11" />
          </instr>
          <instr mname="">
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="12" />
          </instr>
          <instr mname="">
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="1" />
          </instr>
          <instr mname="">
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="13" />
          </instr>
          <instr mname="">
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="17" />
          </instr>
          <instr mname="">
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
          </instr>
          <instr mname="">
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
          </instr>
          <instr mname="">
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
          </instr>
          <instr mname="">
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
          </instr>
          <instr mname="">
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
          </instr>
        </instr>
      </valueexpr>
    </gvar>
    <gvar mem="ROM" name="AIDefault" address="1603" ByteSize="144">
      <type typename="Array">
        <ArrayItem maxlen="16" typename="TAIDefault">
        </ArrayItem>
      </type>
      <valueexpr>
        <instr mname="">
          <instr mname="">
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="1" />
          </instr>
          <instr mname="">
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="1" />
          </instr>
          <instr mname="">
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="1" />
          </instr>
          <instr mname="">
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="1" />
          </instr>
          <instr mname="">
            <constv typename="signed_char" value="1" />
            <constv typename="signed_char" value="2" />
            <constv typename="signed_short" value="-200" />
            <constv typename="signed_short" value="2000" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="1" />
          </instr>
          <instr mname="">
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="1" />
          </instr>
          <instr mname="">
            <constv typename="signed_char" value="1" />
            <constv typename="signed_char" value="3" />
            <constv typename="signed_short" value="-600" />
            <constv typename="signed_short" value="2000" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="1" />
          </instr>
          <instr mname="">
            <constv typename="signed_char" value="1" />
            <constv typename="signed_char" value="4" />
            <constv typename="signed_short" value="-200" />
            <constv typename="signed_short" value="2000" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="1" />
          </instr>
          <instr mname="">
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="1" />
          </instr>
          <instr mname="">
            <constv typename="signed_char" value="1" />
            <constv typename="signed_char" value="5" />
            <constv typename="signed_short" value="-200" />
            <constv typename="signed_short" value="2000" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="1" />
          </instr>
          <instr mname="">
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_short" value="1000" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="1" />
          </instr>
          <instr mname="">
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_short" value="1000" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="1" />
          </instr>
          <instr mname="">
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_short" value="1000" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="1" />
          </instr>
          <instr mname="">
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_short" value="1000" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="1" />
          </instr>
          <instr mname="">
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_short" value="1000" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="1" />
          </instr>
          <instr mname="">
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_short" value="1000" />
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="1" />
          </instr>
        </instr>
      </valueexpr>
    </gvar>
    <gvar mem="ROM" name="AODefault" address="1747" ByteSize="12">
      <type typename="Array">
        <ArrayItem maxlen="6" typename="TAODefault">
        </ArrayItem>
      </type>
      <valueexpr>
        <instr mname="">
          <instr mname="">
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
          </instr>
          <instr mname="">
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
          </instr>
          <instr mname="">
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
          </instr>
          <instr mname="">
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
          </instr>
          <instr mname="">
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
          </instr>
          <instr mname="">
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
          </instr>
        </instr>
      </valueexpr>
    </gvar>
    <class name="TStaticIOManager" address="12230" ByteSize="6" CodeAddress="12230" CodeSize="12" SrcFile="TStaticIOManager.lib">
      <ivar name="ReconfiguredIOTimer" address="0" ByteSize="4">
        <type typename="TTimerSec">
        </type>
      </ivar>
      <ivar name="EnableOUT" address="4" ByteSize="1">
        <type typename="unsigned_char">
        </type>
        <valueexpr><constv value="1"/></valueexpr>
      </ivar>
      <ivar name="ResetConfigReq" address="5" ByteSize="1">
        <type typename="unsigned_char">
        </type>
        <valueexpr><constv value="1"/></valueexpr>
      </ivar>
      <meth name="Init" address="12230" pathname=".MyPackage.TStaticIOManager.Init" MaxStackCallSz="32" MaxInternalStackSz="24" MaxInternalStackCallPos="TStaticIOManager.lib:56" ByteSize="0" CodeAddress="12230" CodeSize="51" SrcFile="TStaticIOManager.lib">
        <type typename="object">
        </type>
        <pvar name="this" address="0" ByteSize="4">
          <type typename="TStaticIOManager" reference="1"></type>
        </pvar>
      </meth>
      <meth name="LoadDefault" address="12281" pathname=".MyPackage.TStaticIOManager.LoadDefault" MaxStackCallSz="32" MaxInternalStackSz="24" MaxInternalStackCallPos="TStaticIOManager.lib:74" ByteSize="0" CodeAddress="12281" CodeSize="44" SrcFile="TStaticIOManager.lib">
        <type typename="object">
        </type>
        <pvar name="this" address="0" ByteSize="4">
          <type typename="TStaticIOManager" reference="1"></type>
        </pvar>
      </meth>
      <meth name="ResetValues" address="12325" pathname=".MyPackage.TStaticIOManager.ResetValues" MaxStackCallSz="164" MaxInternalStackSz="20" MaxInternalStackCallPos="TStaticIOManager.lib:85" ByteSize="0" CodeAddress="12325" CodeSize="37" SrcFile="TStaticIOManager.lib">
        <type typename="object">
        </type>
        <pvar name="this" address="0" ByteSize="4">
          <type typename="TStaticIOManager" reference="1"></type>
        </pvar>
      </meth>
      <meth name="ResetConfig" address="12362" pathname=".MyPackage.TStaticIOManager.ResetConfig" MaxStackCallSz="180" MaxInternalStackSz="20" MaxInternalStackCallPos="TStaticIOManager.lib:100" ByteSize="0" CodeAddress="12362" CodeSize="17" SrcFile="TStaticIOManager.lib">
        <type typename="object">
        </type>
        <pvar name="this" address="0" ByteSize="4">
          <type typename="TStaticIOManager" reference="1"></type>
        </pvar>
      </meth>
      <meth name="Run" address="12379" pathname=".MyPackage.TStaticIOManager.Run" MaxStackCallSz="196" MaxInternalStackSz="36" MaxInternalStackCallPos="TStaticIOManager.lib:115" ByteSize="0" CodeAddress="12379" CodeSize="145" SrcFile="TStaticIOManager.lib">
        <type typename="object">
        </type>
        <pvar name="this" address="0" ByteSize="4">
          <type typename="TStaticIOManager" reference="1"></type>
        </pvar>
      </meth>
    </class>
    <gvar mem="RAM" name="DIMng" address="962" ByteSize="4">
      <type typename="TDIManager">
      </type>
    </gvar>
    <gvar mem="RAM" name="DOMng" address="966" ByteSize="4">
      <type typename="TDOManager">
      </type>
    </gvar>
    <gvar mem="RAM" name="AIMng" address="970" ByteSize="0">
      <type typename="TAIManager">
      </type>
    </gvar>
    <gvar mem="RAM" name="AOMng" address="970" ByteSize="0">
      <type typename="TAOManager">
      </type>
    </gvar>
    <gvar mem="RAM" name="VDIValue" address="970" ByteSize="2">
      <type typename="Array">
        <ArrayItem maxlen="9" typename="bit">
        </ArrayItem>
      </type>
    </gvar>
    <gvar mem="RAM" name="VDOValue" address="972" ByteSize="3">
      <type typename="Array">
        <ArrayItem maxlen="18" typename="bit">
        </ArrayItem>
      </type>
    </gvar>
    <gvar mem="RAM" name="VAIValue" address="975" ByteSize="12">
      <type typename="Array">
        <ArrayItem maxlen="6" typename="signed_short">
        </ArrayItem>
      </type>
    </gvar>
    <gvar mem="RAM" name="VAOValue" address="987" ByteSize="2">
      <type typename="Array">
        <ArrayItem maxlen="1" typename="signed_short">
        </ArrayItem>
      </type>
    </gvar>
    <class name="TDIDefault" address="12524" ByteSize="2" CodeAddress="12524" CodeSize="12" SrcFile="TStaticIOManager.lib">
      <ivar name="VDIPolarity" address="0" ByteSize="1">
        <type typename="unsigned_char">
        </type>
      </ivar>
      <ivar name="IndexVDI" address="1" ByteSize="1">
        <type typename="unsigned_char">
        </type>
      </ivar>
    </class>
    <class name="TDIManager" address="12524" ByteSize="4" CodeAddress="12524" CodeSize="12" SrcFile="TStaticIOManager.lib">
      <ivar name="Polarity" address="0" ByteSize="4">
        <type typename="signed_long">
        </type>
      </ivar>
      <meth name="Init" address="12524" pathname=".MyPackage.TDIManager.Init" MaxStackCallSz="16" MaxInternalStackSz="16" MaxInternalStackCallPos="" ByteSize="0" CodeAddress="12524" CodeSize="13" SrcFile="TStaticIOManager.lib">
        <type typename="object">
        </type>
        <pvar name="this" address="0" ByteSize="4">
          <type typename="TDIManager" reference="1"></type>
        </pvar>
      </meth>
      <meth name="LoadDIDefault" address="12537" pathname=".MyPackage.TDIManager.LoadDIDefault" MaxStackCallSz="16" MaxInternalStackSz="16" MaxInternalStackCallPos="" ByteSize="0" CodeAddress="12537" CodeSize="13" SrcFile="TStaticIOManager.lib">
        <type typename="object">
        </type>
        <pvar name="this" address="0" ByteSize="4">
          <type typename="TDIManager" reference="1"></type>
        </pvar>
      </meth>
      <meth name="ResetVDI" address="12550" pathname=".MyPackage.TDIManager.ResetVDI" MaxStackCallSz="37" MaxInternalStackSz="37" MaxInternalStackCallPos="TStaticIOManager.lib:182" ByteSize="0" CodeAddress="12550" CodeSize="110" SrcFile="TStaticIOManager.lib">
        <type typename="object">
        </type>
        <pvar name="this" address="0" ByteSize="4">
          <type typename="TDIManager" reference="1"></type>
        </pvar>
      </meth>
      <meth name="Run" address="12660" pathname=".MyPackage.TDIManager.Run" MaxStackCallSz="44" MaxInternalStackSz="44" MaxInternalStackCallPos="TStaticIOManager.lib:195" ByteSize="0" CodeAddress="12660" CodeSize="97" SrcFile="TStaticIOManager.lib">
        <type typename="object">
        </type>
        <pvar name="this" address="0" ByteSize="4">
          <type typename="TDIManager" reference="1"></type>
        </pvar>
      </meth>
    </class>
    <class name="TDODefault" address="12757" ByteSize="2" CodeAddress="12757" CodeSize="12" SrcFile="TStaticIOManager.lib">
      <ivar name="VDOPolarity" address="0" ByteSize="1">
        <type typename="unsigned_char">
        </type>
      </ivar>
      <ivar name="IndexVDO" address="1" ByteSize="1">
        <type typename="unsigned_char">
        </type>
      </ivar>
    </class>
    <class name="TDOManager" address="12757" ByteSize="4" CodeAddress="12757" CodeSize="12" SrcFile="TStaticIOManager.lib">
      <ivar name="Polarity" address="0" ByteSize="4">
        <type typename="signed_long">
        </type>
      </ivar>
      <meth name="Init" address="12757" pathname=".MyPackage.TDOManager.Init" MaxStackCallSz="16" MaxInternalStackSz="16" MaxInternalStackCallPos="" ByteSize="0" CodeAddress="12757" CodeSize="13" SrcFile="TStaticIOManager.lib">
        <type typename="object">
        </type>
        <pvar name="this" address="0" ByteSize="4">
          <type typename="TDOManager" reference="1"></type>
        </pvar>
      </meth>
      <meth name="LoadDODefault" address="12770" pathname=".MyPackage.TDOManager.LoadDODefault" MaxStackCallSz="16" MaxInternalStackSz="16" MaxInternalStackCallPos="" ByteSize="0" CodeAddress="12770" CodeSize="13" SrcFile="TStaticIOManager.lib">
        <type typename="object">
        </type>
        <pvar name="this" address="0" ByteSize="4">
          <type typename="TDOManager" reference="1"></type>
        </pvar>
      </meth>
      <meth name="ResetVDO" address="12783" pathname=".MyPackage.TDOManager.ResetVDO" MaxStackCallSz="37" MaxInternalStackSz="37" MaxInternalStackCallPos="TStaticIOManager.lib:224" ByteSize="0" CodeAddress="12783" CodeSize="110" SrcFile="TStaticIOManager.lib">
        <type typename="object">
        </type>
        <pvar name="this" address="0" ByteSize="4">
          <type typename="TDOManager" reference="1"></type>
        </pvar>
      </meth>
      <meth name="Run" address="12893" pathname=".MyPackage.TDOManager.Run" MaxStackCallSz="50" MaxInternalStackSz="50" MaxInternalStackCallPos="TStaticIOManager.lib:238" ByteSize="0" CodeAddress="12893" CodeSize="105" SrcFile="TStaticIOManager.lib">
        <type typename="object">
        </type>
        <pvar name="this" address="0" ByteSize="4">
          <type typename="TDOManager" reference="1"></type>
        </pvar>
        <pvar name="EnableOUT" address="4" ByteSize="1">
          <type typename="unsigned_char">
          </type>
        </pvar>
      </meth>
    </class>
    <class name="TAIDefault" address="12998" ByteSize="9" CodeAddress="12998" CodeSize="12" SrcFile="TStaticIOManager.lib">
      <ivar name="IndexAIType" address="0" ByteSize="1">
        <type typename="unsigned_char">
        </type>
      </ivar>
      <ivar name="IndexVAI" address="1" ByteSize="1">
        <type typename="unsigned_char">
        </type>
      </ivar>
      <ivar name="IndexVAIMIN" address="2" ByteSize="2">
        <type typename="signed_short">
        </type>
      </ivar>
      <ivar name="IndexVAIMAX" address="4" ByteSize="2">
        <type typename="signed_short">
        </type>
      </ivar>
      <ivar name="PercentVAI" address="6" ByteSize="2">
        <type typename="signed_short">
        </type>
      </ivar>
      <ivar name="ErrorOnVAI" address="8" ByteSize="1">
        <type typename="unsigned_char">
        </type>
      </ivar>
    </class>
    <gvar mem="ROM" name="AIUserType2IOType" address="1759" ByteSize="9">
      <type typename="Array">
        <ArrayItem maxlen="9" typename="signed_char">
        </ArrayItem>
      </type>
      <valueexpr>
        <instr mname="">
          <constv typename="signed_char" value="0" />
          <constv typename="signed_char" value="1" />
          <constv typename="signed_char" value="2" />
          <constv typename="signed_char" value="7" />
          <constv typename="signed_char" value="8" />
          <constv typename="signed_char" value="9" />
          <constv typename="signed_char" value="3" />
          <constv typename="signed_char" value="6" />
          <constv typename="signed_char" value="10" />
        </instr>
      </valueexpr>
    </gvar>
    <class name="TAIManager" address="12998" ByteSize="0" CodeAddress="12998" CodeSize="12" SrcFile="TStaticIOManager.lib">
      <meth name="Init" address="12998" pathname=".MyPackage.TAIManager.Init" MaxStackCallSz="16" MaxInternalStackSz="16" MaxInternalStackCallPos="" ByteSize="0" CodeAddress="12998" CodeSize="13" SrcFile="TStaticIOManager.lib">
        <type typename="object">
        </type>
        <pvar name="this" address="0" ByteSize="4">
          <type typename="TAIManager" reference="1"></type>
        </pvar>
      </meth>
      <meth name="LoadAIDefault" address="13011" pathname=".MyPackage.TAIManager.LoadAIDefault" MaxStackCallSz="16" MaxInternalStackSz="16" MaxInternalStackCallPos="" ByteSize="0" CodeAddress="13011" CodeSize="13" SrcFile="TStaticIOManager.lib">
        <type typename="object">
        </type>
        <pvar name="this" address="0" ByteSize="4">
          <type typename="TAIManager" reference="1"></type>
        </pvar>
      </meth>
      <meth name="ResetVAI" address="13024" pathname=".MyPackage.TAIManager.ResetVAI" MaxStackCallSz="115" MaxInternalStackSz="45" MaxInternalStackCallPos="TStaticIOManager.lib:297" ByteSize="0" CodeAddress="13024" CodeSize="153" SrcFile="TStaticIOManager.lib">
        <type typename="object">
        </type>
        <pvar name="this" address="0" ByteSize="4">
          <type typename="TAIManager" reference="1"></type>
        </pvar>
      </meth>
      <meth name="Run" address="13177" pathname=".MyPackage.TAIManager.Run" MaxStackCallSz="40" MaxInternalStackSz="40" MaxInternalStackCallPos="TStaticIOManager.lib:304" ByteSize="0" CodeAddress="13177" CodeSize="83" SrcFile="TStaticIOManager.lib">
        <type typename="object">
        </type>
        <pvar name="this" address="0" ByteSize="4">
          <type typename="TAIManager" reference="1"></type>
        </pvar>
      </meth>
    </class>
    <class name="TAODefault" address="13260" ByteSize="2" CodeAddress="13260" CodeSize="12" SrcFile="TStaticIOManager.lib">
      <ivar name="IndexAOType" address="0" ByteSize="1">
        <type typename="unsigned_char">
        </type>
      </ivar>
      <ivar name="IndexVAO" address="1" ByteSize="1">
        <type typename="unsigned_char">
        </type>
      </ivar>
    </class>
    <gvar mem="ROM" name="AOUserType2IOType" address="1768" ByteSize="8">
      <type typename="Array">
        <ArrayItem maxlen="8" typename="signed_char">
        </ArrayItem>
      </type>
      <valueexpr>
        <instr mname="">
          <constv typename="signed_char" value="0" />
          <constv typename="signed_char" value="7" />
          <constv typename="signed_char" value="2" />
          <constv typename="signed_char" value="8" />
          <constv typename="signed_char" value="4" />
          <constv typename="signed_char" value="5" />
          <constv typename="signed_char" value="11" />
          <constv typename="signed_char" value="50" />
        </instr>
      </valueexpr>
    </gvar>
    <class name="TAOManager" address="13260" ByteSize="0" CodeAddress="13260" CodeSize="12" SrcFile="TStaticIOManager.lib">
      <meth name="Init" address="13260" pathname=".MyPackage.TAOManager.Init" MaxStackCallSz="16" MaxInternalStackSz="16" MaxInternalStackCallPos="" ByteSize="0" CodeAddress="13260" CodeSize="13" SrcFile="TStaticIOManager.lib">
        <type typename="object">
        </type>
        <pvar name="this" address="0" ByteSize="4">
          <type typename="TAOManager" reference="1"></type>
        </pvar>
      </meth>
      <meth name="LoadAODefault" address="13273" pathname=".MyPackage.TAOManager.LoadAODefault" MaxStackCallSz="16" MaxInternalStackSz="16" MaxInternalStackCallPos="" ByteSize="0" CodeAddress="13273" CodeSize="13" SrcFile="TStaticIOManager.lib">
        <type typename="object">
        </type>
        <pvar name="this" address="0" ByteSize="4">
          <type typename="TAOManager" reference="1"></type>
        </pvar>
      </meth>
      <meth name="ResetVAO" address="13286" pathname=".MyPackage.TAOManager.ResetVAO" MaxStackCallSz="148" MaxInternalStackSz="45" MaxInternalStackCallPos="TStaticIOManager.lib:340" ByteSize="0" CodeAddress="13286" CodeSize="159" SrcFile="TStaticIOManager.lib">
        <type typename="object">
        </type>
        <pvar name="this" address="0" ByteSize="4">
          <type typename="TAOManager" reference="1"></type>
        </pvar>
      </meth>
      <meth name="Run" address="13445" pathname=".MyPackage.TAOManager.Run" MaxStackCallSz="49" MaxInternalStackSz="49" MaxInternalStackCallPos="TStaticIOManager.lib:350" ByteSize="0" CodeAddress="13445" CodeSize="134" SrcFile="TStaticIOManager.lib">
        <type typename="object">
        </type>
        <pvar name="this" address="0" ByteSize="4">
          <type typename="TAOManager" reference="1"></type>
        </pvar>
        <pvar name="EnableOUT" address="4" ByteSize="1">
          <type typename="unsigned_char">
          </type>
        </pvar>
      </meth>
    </class>
    <class name="TSetpoint">
      <ivar name="Setp">
        <type typename="signed_long">
        </type>
      </ivar>
      <ivar name="Diff">
        <type typename="signed_short">
        </type>
      </ivar>
    </class>
    <class name="TSetpointN">
      <ivar name="super">
        <type typename="TSetpoint">
        </type>
      </ivar>
      <ivar name="Neutral">
        <type typename="signed_short">
        </type>
      </ivar>
    </class>
    <class name="TSetpointPI">
      <ivar name="super">
        <type typename="TSetpointN">
        </type>
      </ivar>
      <ivar name="TIntegr">
        <type typename="signed_long">
        </type>
      </ivar>
      <ivar name="IerrAcc">
        <type typename="signed_long">
        </type>
      </ivar>
      <ivar name="ErrorTime">
        <type typename="TTimerSec">
        </type>
      </ivar>
    </class>
    <class name="TSetpointDZ">
      <ivar name="super">
        <type typename="TSetpointPI">
        </type>
      </ivar>
      <ivar name="DiffOff">
        <type typename="signed_short">
        </type>
      </ivar>
      <ivar name="MinOnDelay">
        <type typename="signed_long">
        </type>
      </ivar>
      <ivar name="MaxOnDelay">
        <type typename="signed_long">
        </type>
      </ivar>
      <ivar name="MinOffDelay">
        <type typename="signed_long">
        </type>
      </ivar>
      <ivar name="MaxOffDelay">
        <type typename="signed_long">
        </type>
      </ivar>
      <ivar name="NStages">
        <type typename="signed_char">
        </type>
      </ivar>
      <ivar name="Zone">
        <type typename="signed_char">
        </type>
      </ivar>
      <ivar name="StageOn">
        <type typename="signed_char">
        </type>
      </ivar>
    </class>
    <class name="TToggle" address="13579" ByteSize="1" CodeAddress="13579" CodeSize="12" SrcFile="HVAClib.lib">
      <ivar name="CurrStatus" address="0" bitoffset="0" ByteSize="0" BitSize="1">
        <type typename="bit">
        </type>
      </ivar>
      <meth name="SetStatus" address="13579" pathname=".MyPackage.TToggle.SetStatus" MaxStackCallSz="44" MaxInternalStackSz="44" MaxInternalStackCallPos="HVAClib.lib:493" ByteSize="4" CodeAddress="13579" CodeSize="99" SrcFile="HVAClib.lib">
        <type typename="signed_long">
        </type>
        <pvar name="RetVal" address="0" ByteSize="4">
          <type typename="signed_long"></type>
        </pvar>
        <pvar name="this" address="4" ByteSize="4">
          <type typename="TToggle" reference="1"></type>
        </pvar>
        <pvar name="i" address="8" ByteSize="4">
          <type typename="signed_long">
          </type>
        </pvar>
      </meth>
      <meth name="GetStatus" address="13678" pathname=".MyPackage.TToggle.GetStatus" MaxStackCallSz="29" MaxInternalStackSz="29" MaxInternalStackCallPos="HVAClib.lib:502" ByteSize="4" CodeAddress="13678" CodeSize="24" SrcFile="HVAClib.lib">
        <type typename="signed_long">
        </type>
        <pvar name="RetVal" address="0" ByteSize="4">
          <type typename="signed_long"></type>
        </pvar>
        <pvar name="this" address="4" ByteSize="4">
          <type typename="TToggle" reference="1"></type>
        </pvar>
      </meth>
    </class>
    <class name="TToggleTimer" address="13702" ByteSize="5" CodeAddress="13702" CodeSize="12" SrcFile="HVAClib.lib">
      <ivar name="super" address="0" ByteSize="1">
        <type typename="TToggle">
        </type>
      </ivar>
      <ivar name="tmr" address="1" ByteSize="4">
        <type typename="TTimerSec">
        </type>
      </ivar>
      <meth name="SetStatus" address="13702" pathname=".MyPackage.TToggleTimer.SetStatus" MaxStackCallSz="84" MaxInternalStackSz="40" MaxInternalStackCallPos="HVAClib.lib:526" ByteSize="4" CodeAddress="13702" CodeSize="50" SrcFile="HVAClib.lib">
        <type typename="signed_long">
        </type>
        <pvar name="RetVal" address="0" ByteSize="4">
          <type typename="signed_long"></type>
        </pvar>
        <pvar name="this" address="4" ByteSize="4">
          <type typename="TToggleTimer" reference="1"></type>
        </pvar>
        <pvar name="i" address="8" ByteSize="4">
          <type typename="signed_long">
          </type>
        </pvar>
      </meth>
    </class>
    <class name="TStageControl">
      <ivar name="NStages">
        <type typename="signed_char">
        </type>
      </ivar>
      <ivar name="StageOn">
        <type typename="signed_char">
        </type>
      </ivar>
    </class>
    <class name="TStageControlWithDisabled">
      <ivar name="super">
        <type typename="TStageControl">
        </type>
      </ivar>
      <ivar name="Disabled">
        <type typename="Array">
          <ArrayItem maxlen="8" typename="bit">
          </ArrayItem>
        </type>
      </ivar>
    </class>
    <class name="TSimpleInverter">
      <ivar name="VMin">
        <type typename="signed_long">
        </type>
      </ivar>
      <ivar name="VMax">
        <type typename="signed_long">
        </type>
      </ivar>
      <ivar name="TMinOn">
        <type typename="signed_long">
        </type>
      </ivar>
      <ivar name="TSpike">
        <type typename="signed_long">
        </type>
      </ivar>
      <ivar name="WaitingOff">
        <type typename="bit">
        </type>
      </ivar>
      <ivar name="Out">
        <type typename="signed_long">
        </type>
      </ivar>
      <ivar name="LastTurnOnTime">
        <type typename="TTimerSec">
        </type>
      </ivar>
    </class>
    <class name="TInverter">
      <ivar name="VMin">
        <type typename="signed_long">
        </type>
      </ivar>
      <ivar name="VMax">
        <type typename="signed_long">
        </type>
      </ivar>
      <ivar name="TMinOn">
        <type typename="signed_long">
        </type>
      </ivar>
      <ivar name="TSpike">
        <type typename="signed_long">
        </type>
      </ivar>
      <ivar name="Setp">
        <type typename="signed_long">
        </type>
      </ivar>
      <ivar name="Diff">
        <type typename="signed_long">
        </type>
      </ivar>
      <ivar name="CutOffDiff">
        <type typename="signed_long">
        </type>
      </ivar>
      <ivar name="CutOffHyst">
        <type typename="signed_long">
        </type>
      </ivar>
      <ivar name="LastTurnOnTime">
        <type typename="TTimerSec">
        </type>
      </ivar>
      <ivar name="Out">
        <type typename="signed_long">
        </type>
      </ivar>
      <ivar name="Status">
        <type typename="signed_long">
        </type>
      </ivar>
    </class>
    <class name="TFanManager">
      <ivar name="super">
        <type typename="TStageControlWithDisabled">
        </type>
      </ivar>
      <ivar name="Mode">
        <type typename="signed_char">
        </type>
      </ivar>
    </class>
    <class name="TCompressor">
      <ivar name="Disabled">
        <type typename="bit">
        </type>
      </ivar>
      <ivar name="WaitingPump">
        <type typename="bit">
        </type>
      </ivar>
      <ivar name="WaitingTmin2on">
        <type typename="bit">
        </type>
      </ivar>
      <ivar name="WaitingTmin2off">
        <type typename="bit">
        </type>
      </ivar>
      <ivar name="WaitingTminOFF">
        <type typename="bit">
        </type>
      </ivar>
      <ivar name="WaitingTminON">
        <type typename="bit">
        </type>
      </ivar>
      <ivar name="WaitingTmin2onC">
        <type typename="bit">
        </type>
      </ivar>
      <ivar name="WaitingTDelayP">
        <type typename="bit">
        </type>
      </ivar>
      <ivar name="OvldAlarm">
        <type typename="bit">
        </type>
      </ivar>
      <ivar name="Status">
        <type typename="signed_char">
        </type>
      </ivar>
      <ivar name="WorkingSeconds">
        <type typename="signed_long">
        </type>
      </ivar>
      <ivar name="TempWorkingSec">
        <type typename="signed_long">
        </type>
      </ivar>
      <ivar name="LastOn">
        <type typename="TTimerSec">
        </type>
      </ivar>
      <ivar name="LastOnP">
        <type typename="TTimerSec">
        </type>
      </ivar>
      <ivar name="LastOff">
        <type typename="TTimerSec">
        </type>
      </ivar>
    </class>
    <class name="TComprMngParams">
      <ivar name="NComp">
        <type typename="signed_char">
        </type>
      </ivar>
      <ivar name="NPar">
        <type typename="signed_char">
        </type>
      </ivar>
      <ivar name="OnMode">
        <type typename="signed_char">
        </type>
      </ivar>
      <ivar name="OffMode">
        <type typename="signed_char">
        </type>
      </ivar>
      <ivar name="CStartMode">
        <type typename="signed_char">
        </type>
      </ivar>
      <ivar name="PWSDelay">
        <type typename="signed_char">
        </type>
      </ivar>
      <ivar name="Rotation">
        <type typename="signed_char">
        </type>
      </ivar>
      <ivar name="SmartPow">
        <type typename="bit">
        </type>
      </ivar>
      <ivar name="Tmin2on">
        <type typename="signed_short">
        </type>
      </ivar>
      <ivar name="Tmin2off">
        <type typename="signed_short">
        </type>
      </ivar>
      <ivar name="TminOFF">
        <type typename="signed_short">
        </type>
      </ivar>
      <ivar name="TminON">
        <type typename="signed_short">
        </type>
      </ivar>
      <ivar name="TmaxDH">
        <type typename="signed_long">
        </type>
      </ivar>
      <ivar name="Tmin2onC">
        <type typename="signed_short">
        </type>
      </ivar>
      <ivar name="TDelayP">
        <type typename="signed_short">
        </type>
      </ivar>
    </class>
    <class name="TComprManager">
      <ivar name="super">
        <type typename="TStageControl">
        </type>
      </ivar>
      <ivar name="CnfParams">
        <type typename="TComprMngParams">
        </type>
      </ivar>
      <ivar name="Out">
        <type typename="signed_long">
        </type>
      </ivar>
      <ivar name="NextComp">
        <type typename="signed_char">
        </type>
      </ivar>
      <ivar name="WaitingPump">
        <type typename="bit">
        </type>
      </ivar>
      <ivar name="Comp">
        <type typename="Array">
          <ArrayItem maxlen="8" typename="TCompressor">
          </ArrayItem>
        </type>
      </ivar>
      <ivar name="ChangePar">
        <type typename="signed_char">
        </type>
      </ivar>
      <ivar name="LastComprTurnOn">
        <type typename="TTimerSec">
        </type>
      </ivar>
      <ivar name="LastComprTurnOff">
        <type typename="TTimerSec">
        </type>
      </ivar>
    </class>
    <class name="TPump">
      <ivar name="super">
        <type typename="TCompressor">
        </type>
      </ivar>
      <ivar name="WorkingTime">
        <type typename="THourCounter">
        </type>
      </ivar>
    </class>
    <class name="TEvapPump">
      <ivar name="NStages">
        <type typename="signed_char">
        </type>
      </ivar>
      <ivar name="Mode">
        <type typename="signed_char">
        </type>
      </ivar>
      <ivar name="Rot">
        <type typename="signed_char">
        </type>
      </ivar>
      <ivar name="TOff">
        <type typename="signed_short">
        </type>
      </ivar>
      <ivar name="TOnComp">
        <type typename="signed_short">
        </type>
      </ivar>
      <ivar name="Rotation">
        <type typename="signed_char">
        </type>
      </ivar>
      <ivar name="TPulseOff">
        <type typename="signed_short">
        </type>
      </ivar>
      <ivar name="TPulseOn">
        <type typename="signed_short">
        </type>
      </ivar>
      <ivar name="HourLimitRot">
        <type typename="signed_long">
        </type>
      </ivar>
      <ivar name="FlowAlarmCnt">
        <type typename="signed_char">
        </type>
      </ivar>
      <ivar name="Out">
        <type typename="signed_long">
        </type>
      </ivar>
      <ivar name="sw">
        <type typename="bit">
        </type>
      </ivar>
      <ivar name="burst">
        <type typename="bit">
        </type>
      </ivar>
      <ivar name="FirstPumpTurnOn">
        <type typename="TTimerSec">
        </type>
      </ivar>
      <ivar name="LastPumpTurnOn">
        <type typename="TTimerSec">
        </type>
      </ivar>
      <ivar name="LastPumpTurnOff">
        <type typename="TTimerSec">
        </type>
      </ivar>
      <ivar name="Pumps">
        <type typename="Array">
          <ArrayItem maxlen="2" typename="TPump">
          </ArrayItem>
        </type>
      </ivar>
      <ivar name="StageOn">
        <type typename="signed_char">
        </type>
      </ivar>
      <ivar name="CurrPump">
        <type typename="signed_char">
        </type>
      </ivar>
      <ivar name="WaitingOff">
        <type typename="bit">
        </type>
      </ivar>
    </class>
    <class name="TTwinPump">
      <ivar name="NStages">
        <type typename="signed_char">
        </type>
      </ivar>
      <ivar name="Mode">
        <type typename="signed_char">
        </type>
      </ivar>
      <ivar name="Rot">
        <type typename="signed_char">
        </type>
      </ivar>
      <ivar name="TOff">
        <type typename="signed_short">
        </type>
      </ivar>
      <ivar name="TOnComp">
        <type typename="signed_short">
        </type>
      </ivar>
      <ivar name="Rotation">
        <type typename="signed_char">
        </type>
      </ivar>
      <ivar name="TPulseOff">
        <type typename="signed_short">
        </type>
      </ivar>
      <ivar name="TPulseOn">
        <type typename="signed_short">
        </type>
      </ivar>
      <ivar name="HourLimitRot">
        <type typename="signed_long">
        </type>
      </ivar>
      <ivar name="FlowAlarmCnt">
        <type typename="signed_char">
        </type>
      </ivar>
      <ivar name="burst">
        <type typename="bit">
        </type>
      </ivar>
      <ivar name="FirstPumpTurnOn">
        <type typename="TTimerSec">
        </type>
      </ivar>
      <ivar name="LastPumpTurnOn">
        <type typename="TTimerSec">
        </type>
      </ivar>
      <ivar name="LastPumpTurnOff">
        <type typename="TTimerSec">
        </type>
      </ivar>
      <ivar name="Pumps">
        <type typename="Array">
          <ArrayItem maxlen="2" typename="TPump">
          </ArrayItem>
        </type>
      </ivar>
      <ivar name="StageOn">
        <type typename="signed_char">
        </type>
      </ivar>
      <ivar name="CurrPump">
        <type typename="signed_char">
        </type>
      </ivar>
      <ivar name="WaitingOff">
        <type typename="bit">
        </type>
      </ivar>
    </class>
    <class name="THourCounter" address="13752" ByteSize="8" CodeAddress="13752" CodeSize="12" SrcFile="HVAClib.lib">
      <ivar name="Sec" address="0" ByteSize="4">
        <type typename="signed_long">
        </type>
      </ivar>
      <ivar name="LastCheck" address="4" ByteSize="4">
        <type typename="TTimerSec">
        </type>
      </ivar>
      <meth name="Load" address="13752" pathname=".MyPackage.THourCounter.Load" MaxStackCallSz="32" MaxInternalStackSz="32" MaxInternalStackCallPos="HVAClib.lib:1980" ByteSize="0" CodeAddress="13752" CodeSize="33" SrcFile="HVAClib.lib">
        <type typename="object">
        </type>
        <pvar name="this" address="0" ByteSize="4">
          <type typename="THourCounter" reference="1"></type>
        </pvar>
        <pvar name="CurrWorkingSec" address="4" ByteSize="4">
          <type typename="signed_long">
          </type>
        </pvar>
      </meth>
      <meth name="WorkingHours" address="13785" pathname=".MyPackage.THourCounter.WorkingHours" MaxStackCallSz="36" MaxInternalStackSz="36" MaxInternalStackCallPos="HVAClib.lib:1998" ByteSize="4" CodeAddress="13785" CodeSize="30" SrcFile="HVAClib.lib">
        <type typename="signed_long">
        </type>
        <pvar name="RetVal" address="0" ByteSize="4">
          <type typename="signed_long"></type>
        </pvar>
        <pvar name="this" address="4" ByteSize="4">
          <type typename="THourCounter" reference="1"></type>
        </pvar>
      </meth>
      <meth name="SetStatus" address="13815" pathname=".MyPackage.THourCounter.SetStatus" MaxStackCallSz="97" MaxInternalStackSz="41" MaxInternalStackCallPos="HVAClib.lib:2026" ByteSize="0" CodeAddress="13815" CodeSize="124" SrcFile="HVAClib.lib">
        <type typename="object">
        </type>
        <pvar name="this" address="0" ByteSize="4">
          <type typename="THourCounter" reference="1"></type>
        </pvar>
        <pvar name="iOn" address="4" ByteSize="4">
          <type typename="signed_long">
          </type>
        </pvar>
      </meth>
    </class>
    <class name="TRampOut">
      <ivar name="Out">
        <type typename="signed_short">
        </type>
      </ivar>
      <ivar name="t">
        <type typename="TTimer">
        </type>
      </ivar>
    </class>
    <class name="TRampOutWithParams">
      <ivar name="super">
        <type typename="TRampOut">
        </type>
      </ivar>
      <ivar name="ReqPow">
        <type typename="signed_short">
        </type>
      </ivar>
      <ivar name="VarMax">
        <type typename="signed_short">
        </type>
        <valueexpr><constv value="1"/></valueexpr>
      </ivar>
      <ivar name="VarTime">
        <type typename="signed_short">
        </type>
        <valueexpr><constv value="1000"/></valueexpr>
      </ivar>
    </class>
    <item name="modbusdecl">
      <item name="ModbusTable">
      </item>
      <constv name="sum" ByteSize="2">
        <type typename="signed_short">
        </type>
        <valueexpr><constv value="1280"/></valueexpr>
        <constv ByteSize="2">
          <type typename="signed_short">
          </type>
          <valueexpr><constv value="1280"/></valueexpr>
        </constv>
      </constv>
      <constv>
        <type typename="signed_short">
        </type>
        <valueexpr><constv value="1900"/></valueexpr>
      </constv>
      <item name="PackedAlarmsStatus">
      </item>
    </item>
    <gvar mem="RAM" name="IOManager" address="989" ByteSize="6">
      <type typename="TStaticIOManager">
      </type>
    </gvar>
    <gvar mem="RAM" name="GlobalOn" address="537" bitoffset="3" ByteSize="0" BitSize="1">
      <type typename="bit">
      </type>
    </gvar>
    <gvar mem="RAM" name="SysOn" address="995" ByteSize="5">
      <type typename="TToggleTimer">
      </type>
    </gvar>
    <gvar mem="RAM" name="NTC_Temp_CO" address="1000" ByteSize="4">
      <type typename="float">
      </type>
    </gvar>
    <gvar mem="RAM" name="NTC_Temp_Zewn" address="1004" ByteSize="4">
      <type typename="float">
      </type>
    </gvar>
    <gvar mem="RAM" name="NTC_Temp_CWU" address="1008" ByteSize="4">
      <type typename="float">
      </type>
    </gvar>
    <gvar mem="RAM" name="NTC_Temp_Glik" address="1012" ByteSize="4">
      <type typename="float">
      </type>
    </gvar>
    <gvar mem="RAM" name="Com2" address="1016" ByteSize="36">
      <type typename="TModbusMaster">
      </type>
    </gvar>
    <gvar mem="RAM" name="Com2BufferRx" address="1052" ByteSize="128">
      <type typename="Array">
        <ArrayItem maxlen="128" typename="unsigned_char">
        </ArrayItem>
      </type>
    </gvar>
    <gvar mem="RAM" name="Com2BufferTx" address="1180" ByteSize="128">
      <type typename="Array">
        <ArrayItem maxlen="128" typename="unsigned_char">
        </ArrayItem>
      </type>
    </gvar>
    <gvar mem="ROM" name="SlaveID" address="1776" ByteSize="1">
      <type typename="unsigned_char">
      </type>
      <valueexpr><constv value="1"/></valueexpr>
    </gvar>
    <gvar mem="RAM" name="bTaryfaON" address="1308" ByteSize="2">
      <type typename="signed_short">
      </type>
    </gvar>
    <gvar mem="RAM" name="bPcwuON" address="1310" ByteSize="2">
      <type typename="signed_short">
      </type>
    </gvar>
    <gvar mem="RAM" name="bPasteryzuj" address="1312" ByteSize="2">
      <type typename="signed_short">
      </type>
    </gvar>
    <gvar mem="RAM" name="bAL_CzP" address="1314" ByteSize="2">
      <type typename="signed_short">
      </type>
    </gvar>
    <gvar mem="RAM" name="bHP1_isOn" address="1316" ByteSize="2">
      <type typename="signed_short">
      </type>
    </gvar>
    <gvar mem="RAM" name="bHP2_isOn" address="1318" ByteSize="2">
      <type typename="signed_short">
      </type>
    </gvar>
    <gvar mem="RAM" name="bHP3_isOn" address="1320" ByteSize="2">
      <type typename="signed_short">
      </type>
    </gvar>
    <gvar mem="RAM" name="Hist_od_CWU" address="1322" ByteSize="2">
      <type typename="signed_short">
      </type>
    </gvar>
    <gvar mem="RAM" name="Hist_od_CO" address="1324" ByteSize="2">
      <type typename="signed_short">
      </type>
    </gvar>
    <gvar mem="RAM" name="bCwuON" address="1326" ByteSize="2">
      <type typename="signed_short">
      </type>
    </gvar>
    <gvar mem="RAM" name="bCoON" address="1328" ByteSize="2">
      <type typename="signed_short">
      </type>
    </gvar>
    <gvar mem="RAM" name="iHPselected" address="1330" ByteSize="2">
      <type typename="signed_short">
      </type>
    </gvar>
    <gvar mem="RAM" name="bFirstRun" address="1332" ByteSize="2">
      <type typename="signed_short">
      </type>
    </gvar>
    <gvar mem="RAM" name="ActiveSchedules" address="1334" ByteSize="2">
      <type typename="signed_short">
      </type>
    </gvar>
    <gvar mem="RAM" name="Moc_inwertera" address="1336" ByteSize="2">
      <type typename="signed_short">
      </type>
    </gvar>
    <gvar mem="RAM" name="PG1Wait" address="1338" ByteSize="4">
      <type typename="TTimerSec">
      </type>
    </gvar>
    <gvar mem="RAM" name="Comp_Min_On" address="1342" ByteSize="12">
      <type typename="Array">
        <ArrayItem maxlen="3" typename="TTimerSec">
        </ArrayItem>
      </type>
    </gvar>
    <gvar mem="RAM" name="Comp_Min_Off" address="1354" ByteSize="12">
      <type typename="Array">
        <ArrayItem maxlen="3" typename="TTimerSec">
        </ArrayItem>
      </type>
    </gvar>
    <gvar mem="RAM" name="SaveWH" address="1366" ByteSize="4">
      <type typename="TTimerSec">
      </type>
    </gvar>
    <gvar mem="RAM" name="PasterizationTime" address="1370" ByteSize="4">
      <type typename="TStoppableTimerSec">
      </type>
    </gvar>
    <gvar mem="RAM" name="CheckLongSchedule" address="1374" ByteSize="4">
      <type typename="TTimerSec">
      </type>
    </gvar>
    <gvar mem="RAM" name="PasterizationTimeOut" address="1378" ByteSize="4">
      <type typename="TStoppableTimerSec">
      </type>
    </gvar>
    <gvar mem="RAM" name="WHCounters" address="1382" ByteSize="80">
      <type typename="Array">
        <ArrayItem maxlen="10" typename="THourCounter">
        </ArrayItem>
      </type>
    </gvar>
    <gvar mem="E2P" name="CounterValue" address="365" ByteSize="40">
      <type typename="Array">
        <ArrayItem maxlen="10" typename="signed_long">
        </ArrayItem>
      </type>
    </gvar>
    <gvar mem="E2P" name="mainSchedulesPoints" address="405" ByteSize="400">
      <type typename="Array">
        <ArrayItem maxlen="100" typename="SchedulePoint">
        </ArrayItem>
      </type>
    </gvar>
    <item name="modbusdecl">
      <item name="ModbusTable">
      </item>
      <constv name="sum" ByteSize="2">
        <type typename="signed_short">
        </type>
        <valueexpr><constv value="640"/></valueexpr>
        <constv ByteSize="2">
          <type typename="signed_short">
          </type>
          <valueexpr><constv value="512"/></valueexpr>
        </constv>
      </constv>
      <constv ByteSize="2">
        <type typename="signed_short">
        </type>
        <valueexpr><constv value="5001"/></valueexpr>
        <constv name="sum" ByteSize="2">
          <type typename="signed_short">
          </type>
          <valueexpr><constv value="5001"/></valueexpr>
          <constv ByteSize="1">
            <type typename="signed_char">
            </type>
            <valueexpr><constv value="1"/></valueexpr>
          </constv>
        </constv>
      </constv>
      <item name="CounterValue">
      </item>
    </item>
    <item name="modbusdecl">
      <item name="ModbusTable">
      </item>
      <constv name="sum" ByteSize="2">
        <type typename="signed_short">
        </type>
        <valueexpr><constv value="640"/></valueexpr>
        <constv ByteSize="2">
          <type typename="signed_short">
          </type>
          <valueexpr><constv value="512"/></valueexpr>
        </constv>
      </constv>
      <constv ByteSize="2">
        <type typename="signed_short">
        </type>
        <valueexpr><constv value="5050"/></valueexpr>
        <constv name="sum" ByteSize="2">
          <type typename="signed_short">
          </type>
          <valueexpr><constv value="5050"/></valueexpr>
          <constv ByteSize="1">
            <type typename="signed_char">
            </type>
            <valueexpr><constv value="50"/></valueexpr>
          </constv>
        </constv>
      </constv>
      <item name="mainSchedulesPoints">
      </item>
    </item>
    <item name="modbusdecl">
      <item name="ModbusTable">
      </item>
      <constv name="sum" ByteSize="2">
        <type typename="signed_short">
        </type>
        <valueexpr><constv value="640"/></valueexpr>
        <constv ByteSize="2">
          <type typename="signed_short">
          </type>
          <valueexpr><constv value="512"/></valueexpr>
        </constv>
      </constv>
      <constv ByteSize="2">
        <type typename="signed_short">
        </type>
        <valueexpr><constv value="5025"/></valueexpr>
        <constv name="sum" ByteSize="2">
          <type typename="signed_short">
          </type>
          <valueexpr><constv value="5025"/></valueexpr>
          <constv ByteSize="1">
            <type typename="signed_char">
            </type>
            <valueexpr><constv value="25"/></valueexpr>
          </constv>
        </constv>
      </constv>
      <item name="Moc_inwertera">
      </item>
    </item>
    <funct name="CheckSchedule" address="13939" pathname=".MyPackage.CheckSchedule" MaxStackCallSz="292" MaxInternalStackSz="207" MaxInternalStackCallPos="main.c:119" ByteSize="2" CodeAddress="13939" CodeSize="444" SrcFile="main.c">
      <type typename="signed_short">
      </type>
      <pvar name="RetVal" address="0" ByteSize="2">
        <type typename="signed_short"></type>
      </pvar>
      <code>
        <instr mname="" CodeAddress="13951" CodeSize="431">
          <var name="temporary" address="14" ByteSize="145" CodeAddress="13951" CodeSize="2" SrcFile="main.c" SrcRow="102">
            <type typename="Array">
              <ArrayItem maxlen="145" typename="signed_char">
              </ArrayItem>
            </type>
          </var>
          <var name="latch" address="159" ByteSize="1">
            <type typename="signed_char">
            </type>
          </var>
          <var name="Actions" address="160" ByteSize="2">
            <type typename="signed_short">
            </type>
          </var>
          <var name="t" address="162" ByteSize="11">
            <type typename="TDateTime">
            </type>
          </var>
          <var name="RTCTime" address="173" ByteSize="1">
            <type typename="unsigned_char">
            </type>
          </var>
          <var name="RTCDay" address="174" ByteSize="1">
            <type typename="signed_char">
            </type>
          </var>
          <instr mname="LoadRTC" linkedname=".MyPackage.TDateTime.LoadRTC" CodeAddress="13953" CodeSize="8" SrcRow="105">
            <subj>
              <instr mname="t" linkedname=".MyPackage..t" CodeAddress="13953" CodeSize="3" SrcRow="105">
              </instr>
            </subj>
          </instr>
          <instr mname="Explode" linkedname=".MyPackage.TDateTime.Explode" CodeAddress="13961" CodeSize="6" SrcRow="106">
            <subj>
              <instr mname="t" linkedname=".MyPackage..t" CodeAddress="13961" CodeSize="3" SrcRow="106">
              </instr>
            </subj>
          </instr>
          <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="13967" CodeSize="14" SrcRow="107">
            <subj>
              <instr mname="RTCDay" linkedname=".MyPackage..RTCDay" CodeAddress="13967" CodeSize="3" SrcRow="107">
              </instr>
            </subj>
            <instr mname="WDay" linkedname=".MyPackage.TDateTime.WDay" CodeAddress="13970" CodeSize="8" SrcRow="107">
              <subj>
                <instr mname="t" linkedname=".MyPackage..t" CodeAddress="13972" CodeSize="3" SrcRow="107">
                </instr>
              </subj>
            </instr>
          </instr>
          <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="13981" CodeSize="24" SrcRow="108">
            <subj>
              <instr mname="RTCTime" linkedname=".MyPackage..RTCTime" CodeAddress="13981" CodeSize="3" SrcRow="108">
              </instr>
            </subj>
            <instr mname="div" linkedname=".MyPackage.signed_char.div" CodeAddress="13984" CodeSize="20" SrcRow="108">
              <subj>
                <instr mname="" CodeAddress="13985" CodeSize="16">
                  <instr mname="sum" linkedname=".MyPackage.signed_char.sum" CodeAddress="13985" CodeSize="16" SrcRow="108">
                    <subj>
                      <instr mname="mul" linkedname=".MyPackage.signed_char.mul" CodeAddress="13986" CodeSize="9" SrcRow="108">
                        <subj>
                          <constv typename="signed_char" value="60" />
                        </subj>
                        <instr mname="Hours" linkedname=".MyPackage.TDateTime.Hours" SrcRow="108">
                          <subj>
                            <instr mname="t" linkedname=".MyPackage..t" SrcRow="108">
                            </instr>
                          </subj>
                        </instr>
                      </instr>
                    </subj>
                    <instr mname="Minutes" linkedname=".MyPackage.TDateTime.Minutes" CodeAddress="13995" CodeSize="3" SrcRow="108">
                      <subj>
                        <instr mname="t" linkedname=".MyPackage..t" CodeAddress="13995" CodeSize="3" SrcRow="108">
                        </instr>
                      </subj>
                    </instr>
                  </instr>
                </instr>
              </subj>
              <constv typename="signed_char" value="10" />
            </instr>
          </instr>
          <var name="i" address="175" ByteSize="2" CodeAddress="14005" CodeSize="2" SrcFile="main.c" SrcRow="109">
            <type typename="signed_short">
            </type>
            <valueexpr><constv value="0"/></valueexpr>
          </var>
          <var name="j" address="177" ByteSize="2">
            <type typename="signed_short">
            </type>
            <valueexpr><constv value="0"/></valueexpr>
          </var>
          <instr mname="for" CodeAddress="14007" CodeSize="363">
            <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="14007" CodeSize="6" SrcRow="114">
              <subj>
                <instr mname="j" linkedname=".MyPackage..j" CodeAddress="14007" CodeSize="3" SrcRow="114">
                </instr>
              </subj>
              <constv typename="signed_char" value="0" />
            </instr>
            <instr mname="LessOrEqual" linkedname=".MyPackage.signed_char.LessOrEqual" CodeAddress="14358" CodeSize="9" SrcRow="114">
              <subj>
                <instr mname="j" linkedname=".MyPackage..j" CodeAddress="14359" CodeSize="3" SrcRow="114">
                </instr>
              </subj>
              <constv typename="signed_char" value="2" />
            </instr>
            <instr mname="sum_set" linkedname=".MyPackage.signed_char.sum_set" CodeAddress="14351" CodeSize="7" SrcRow="114">
              <subj>
                <instr mname="j" linkedname=".MyPackage..j" CodeAddress="14351" CodeSize="3" SrcRow="114">
                </instr>
              </subj>
              <constv typename="signed_char" value="1" />
            </instr>
            <instr mname="" CodeAddress="14016" CodeSize="335">
              <instr mname="for" CodeAddress="14016" CodeSize="173">
                <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="14016" CodeSize="6" SrcRow="117">
                  <subj>
                    <instr mname="i" linkedname=".MyPackage..i" CodeAddress="14016" CodeSize="3" SrcRow="117">
                    </instr>
                  </subj>
                  <constv typename="signed_char" value="0" />
                </instr>
                <instr mname="LessOrEqual" linkedname=".MyPackage.signed_char.LessOrEqual" CodeAddress="14177" CodeSize="9" SrcRow="117">
                  <subj>
                    <instr mname="i" linkedname=".MyPackage..i" CodeAddress="14178" CodeSize="3" SrcRow="117">
                    </instr>
                  </subj>
                  <constv typename="signed_char" value="99" />
                </instr>
                <instr mname="sum_set" linkedname=".MyPackage.signed_char.sum_set" CodeAddress="14170" CodeSize="7" SrcRow="117">
                  <subj>
                    <instr mname="i" linkedname=".MyPackage..i" CodeAddress="14170" CodeSize="3" SrcRow="117">
                    </instr>
                  </subj>
                  <constv typename="signed_char" value="1" />
                </instr>
                <instr mname="" CodeAddress="14025" CodeSize="145">
                  <if>
                    <condition>
                      <instr mname="and" linkedname=".MyPackage.signed_char.and" CodeAddress="14025" CodeSize="88" SrcRow="119">
                        <subj>
                          <instr mname="and" linkedname=".MyPackage.signed_char.and" CodeAddress="14026" CodeSize="55" SrcRow="119">
                            <subj>
                              <instr mname="GreaterThan" linkedname=".MyPackage.signed_char.GreaterThan" CodeAddress="14027" CodeSize="33" SrcRow="119">
                                <subj>
                                  <instr mname="CheckDay" linkedname=".MyPackage.SchedulePoint.CheckDay" CodeAddress="14028" CodeSize="23" SrcRow="119">
                                    <subj>
                                      <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="14030" CodeSize="13" SrcRow="119">
                                        <subj>
                                          <instr mname="mainSchedulesPoints" linkedname=".MyPackage.mainSchedulesPoints" CodeAddress="14030" CodeSize="3" SrcRow="119">
                                          </instr>
                                        </subj>
                                        <instr mname="i" linkedname=".MyPackage..i" CodeAddress="14033" CodeSize="3" SrcRow="119">
                                        </instr>
                                      </instr>
                                    </subj>
                                    <instr mname="RTCDay" linkedname=".MyPackage..RTCDay" CodeAddress="14043" CodeSize="3" SrcRow="119">
                                    </instr>
                                  </instr>
                                </subj>
                                <constv typename="signed_char" value="0" />
                              </instr>
                            </subj>
                            <instr mname="NotEqual" linkedname=".MyPackage.signed_char.NotEqual" CodeAddress="14060" CodeSize="20" SrcRow="119">
                              <subj>
                                <instr mname="point" linkedname=".MyPackage.SchedulePoint.point" CodeAddress="14061" CodeSize="14" SrcRow="119">
                                  <subj>
                                    <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="14061" CodeSize="14" SrcRow="119">
                                      <subj>
                                        <instr mname="mainSchedulesPoints" linkedname=".MyPackage.mainSchedulesPoints" CodeAddress="14062" CodeSize="3" SrcRow="119">
                                        </instr>
                                      </subj>
                                      <instr mname="i" linkedname=".MyPackage..i" CodeAddress="14065" CodeSize="3" SrcRow="119">
                                      </instr>
                                    </instr>
                                  </subj>
                                </instr>
                              </subj>
                              <constv typename="signed_char" value="0" />
                            </instr>
                          </instr>
                        </subj>
                        <instr mname="Equal" linkedname=".MyPackage.signed_char.Equal" CodeAddress="14081" CodeSize="31" SrcRow="119">
                          <subj>
                            <instr mname="ReadScheduleNo" linkedname=".MyPackage.SchedulePoint.ReadScheduleNo" CodeAddress="14082" CodeSize="18" SrcRow="119">
                              <subj>
                                <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="14084" CodeSize="13" SrcRow="119">
                                  <subj>
                                    <instr mname="mainSchedulesPoints" linkedname=".MyPackage.mainSchedulesPoints" CodeAddress="14084" CodeSize="3" SrcRow="119">
                                    </instr>
                                  </subj>
                                  <instr mname="i" linkedname=".MyPackage..i" CodeAddress="14087" CodeSize="3" SrcRow="119">
                                  </instr>
                                </instr>
                              </subj>
                            </instr>
                          </subj>
                          <instr mname="j" linkedname=".MyPackage..j" CodeAddress="14102" CodeSize="3" SrcRow="119">
                          </instr>
                        </instr>
                      </instr>
                    </condition>
                    <then>
                      <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="14116" CodeSize="54" SrcRow="120">
                        <subj>
                          <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="14116" CodeSize="29" SrcRow="120">
                            <subj>
                              <instr mname="temporary" linkedname=".MyPackage..temporary" CodeAddress="14117" CodeSize="3" SrcRow="120">
                              </instr>
                            </subj>
                            <instr mname="ReadTime" linkedname=".MyPackage.SchedulePoint.ReadTime" CodeAddress="14120" CodeSize="18" SrcRow="120">
                              <subj>
                                <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="14122" CodeSize="13" SrcRow="120">
                                  <subj>
                                    <instr mname="mainSchedulesPoints" linkedname=".MyPackage.mainSchedulesPoints" CodeAddress="14122" CodeSize="3" SrcRow="120">
                                    </instr>
                                  </subj>
                                  <instr mname="i" linkedname=".MyPackage..i" CodeAddress="14125" CodeSize="3" SrcRow="120">
                                  </instr>
                                </instr>
                              </subj>
                            </instr>
                          </instr>
                        </subj>
                        <instr mname="sum" linkedname=".MyPackage.signed_char.sum" CodeAddress="14145" CodeSize="24" SrcRow="120">
                          <subj>
                            <instr mname="ReadAction" linkedname=".MyPackage.SchedulePoint.ReadAction" CodeAddress="14146" CodeSize="18" SrcRow="120">
                              <subj>
                                <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="14148" CodeSize="13" SrcRow="120">
                                  <subj>
                                    <instr mname="mainSchedulesPoints" linkedname=".MyPackage.mainSchedulesPoints" CodeAddress="14148" CodeSize="3" SrcRow="120">
                                    </instr>
                                  </subj>
                                  <instr mname="i" linkedname=".MyPackage..i" CodeAddress="14151" CodeSize="3" SrcRow="120">
                                  </instr>
                                </instr>
                              </subj>
                            </instr>
                          </subj>
                          <constv typename="signed_char" value="1" />
                        </instr>
                      </instr>
                    </then>
                  </if>
                </instr>
              </instr>
              <instr mname="for" CodeAddress="14189" CodeSize="128">
                <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="14189" CodeSize="6" SrcRow="122">
                  <subj>
                    <instr mname="i" linkedname=".MyPackage..i" CodeAddress="14189" CodeSize="3" SrcRow="122">
                    </instr>
                  </subj>
                  <constv typename="signed_char" value="0" />
                </instr>
                <instr mname="LessOrEqual" linkedname=".MyPackage.signed_char.LessOrEqual" CodeAddress="14291" CodeSize="23" SrcRow="122">
                  <subj>
                    <instr mname="i" linkedname=".MyPackage..i" CodeAddress="14292" CodeSize="3" SrcRow="122">
                    </instr>
                  </subj>
                  <instr mname="sum" linkedname=".MyPackage.signed_char.sum" CodeAddress="14297" CodeSize="16" SrcRow="122">
                    <subj>
                      <instr mname="" CodeAddress="14298" CodeSize="12">
                        <instr mname="div" linkedname=".MyPackage.signed_char.div" CodeAddress="14298" CodeSize="12" SrcRow="122">
                          <subj>
                            <instr mname="sizeof" CodeAddress="14299" CodeSize="6" SrcRow="122">
                              <instr mname="">
                                <instr mname="temporary" linkedname=".MyPackage..temporary" SrcRow="122">
                                </instr>
                              </instr>
                            </instr>
                          </subj>
                          <instr mname="sizeof" CodeAddress="14305" CodeSize="4" SrcRow="122">
                            <instr mname="geti" linkedname=".MyPackage.Array.geti" SrcRow="122">
                              <subj>
                                <instr mname="">
                                  <instr mname="temporary" linkedname=".MyPackage..temporary" SrcRow="122">
                                  </instr>
                                </instr>
                              </subj>
                              <constv typename="signed_char" value="0" />
                            </instr>
                          </instr>
                        </instr>
                      </instr>
                    </subj>
                    <constv typename="signed_char" value="-1" />
                  </instr>
                </instr>
                <instr mname="sum_set" linkedname=".MyPackage.signed_char.sum_set" CodeAddress="14284" CodeSize="7" SrcRow="122">
                  <subj>
                    <instr mname="i" linkedname=".MyPackage..i" CodeAddress="14284" CodeSize="3" SrcRow="122">
                    </instr>
                  </subj>
                  <constv typename="signed_char" value="1" />
                </instr>
                <instr mname="" CodeAddress="14198" CodeSize="86">
                  <if>
                    <condition>
                      <instr mname="Equal" linkedname=".MyPackage.signed_char.Equal" CodeAddress="14198" CodeSize="24" SrcRow="124">
                        <subj>
                          <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="14199" CodeSize="14" SrcRow="124">
                            <subj>
                              <instr mname="temporary" linkedname=".MyPackage..temporary" CodeAddress="14200" CodeSize="3" SrcRow="124">
                              </instr>
                            </subj>
                            <instr mname="i" linkedname=".MyPackage..i" CodeAddress="14203" CodeSize="3" SrcRow="124">
                            </instr>
                          </instr>
                        </subj>
                        <constv typename="signed_char" value="2" />
                      </instr>
                    </condition>
                    <then>
                      <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="14225" CodeSize="6" SrcRow="124">
                        <subj>
                          <instr mname="latch" linkedname=".MyPackage..latch" CodeAddress="14225" CodeSize="3" SrcRow="124">
                          </instr>
                        </subj>
                        <constv typename="signed_char" value="1" />
                      </instr>
                    </then>
                  </if>
                  <if>
                    <condition>
                      <instr mname="Equal" linkedname=".MyPackage.signed_char.Equal" CodeAddress="14231" CodeSize="24" SrcRow="125">
                        <subj>
                          <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="14232" CodeSize="14" SrcRow="125">
                            <subj>
                              <instr mname="temporary" linkedname=".MyPackage..temporary" CodeAddress="14233" CodeSize="3" SrcRow="125">
                              </instr>
                            </subj>
                            <instr mname="i" linkedname=".MyPackage..i" CodeAddress="14236" CodeSize="3" SrcRow="125">
                            </instr>
                          </instr>
                        </subj>
                        <constv typename="signed_char" value="1" />
                      </instr>
                    </condition>
                    <then>
                      <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="14258" CodeSize="6" SrcRow="125">
                        <subj>
                          <instr mname="latch" linkedname=".MyPackage..latch" CodeAddress="14258" CodeSize="3" SrcRow="125">
                          </instr>
                        </subj>
                        <constv typename="signed_char" value="0" />
                      </instr>
                    </then>
                  </if>
                  <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="14264" CodeSize="20" SrcRow="126">
                    <subj>
                      <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="14264" CodeSize="14" SrcRow="126">
                        <subj>
                          <instr mname="temporary" linkedname=".MyPackage..temporary" CodeAddress="14265" CodeSize="3" SrcRow="126">
                          </instr>
                        </subj>
                        <instr mname="i" linkedname=".MyPackage..i" CodeAddress="14268" CodeSize="3" SrcRow="126">
                        </instr>
                      </instr>
                    </subj>
                    <instr mname="latch" linkedname=".MyPackage..latch" CodeAddress="14278" CodeSize="3" SrcRow="126">
                    </instr>
                  </instr>
                </instr>
              </instr>
              <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="14317" CodeSize="34" SrcRow="128">
                <subj>
                  <instr mname="Actions" linkedname=".MyPackage..Actions" CodeAddress="14317" CodeSize="3" SrcRow="128">
                  </instr>
                </subj>
                <instr mname="bor" linkedname=".MyPackage.signed_char.bor" CodeAddress="14320" CodeSize="30" SrcRow="128">
                  <subj>
                    <instr mname="Actions" linkedname=".MyPackage..Actions" CodeAddress="14321" CodeSize="3" SrcRow="128">
                    </instr>
                  </subj>
                  <instr mname="" CodeAddress="14326" CodeSize="23">
                    <instr mname="shl" linkedname=".MyPackage.signed_char.shl" CodeAddress="14326" CodeSize="23" SrcRow="128">
                      <subj>
                        <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="14327" CodeSize="14" SrcRow="128">
                          <subj>
                            <instr mname="temporary" linkedname=".MyPackage..temporary" CodeAddress="14328" CodeSize="3" SrcRow="128">
                            </instr>
                          </subj>
                          <instr mname="RTCTime" linkedname=".MyPackage..RTCTime" CodeAddress="14331" CodeSize="3" SrcRow="128">
                          </instr>
                        </instr>
                      </subj>
                      <instr mname="j" linkedname=".MyPackage..j" CodeAddress="14343" CodeSize="3" SrcRow="128">
                      </instr>
                    </instr>
                  </instr>
                </instr>
              </instr>
            </instr>
          </instr>
          <instr mname="" CodeAddress="14370" CodeSize="10">
            <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="14370" CodeSize="9" SrcRow="130">
              <subj>
                <instr mname="RetVal" CodeAddress="14370" CodeSize="3" SrcRow="130">
                </instr>
              </subj>
              <instr mname="Actions" linkedname=".MyPackage..Actions" CodeAddress="14373" CodeSize="3" SrcRow="130">
              </instr>
            </instr>
            <instr mname="ExitFunction" CodeAddress="14379" CodeSize="1" SrcRow="130">
            </instr>
          </instr>
        </instr>
      </code>
    </funct>
    <funct name="EraseSchedules" address="14383" pathname=".MyPackage.EraseSchedules" MaxStackCallSz="27" MaxInternalStackSz="27" MaxInternalStackCallPos="main.c:141" ByteSize="2" CodeAddress="14383" CodeSize="62" SrcFile="main.c">
      <type typename="signed_short">
      </type>
      <pvar name="RetVal" address="0" ByteSize="2">
        <type typename="signed_short"></type>
      </pvar>
      <code>
        <instr mname="" CodeAddress="14395" CodeSize="49">
          <var name="j" address="14" ByteSize="1" CodeAddress="14395" CodeSize="2" SrcFile="main.c" SrcRow="139">
            <type typename="signed_char">
            </type>
          </var>
          <instr mname="for" CodeAddress="14397" CodeSize="45">
            <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="14397" CodeSize="6" SrcRow="140">
              <subj>
                <instr mname="j" linkedname=".MyPackage..j" CodeAddress="14397" CodeSize="3" SrcRow="140">
                </instr>
              </subj>
              <constv typename="signed_char" value="0" />
            </instr>
            <instr mname="LessThan" linkedname=".MyPackage.signed_char.LessThan" CodeAddress="14430" CodeSize="9" SrcRow="140">
              <subj>
                <instr mname="j" linkedname=".MyPackage..j" CodeAddress="14431" CodeSize="3" SrcRow="140">
                </instr>
              </subj>
              <constv typename="signed_char" value="100" />
            </instr>
            <instr mname="sum_set" linkedname=".MyPackage.signed_char.sum_set" CodeAddress="14423" CodeSize="7" SrcRow="140">
              <subj>
                <instr mname="j" linkedname=".MyPackage..j" CodeAddress="14423" CodeSize="3" SrcRow="140">
                </instr>
              </subj>
              <constv typename="signed_char" value="1" />
            </instr>
            <instr mname="" CodeAddress="14406" CodeSize="17">
              <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="14406" CodeSize="17" SrcRow="141">
                <subj>
                  <instr mname="point" linkedname=".MyPackage.SchedulePoint.point" CodeAddress="14406" CodeSize="14" SrcRow="141">
                    <subj>
                      <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="14406" CodeSize="14" SrcRow="141">
                        <subj>
                          <instr mname="mainSchedulesPoints" linkedname=".MyPackage.mainSchedulesPoints" CodeAddress="14407" CodeSize="3" SrcRow="141">
                          </instr>
                        </subj>
                        <instr mname="j" linkedname=".MyPackage..j" CodeAddress="14410" CodeSize="3" SrcRow="141">
                        </instr>
                      </instr>
                    </subj>
                  </instr>
                </subj>
                <constv typename="signed_char" value="0" />
              </instr>
            </instr>
          </instr>
        </instr>
      </code>
    </funct>
    <gvar mem="RAM" name="lastU" address="1462" ByteSize="4">
      <type typename="float">
      </type>
    </gvar>
    <gvar mem="RAM" name="SampleTime" address="1466" ByteSize="6">
      <type typename="TTimer">
      </type>
    </gvar>
    <gvar mem="RAM" name="Y" address="1472" ByteSize="4">
      <type typename="float">
      </type>
    </gvar>
    <funct name="RealBuildingTemperature" address="14445" pathname=".MyPackage.RealBuildingTemperature" MaxStackCallSz="156" MaxInternalStackSz="88" MaxInternalStackCallPos="main.c:165" ByteSize="4" CodeAddress="14445" CodeSize="406" SrcFile="main.c">
      <type typename="float">
      </type>
      <pvar name="RetVal" address="0" ByteSize="4">
        <type typename="float"></type>
      </pvar>
      <code>
        <instr mname="" CodeAddress="14457" CodeSize="393">
          <var name="Tp" address="16" ByteSize="4" CodeAddress="14457" CodeSize="1" SrcFile="main.c" SrcRow="152">
            <type typename="float">
            </type>
          </var>
          <var name="T_CO" address="20" ByteSize="4" CodeAddress="14458" CodeSize="1" SrcFile="main.c" SrcRow="152">
            <type typename="float">
            </type>
          </var>
          <var name="Parameter" address="24" ByteSize="4" CodeAddress="14459" CodeSize="1" SrcFile="main.c" SrcRow="152">
            <type typename="float">
            </type>
          </var>
          <var name="T_zewn" address="28" ByteSize="4" CodeAddress="14460" CodeSize="1" SrcFile="main.c" SrcRow="152">
            <type typename="float">
            </type>
          </var>
          <var name="U" address="32" ByteSize="4" CodeAddress="14461" CodeSize="1" SrcFile="main.c" SrcRow="152">
            <type typename="float">
            </type>
          </var>
          <var name="K" address="36" ByteSize="4" CodeAddress="14462" CodeSize="1" SrcFile="main.c" SrcRow="152">
            <type typename="float">
            </type>
          </var>
          <var name="T" address="40" ByteSize="4" CodeAddress="14463" CodeSize="1" SrcFile="main.c" SrcRow="152">
            <type typename="float">
            </type>
          </var>
          <if>
            <condition>
              <instr mname="isClear" linkedname=".MyPackage.TTimer.isClear" CodeAddress="14464" CodeSize="7" SrcRow="153">
                <subj>
                  <instr mname="SampleTime" linkedname=".MyPackage.SampleTime" CodeAddress="14465" CodeSize="3" SrcRow="153">
                  </instr>
                </subj>
              </instr>
            </condition>
            <then>
              <instr mname="Start" linkedname=".MyPackage.TTimer.Start" CodeAddress="14474" CodeSize="6" SrcRow="153">
                <subj>
                  <instr mname="SampleTime" linkedname=".MyPackage.SampleTime" CodeAddress="14474" CodeSize="3" SrcRow="153">
                  </instr>
                </subj>
              </instr>
            </then>
          </if>
          <if>
            <condition>
              <instr mname="GreaterOrEqual" linkedname=".MyPackage.signed_char.GreaterOrEqual" CodeAddress="14480" CodeSize="19" SrcRow="154">
                <subj>
                  <instr mname="Elapsedms" linkedname=".MyPackage.TTimer.Elapsedms" CodeAddress="14481" CodeSize="7" SrcRow="154">
                    <subj>
                      <instr mname="SampleTime" linkedname=".MyPackage.SampleTime" CodeAddress="14482" CodeSize="3" SrcRow="154">
                      </instr>
                    </subj>
                  </instr>
                </subj>
                <constv typename="signed_short" value="1000" />
              </instr>
            </condition>
            <then>
              <instr mname="" CodeAddress="14502" CodeSize="336">
                <instr mname="set" linkedname=".MyPackage.float.set" CodeAddress="14502" CodeSize="20" SrcRow="156">
                  <subj>
                    <instr mname="Tp" linkedname=".MyPackage..Tp" CodeAddress="14502" CodeSize="3" SrcRow="156">
                    </instr>
                  </subj>
                  <instr mname="div" linkedname=".MyPackage.signed_char.div" CodeAddress="14505" CodeSize="15" SrcRow="156">
                    <subj>
                      <instr mname="Elapsedms" linkedname=".MyPackage.TTimer.Elapsedms" CodeAddress="14506" CodeSize="7" SrcRow="156">
                        <subj>
                          <instr mname="SampleTime" linkedname=".MyPackage.SampleTime" CodeAddress="14507" CodeSize="3" SrcRow="156">
                          </instr>
                        </subj>
                      </instr>
                    </subj>
                    <constv typename="signed_short" value="1000" />
                  </instr>
                </instr>
                <instr mname="set" linkedname=".MyPackage.float.set" CodeAddress="14522" CodeSize="24" SrcRow="157">
                  <subj>
                    <instr mname="T_CO" linkedname=".MyPackage..T_CO" CodeAddress="14522" CodeSize="3" SrcRow="157">
                    </instr>
                  </subj>
                  <instr mname="IntegerToFloat" linkedname=".MyPackage.IntegerToFloat" CodeAddress="14525" CodeSize="20" SrcRow="157">
                    <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="14526" CodeSize="11" SrcRow="157">
                      <subj>
                        <instr mname="VAIValue" linkedname=".MyPackage.VAIValue" CodeAddress="14527" CodeSize="3" SrcRow="157">
                        </instr>
                      </subj>
                      <constv typename="signed_char" value="2" />
                    </instr>
                    <constv typename="signed_char" value="-1" />
                  </instr>
                </instr>
                <instr mname="set" linkedname=".MyPackage.float.set" CodeAddress="14546" CodeSize="24" SrcRow="158">
                  <subj>
                    <instr mname="Parameter" linkedname=".MyPackage..Parameter" CodeAddress="14546" CodeSize="3" SrcRow="158">
                    </instr>
                  </subj>
                  <instr mname="IntegerToFloat" linkedname=".MyPackage.IntegerToFloat" CodeAddress="14549" CodeSize="20" SrcRow="158">
                    <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="14550" CodeSize="11" SrcRow="158">
                      <subj>
                        <instr mname="ParamVal" linkedname=".MyPackage.ParamVal" CodeAddress="14551" CodeSize="3" SrcRow="158">
                        </instr>
                      </subj>
                      <constv typename="signed_char" value="7" />
                    </instr>
                    <constv typename="signed_char" value="-1" />
                  </instr>
                </instr>
                <instr mname="set" linkedname=".MyPackage.float.set" CodeAddress="14570" CodeSize="24" SrcRow="159">
                  <subj>
                    <instr mname="T_zewn" linkedname=".MyPackage..T_zewn" CodeAddress="14570" CodeSize="3" SrcRow="159">
                    </instr>
                  </subj>
                  <instr mname="IntegerToFloat" linkedname=".MyPackage.IntegerToFloat" CodeAddress="14573" CodeSize="20" SrcRow="159">
                    <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="14574" CodeSize="11" SrcRow="159">
                      <subj>
                        <instr mname="VAIValue" linkedname=".MyPackage.VAIValue" CodeAddress="14575" CodeSize="3" SrcRow="159">
                        </instr>
                      </subj>
                      <constv typename="signed_char" value="3" />
                    </instr>
                    <constv typename="signed_char" value="-1" />
                  </instr>
                </instr>
                <instr mname="set" linkedname=".MyPackage.float.set" CodeAddress="14594" CodeSize="32" SrcRow="160">
                  <subj>
                    <instr mname="T" linkedname=".MyPackage..T" CodeAddress="14594" CodeSize="3" SrcRow="160">
                    </instr>
                  </subj>
                  <instr mname="mul" linkedname=".MyPackage.float.mul" CodeAddress="14597" CodeSize="28" SrcRow="160">
                    <subj>
                      <instr mname="IntegerToFloat" linkedname=".MyPackage.IntegerToFloat" CodeAddress="14598" CodeSize="19" SrcRow="160">
                        <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="14599" CodeSize="11" SrcRow="160">
                          <subj>
                            <instr mname="ParamVal" linkedname=".MyPackage.ParamVal" CodeAddress="14600" CodeSize="3" SrcRow="160">
                            </instr>
                          </subj>
                          <constv typename="signed_char" value="21" />
                        </instr>
                      </instr>
                    </subj>
                    <constv typename="signed_short" value="3600" />
                  </instr>
                </instr>
                <instr mname="set" linkedname=".MyPackage.float.set" CodeAddress="14626" CodeSize="10" SrcRow="162">
                  <subj>
                    <instr mname="K" linkedname=".MyPackage..K" CodeAddress="14626" CodeSize="3" SrcRow="162">
                    </instr>
                  </subj>
                  <constv typename="float" value="1" />
                </instr>
                <instr mname="set" linkedname=".MyPackage.float.set" CodeAddress="14636" CodeSize="38" SrcRow="164">
                  <subj>
                    <instr mname="U" linkedname=".MyPackage..U" CodeAddress="14636" CodeSize="3" SrcRow="164">
                    </instr>
                  </subj>
                  <instr mname="div" linkedname=".MyPackage.float.div" CodeAddress="14639" CodeSize="34" SrcRow="164">
                    <subj>
                      <instr mname="" CodeAddress="14640" CodeSize="19">
                        <instr mname="sum" linkedname=".MyPackage.float.sum" CodeAddress="14640" CodeSize="19" SrcRow="164">
                          <subj>
                            <instr mname="T_CO" linkedname=".MyPackage..T_CO" CodeAddress="14641" CodeSize="3" SrcRow="164">
                            </instr>
                          </subj>
                          <instr mname="mul" linkedname=".MyPackage.float.mul" CodeAddress="14646" CodeSize="12" SrcRow="164">
                            <subj>
                              <instr mname="Parameter" linkedname=".MyPackage..Parameter" CodeAddress="14647" CodeSize="3" SrcRow="164">
                              </instr>
                            </subj>
                            <instr mname="T_zewn" linkedname=".MyPackage..T_zewn" CodeAddress="14652" CodeSize="3" SrcRow="164">
                            </instr>
                          </instr>
                        </instr>
                      </instr>
                    </subj>
                    <instr mname="" CodeAddress="14659" CodeSize="13">
                      <instr mname="sum" linkedname=".MyPackage.float.sum" CodeAddress="14659" CodeSize="13" SrcRow="164">
                        <subj>
                          <constv typename="float" value="1" />
                        </subj>
                        <instr mname="Parameter" linkedname=".MyPackage..Parameter" CodeAddress="14666" CodeSize="3" SrcRow="164">
                        </instr>
                      </instr>
                    </instr>
                  </instr>
                </instr>
                <instr mname="set" linkedname=".MyPackage.float.set" CodeAddress="14674" CodeSize="149" SrcRow="165">
                  <subj>
                    <instr mname="Y" linkedname=".MyPackage.Y" CodeAddress="14674" CodeSize="3" SrcRow="165">
                    </instr>
                  </subj>
                  <instr mname="sub" linkedname=".MyPackage.float.sub" CodeAddress="14677" CodeSize="145" SrcRow="165">
                    <subj>
                      <instr mname="sum" linkedname=".MyPackage.float.sum" CodeAddress="14678" CodeSize="84" SrcRow="165">
                        <subj>
                          <instr mname="mul" linkedname=".MyPackage.float.mul" CodeAddress="14679" CodeSize="41" SrcRow="165">
                            <subj>
                              <instr mname="div" linkedname=".MyPackage.float.div" CodeAddress="14680" CodeSize="34" SrcRow="165">
                                <subj>
                                  <instr mname="mul" linkedname=".MyPackage.float.mul" CodeAddress="14681" CodeSize="12" SrcRow="165">
                                    <subj>
                                      <instr mname="K" linkedname=".MyPackage..K" CodeAddress="14682" CodeSize="3" SrcRow="165">
                                      </instr>
                                    </subj>
                                    <instr mname="Tp" linkedname=".MyPackage..Tp" CodeAddress="14687" CodeSize="3" SrcRow="165">
                                    </instr>
                                  </instr>
                                </subj>
                                <instr mname="" CodeAddress="14693" CodeSize="20">
                                  <instr mname="sum" linkedname=".MyPackage.float.sum" CodeAddress="14693" CodeSize="20" SrcRow="165">
                                    <subj>
                                      <instr mname="mul" linkedname=".MyPackage.float.mul" CodeAddress="14694" CodeSize="13" SrcRow="165">
                                        <subj>
                                          <constv typename="float" value="2" />
                                        </subj>
                                        <instr mname="T" linkedname=".MyPackage..T" CodeAddress="14701" CodeSize="3" SrcRow="165">
                                        </instr>
                                      </instr>
                                    </subj>
                                    <instr mname="Tp" linkedname=".MyPackage..Tp" CodeAddress="14707" CodeSize="3" SrcRow="165">
                                    </instr>
                                  </instr>
                                </instr>
                              </instr>
                            </subj>
                            <instr mname="U" linkedname=".MyPackage..U" CodeAddress="14714" CodeSize="3" SrcRow="165">
                            </instr>
                          </instr>
                        </subj>
                        <instr mname="mul" linkedname=".MyPackage.float.mul" CodeAddress="14720" CodeSize="41" SrcRow="165">
                          <subj>
                            <instr mname="div" linkedname=".MyPackage.float.div" CodeAddress="14721" CodeSize="34" SrcRow="165">
                              <subj>
                                <instr mname="mul" linkedname=".MyPackage.float.mul" CodeAddress="14722" CodeSize="12" SrcRow="165">
                                  <subj>
                                    <instr mname="K" linkedname=".MyPackage..K" CodeAddress="14723" CodeSize="3" SrcRow="165">
                                    </instr>
                                  </subj>
                                  <instr mname="Tp" linkedname=".MyPackage..Tp" CodeAddress="14728" CodeSize="3" SrcRow="165">
                                  </instr>
                                </instr>
                              </subj>
                              <instr mname="" CodeAddress="14734" CodeSize="20">
                                <instr mname="sum" linkedname=".MyPackage.float.sum" CodeAddress="14734" CodeSize="20" SrcRow="165">
                                  <subj>
                                    <instr mname="mul" linkedname=".MyPackage.float.mul" CodeAddress="14735" CodeSize="13" SrcRow="165">
                                      <subj>
                                        <constv typename="float" value="2" />
                                      </subj>
                                      <instr mname="T" linkedname=".MyPackage..T" CodeAddress="14742" CodeSize="3" SrcRow="165">
                                      </instr>
                                    </instr>
                                  </subj>
                                  <instr mname="Tp" linkedname=".MyPackage..Tp" CodeAddress="14748" CodeSize="3" SrcRow="165">
                                  </instr>
                                </instr>
                              </instr>
                            </instr>
                          </subj>
                          <instr mname="lastU" linkedname=".MyPackage.lastU" CodeAddress="14755" CodeSize="3" SrcRow="165">
                          </instr>
                        </instr>
                      </instr>
                    </subj>
                    <instr mname="mul" linkedname=".MyPackage.float.mul" CodeAddress="14762" CodeSize="49" SrcRow="165">
                      <subj>
                        <instr mname="div" linkedname=".MyPackage.float.div" CodeAddress="14763" CodeSize="42" SrcRow="165">
                          <subj>
                            <instr mname="" CodeAddress="14764" CodeSize="20">
                              <instr mname="sum" linkedname=".MyPackage.float.sum" CodeAddress="14764" CodeSize="20" SrcRow="165">
                                <subj>
                                  <instr mname="Tp" linkedname=".MyPackage..Tp" CodeAddress="14765" CodeSize="3" SrcRow="165">
                                  </instr>
                                </subj>
                                <instr mname="mul" linkedname=".MyPackage.float.mul" CodeAddress="14770" CodeSize="13" SrcRow="165">
                                  <subj>
                                    <constv typename="float" value="-2" />
                                  </subj>
                                  <instr mname="T" linkedname=".MyPackage..T" CodeAddress="14777" CodeSize="3" SrcRow="165">
                                  </instr>
                                </instr>
                              </instr>
                            </instr>
                          </subj>
                          <instr mname="" CodeAddress="14784" CodeSize="20">
                            <instr mname="sum" linkedname=".MyPackage.float.sum" CodeAddress="14784" CodeSize="20" SrcRow="165">
                              <subj>
                                <instr mname="mul" linkedname=".MyPackage.float.mul" CodeAddress="14785" CodeSize="13" SrcRow="165">
                                  <subj>
                                    <constv typename="float" value="2" />
                                  </subj>
                                  <instr mname="T" linkedname=".MyPackage..T" CodeAddress="14792" CodeSize="3" SrcRow="165">
                                  </instr>
                                </instr>
                              </subj>
                              <instr mname="Tp" linkedname=".MyPackage..Tp" CodeAddress="14798" CodeSize="3" SrcRow="165">
                              </instr>
                            </instr>
                          </instr>
                        </instr>
                      </subj>
                      <instr mname="Y" linkedname=".MyPackage.Y" CodeAddress="14805" CodeSize="3" SrcRow="165">
                      </instr>
                    </instr>
                  </instr>
                </instr>
                <instr mname="set" linkedname=".MyPackage.float.set" CodeAddress="14823" CodeSize="9" SrcRow="166">
                  <subj>
                    <instr mname="lastU" linkedname=".MyPackage.lastU" CodeAddress="14823" CodeSize="3" SrcRow="166">
                    </instr>
                  </subj>
                  <instr mname="U" linkedname=".MyPackage..U" CodeAddress="14826" CodeSize="3" SrcRow="166">
                  </instr>
                </instr>
                <instr mname="Start" linkedname=".MyPackage.TTimer.Start" CodeAddress="14832" CodeSize="6" SrcRow="167">
                  <subj>
                    <instr mname="SampleTime" linkedname=".MyPackage.SampleTime" CodeAddress="14832" CodeSize="3" SrcRow="167">
                    </instr>
                  </subj>
                </instr>
              </instr>
            </then>
          </if>
          <instr mname="" CodeAddress="14838" CodeSize="10">
            <instr mname="set" linkedname=".MyPackage.float.set" CodeAddress="14838" CodeSize="9" SrcRow="169">
              <subj>
                <instr mname="RetVal" CodeAddress="14838" CodeSize="3" SrcRow="169">
                </instr>
              </subj>
              <instr mname="Y" linkedname=".MyPackage.Y" CodeAddress="14841" CodeSize="3" SrcRow="169">
              </instr>
            </instr>
            <instr mname="ExitFunction" CodeAddress="14847" CodeSize="1" SrcRow="169">
            </instr>
          </instr>
        </instr>
      </code>
    </funct>
    <funct name="BuildingTemperature" address="14851" pathname=".MyPackage.BuildingTemperature" MaxStackCallSz="140" MaxInternalStackSz="52" MaxInternalStackCallPos="main.c:179" ByteSize="4" CodeAddress="14851" CodeSize="82" SrcFile="main.c">
      <type typename="float">
      </type>
      <pvar name="RetVal" address="0" ByteSize="4">
        <type typename="float"></type>
      </pvar>
      <code>
        <instr mname="" CodeAddress="14863" CodeSize="69">
          <instr mname="" CodeAddress="14863" CodeSize="69">
            <instr mname="set" linkedname=".MyPackage.float.set" CodeAddress="14863" CodeSize="68" SrcRow="179">
              <subj>
                <instr mname="RetVal" CodeAddress="14863" CodeSize="3" SrcRow="179">
                </instr>
              </subj>
              <instr mname="div" linkedname=".MyPackage.float.div" CodeAddress="14866" CodeSize="64" SrcRow="179">
                <subj>
                  <instr mname="" CodeAddress="14867" CodeSize="34">
                    <instr mname="sum" linkedname=".MyPackage.float.sum" CodeAddress="14867" CodeSize="34" SrcRow="179">
                      <subj>
                        <instr mname="NTC_Temp_CO" linkedname=".MyPackage.NTC_Temp_CO" CodeAddress="14868" CodeSize="3" SrcRow="179">
                        </instr>
                      </subj>
                      <instr mname="mul" linkedname=".MyPackage.float.mul" CodeAddress="14873" CodeSize="27" SrcRow="179">
                        <subj>
                          <instr mname="IntegerToFloat" linkedname=".MyPackage.IntegerToFloat" CodeAddress="14874" CodeSize="20" SrcRow="179">
                            <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="14875" CodeSize="11" SrcRow="179">
                              <subj>
                                <instr mname="ParamVal" linkedname=".MyPackage.ParamVal" CodeAddress="14876" CodeSize="3" SrcRow="179">
                                </instr>
                              </subj>
                              <constv typename="signed_char" value="7" />
                            </instr>
                            <constv typename="signed_char" value="-1" />
                          </instr>
                        </subj>
                        <instr mname="NTC_Temp_Zewn" linkedname=".MyPackage.NTC_Temp_Zewn" CodeAddress="14894" CodeSize="3" SrcRow="179">
                        </instr>
                      </instr>
                    </instr>
                  </instr>
                </subj>
                <instr mname="" CodeAddress="14901" CodeSize="28">
                  <instr mname="sum" linkedname=".MyPackage.float.sum" CodeAddress="14901" CodeSize="28" SrcRow="179">
                    <subj>
                      <constv typename="float" value="1.0" />
                    </subj>
                    <instr mname="IntegerToFloat" linkedname=".MyPackage.IntegerToFloat" CodeAddress="14908" CodeSize="20" SrcRow="179">
                      <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="14909" CodeSize="11" SrcRow="179">
                        <subj>
                          <instr mname="ParamVal" linkedname=".MyPackage.ParamVal" CodeAddress="14910" CodeSize="3" SrcRow="179">
                          </instr>
                        </subj>
                        <constv typename="signed_char" value="7" />
                      </instr>
                      <constv typename="signed_char" value="-1" />
                    </instr>
                  </instr>
                </instr>
              </instr>
            </instr>
            <instr mname="ExitFunction" CodeAddress="14931" CodeSize="1" SrcRow="179">
            </instr>
          </instr>
        </instr>
      </code>
    </funct>
    <funct name="COTemperature" address="14933" pathname=".MyPackage.COTemperature" MaxStackCallSz="148" MaxInternalStackSz="60" MaxInternalStackCallPos="main.c:188" ByteSize="4" CodeAddress="14933" CodeSize="112" SrcFile="main.c">
      <type typename="float">
      </type>
      <pvar name="RetVal" address="0" ByteSize="4">
        <type typename="float"></type>
      </pvar>
      <code>
        <instr mname="" CodeAddress="14945" CodeSize="99">
          <instr mname="" CodeAddress="14945" CodeSize="99">
            <instr mname="set" linkedname=".MyPackage.float.set" CodeAddress="14945" CodeSize="98" SrcRow="188">
              <subj>
                <instr mname="RetVal" CodeAddress="14945" CodeSize="3" SrcRow="188">
                </instr>
              </subj>
              <instr mname="" CodeAddress="14948" CodeSize="94">
                <instr mname="sub" linkedname=".MyPackage.float.sub" CodeAddress="14948" CodeSize="94" SrcRow="188">
                  <subj>
                    <instr mname="IntegerToFloat" linkedname=".MyPackage.IntegerToFloat" CodeAddress="14949" CodeSize="19" SrcRow="188">
                      <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="14950" CodeSize="11" SrcRow="188">
                        <subj>
                          <instr mname="ParamVal" linkedname=".MyPackage.ParamVal" CodeAddress="14951" CodeSize="3" SrcRow="188">
                          </instr>
                        </subj>
                        <constv typename="signed_char" value="5" />
                      </instr>
                    </instr>
                  </subj>
                  <instr mname="mul" linkedname=".MyPackage.float.mul" CodeAddress="14968" CodeSize="63" SrcRow="188">
                    <subj>
                      <instr mname="IntegerToFloat" linkedname=".MyPackage.IntegerToFloat" CodeAddress="14969" CodeSize="20" SrcRow="188">
                        <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="14970" CodeSize="11" SrcRow="188">
                          <subj>
                            <instr mname="ParamVal" linkedname=".MyPackage.ParamVal" CodeAddress="14971" CodeSize="3" SrcRow="188">
                            </instr>
                          </subj>
                          <constv typename="signed_char" value="7" />
                        </instr>
                        <constv typename="signed_char" value="-1" />
                      </instr>
                    </subj>
                    <instr mname="" CodeAddress="14989" CodeSize="41">
                      <instr mname="sub" linkedname=".MyPackage.float.sub" CodeAddress="14989" CodeSize="41" SrcRow="188">
                        <subj>
                          <instr mname="IntegerToFloat" linkedname=".MyPackage.IntegerToFloat" CodeAddress="14990" CodeSize="10" SrcRow="188">
                            <instr mname="NTC_Temp_Zewn" linkedname=".MyPackage.NTC_Temp_Zewn" CodeAddress="14991" CodeSize="3" SrcRow="188">
                            </instr>
                          </instr>
                        </subj>
                        <instr mname="IntegerToFloat" linkedname=".MyPackage.IntegerToFloat" CodeAddress="15000" CodeSize="19" SrcRow="188">
                          <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="15001" CodeSize="11" SrcRow="188">
                            <subj>
                              <instr mname="ParamVal" linkedname=".MyPackage.ParamVal" CodeAddress="15002" CodeSize="3" SrcRow="188">
                              </instr>
                            </subj>
                            <constv typename="signed_char" value="5" />
                          </instr>
                        </instr>
                      </instr>
                    </instr>
                  </instr>
                </instr>
              </instr>
            </instr>
            <instr mname="ExitFunction" CodeAddress="15043" CodeSize="1" SrcRow="188">
            </instr>
          </instr>
        </instr>
      </code>
    </funct>
    <funct name="HP1_Turn" address="15045" pathname=".MyPackage.HP1_Turn" MaxStackCallSz="96" MaxInternalStackSz="52" MaxInternalStackCallPos="main.c:231" ByteSize="0" CodeAddress="15045" CodeSize="563" SrcFile="main.c">
      <type typename="object">
      </type>
      <pvar name="bOnOff" address="0" ByteSize="2">
        <type typename="signed_short">
        </type>
      </pvar>
      <pvar name="bCoCwu" address="2" ByteSize="2">
        <type typename="signed_short">
        </type>
      </pvar>
      <code>
        <instr mname="" CodeAddress="15057" CodeSize="550">
          <if>
            <condition>
              <instr mname="and" linkedname=".MyPackage.signed_char.and" CodeAddress="15057" CodeSize="95" SrcRow="201">
                <subj>
                  <instr mname="and" linkedname=".MyPackage.signed_char.and" CodeAddress="15058" CodeSize="70" SrcRow="201">
                    <subj>
                      <instr mname="and" linkedname=".MyPackage.signed_char.and" CodeAddress="15059" CodeSize="55" SrcRow="201">
                        <subj>
                          <instr mname="and" linkedname=".MyPackage.signed_char.and" CodeAddress="15060" CodeSize="36" SrcRow="201">
                            <subj>
                              <instr mname="Equal" linkedname=".MyPackage.signed_char.Equal" CodeAddress="15061" CodeSize="17" SrcRow="201">
                                <subj>
                                  <instr mname="isAlarm" linkedname=".MyPackage.TAlarmsManager.isAlarm" CodeAddress="15062" CodeSize="9" SrcRow="201">
                                    <subj>
                                      <instr mname="AlarmsManager" linkedname=".MyPackage.AlarmsManager" CodeAddress="15063" CodeSize="3" SrcRow="201">
                                      </instr>
                                    </subj>
                                    <constv typename="signed_char" value="5" />
                                  </instr>
                                </subj>
                                <constv typename="signed_char" value="0" />
                              </instr>
                            </subj>
                            <instr mname="Equal" linkedname=".MyPackage.signed_char.Equal" CodeAddress="15078" CodeSize="17" SrcRow="201">
                              <subj>
                                <instr mname="isAlarm" linkedname=".MyPackage.TAlarmsManager.isAlarm" CodeAddress="15079" CodeSize="9" SrcRow="201">
                                  <subj>
                                    <instr mname="AlarmsManager" linkedname=".MyPackage.AlarmsManager" CodeAddress="15080" CodeSize="3" SrcRow="201">
                                    </instr>
                                  </subj>
                                  <constv typename="signed_char" value="4" />
                                </instr>
                              </subj>
                              <constv typename="signed_char" value="0" />
                            </instr>
                          </instr>
                        </subj>
                        <instr mname="Equal" linkedname=".MyPackage.signed_char.Equal" CodeAddress="15096" CodeSize="17" SrcRow="201">
                          <subj>
                            <instr mname="isAlarm" linkedname=".MyPackage.TAlarmsManager.isAlarm" CodeAddress="15097" CodeSize="9" SrcRow="201">
                              <subj>
                                <instr mname="AlarmsManager" linkedname=".MyPackage.AlarmsManager" CodeAddress="15098" CodeSize="3" SrcRow="201">
                                </instr>
                              </subj>
                              <constv typename="signed_char" value="6" />
                            </instr>
                          </subj>
                          <constv typename="signed_char" value="0" />
                        </instr>
                      </instr>
                    </subj>
                    <instr mname="Equal" linkedname=".MyPackage.signed_char.Equal" CodeAddress="15114" CodeSize="13" SrcRow="201">
                      <subj>
                        <instr mname="bOnOff" linkedname=".MyPackage.HP1_Turn.bOnOff" CodeAddress="15115" CodeSize="3" SrcRow="201">
                        </instr>
                      </subj>
                      <constv typename="signed_char" value="1" />
                    </instr>
                  </instr>
                </subj>
                <instr mname="Equal" linkedname=".MyPackage.signed_char.Equal" CodeAddress="15128" CodeSize="23" SrcRow="201">
                  <subj>
                    <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="15129" CodeSize="11" SrcRow="201">
                      <subj>
                        <instr mname="VDOValue" linkedname=".MyPackage.VDOValue" CodeAddress="15130" CodeSize="3" SrcRow="201">
                        </instr>
                      </subj>
                      <constv typename="signed_char" value="15" />
                    </instr>
                  </subj>
                  <instr mname="bCoCwu" linkedname=".MyPackage.HP1_Turn.bCoCwu" CodeAddress="15141" CodeSize="3" SrcRow="201">
                  </instr>
                </instr>
              </instr>
            </condition>
            <then>
              <instr mname="" CodeAddress="15155" CodeSize="215">
                <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="15155" CodeSize="6" SrcRow="204">
                  <subj>
                    <instr mname="bHP1_isOn" linkedname=".MyPackage.bHP1_isOn" CodeAddress="15155" CodeSize="3" SrcRow="204">
                    </instr>
                  </subj>
                  <constv typename="signed_char" value="1" />
                </instr>
                <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="15161" CodeSize="14" SrcRow="206">
                  <subj>
                    <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="15161" CodeSize="11" SrcRow="206">
                      <subj>
                        <instr mname="VDOValue" linkedname=".MyPackage.VDOValue" CodeAddress="15162" CodeSize="3" SrcRow="206">
                        </instr>
                      </subj>
                      <constv typename="signed_char" value="6" />
                    </instr>
                  </subj>
                  <constv typename="signed_char" value="1" />
                </instr>
                <if>
                  <condition>
                    <instr mname="isClear" linkedname=".MyPackage.TTimerSec.isClear" CodeAddress="15175" CodeSize="7" SrcRow="208">
                      <subj>
                        <instr mname="PG1Wait" linkedname=".MyPackage.PG1Wait" CodeAddress="15176" CodeSize="3" SrcRow="208">
                        </instr>
                      </subj>
                    </instr>
                  </condition>
                  <then>
                    <instr mname="Start" linkedname=".MyPackage.TTimerSec.Start" CodeAddress="15185" CodeSize="6" SrcRow="208">
                      <subj>
                        <instr mname="PG1Wait" linkedname=".MyPackage.PG1Wait" CodeAddress="15185" CodeSize="3" SrcRow="208">
                        </instr>
                      </subj>
                    </instr>
                  </then>
                </if>
                <if>
                  <condition>
                    <instr mname="GreaterThan" linkedname=".MyPackage.signed_char.GreaterThan" CodeAddress="15191" CodeSize="26" SrcRow="209">
                      <subj>
                        <instr mname="ElapsedSec" linkedname=".MyPackage.TTimerSec.ElapsedSec" CodeAddress="15192" CodeSize="7" SrcRow="209">
                          <subj>
                            <instr mname="PG1Wait" linkedname=".MyPackage.PG1Wait" CodeAddress="15193" CodeSize="3" SrcRow="209">
                            </instr>
                          </subj>
                        </instr>
                      </subj>
                      <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="15199" CodeSize="11" SrcRow="209">
                        <subj>
                          <instr mname="ParamVal" linkedname=".MyPackage.ParamVal" CodeAddress="15200" CodeSize="3" SrcRow="209">
                          </instr>
                        </subj>
                        <constv typename="signed_char" value="15" />
                      </instr>
                    </instr>
                  </condition>
                  <then>
                    <if>
                      <condition>
                        <instr mname="Equal" linkedname=".MyPackage.signed_char.Equal" CodeAddress="15220" CodeSize="20" SrcRow="212">
                          <subj>
                            <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="15221" CodeSize="11" SrcRow="212">
                              <subj>
                                <instr mname="VDIValue" linkedname=".MyPackage.VDIValue" CodeAddress="15222" CodeSize="3" SrcRow="212">
                                </instr>
                              </subj>
                              <constv typename="signed_char" value="6" />
                            </instr>
                          </subj>
                          <constv typename="signed_char" value="1" />
                        </instr>
                      </condition>
                      <then>
                        <instr mname="" CodeAddress="15243" CodeSize="113">
                          <if>
                            <condition>
                              <instr mname="Equal" linkedname=".MyPackage.signed_char.Equal" CodeAddress="15243" CodeSize="13" SrcRow="214">
                                <subj>
                                  <instr mname="bCoCwu" linkedname=".MyPackage.HP1_Turn.bCoCwu" CodeAddress="15244" CodeSize="3" SrcRow="214">
                                  </instr>
                                </subj>
                                <constv typename="signed_char" value="0" />
                              </instr>
                            </condition>
                            <then>
                              <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="15259" CodeSize="14" SrcRow="214">
                                <subj>
                                  <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="15259" CodeSize="11" SrcRow="214">
                                    <subj>
                                      <instr mname="VDOValue" linkedname=".MyPackage.VDOValue" CodeAddress="15260" CodeSize="3" SrcRow="214">
                                      </instr>
                                    </subj>
                                    <constv typename="signed_char" value="15" />
                                  </instr>
                                </subj>
                                <constv typename="signed_char" value="0" />
                              </instr>
                            </then>
                            <else>
                              <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="15276" CodeSize="14" SrcRow="215">
                                <subj>
                                  <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="15276" CodeSize="11" SrcRow="215">
                                    <subj>
                                      <instr mname="VDOValue" linkedname=".MyPackage.VDOValue" CodeAddress="15277" CodeSize="3" SrcRow="215">
                                      </instr>
                                    </subj>
                                    <constv typename="signed_char" value="15" />
                                  </instr>
                                </subj>
                                <constv typename="signed_char" value="1" />
                              </instr>
                            </else>
                          </if>
                          <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="15290" CodeSize="14" SrcRow="217">
                            <subj>
                              <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="15290" CodeSize="11" SrcRow="217">
                                <subj>
                                  <instr mname="VDOValue" linkedname=".MyPackage.VDOValue" CodeAddress="15291" CodeSize="3" SrcRow="217">
                                  </instr>
                                </subj>
                                <constv typename="signed_char" value="9" />
                              </instr>
                            </subj>
                            <constv typename="signed_char" value="1" />
                          </instr>
                          <if>
                            <condition>
                              <instr mname="GreaterOrEqual" linkedname=".MyPackage.signed_char.GreaterOrEqual" CodeAddress="15304" CodeSize="34" SrcRow="219">
                                <subj>
                                  <instr mname="ElapsedSec" linkedname=".MyPackage.TTimerSec.ElapsedSec" CodeAddress="15305" CodeSize="15" SrcRow="219">
                                    <subj>
                                      <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="15306" CodeSize="11" SrcRow="219">
                                        <subj>
                                          <instr mname="Comp_Min_Off" linkedname=".MyPackage.Comp_Min_Off" CodeAddress="15307" CodeSize="3" SrcRow="219">
                                          </instr>
                                        </subj>
                                        <constv typename="signed_char" value="0" />
                                      </instr>
                                    </subj>
                                  </instr>
                                </subj>
                                <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="15320" CodeSize="11" SrcRow="219">
                                  <subj>
                                    <instr mname="ParamVal" linkedname=".MyPackage.ParamVal" CodeAddress="15321" CodeSize="3" SrcRow="219">
                                    </instr>
                                  </subj>
                                  <constv typename="signed_char" value="17" />
                                </instr>
                              </instr>
                            </condition>
                            <then>
                              <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="15341" CodeSize="14" SrcRow="219">
                                <subj>
                                  <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="15341" CodeSize="11" SrcRow="219">
                                    <subj>
                                      <instr mname="VDOValue" linkedname=".MyPackage.VDOValue" CodeAddress="15342" CodeSize="3" SrcRow="219">
                                      </instr>
                                    </subj>
                                    <constv typename="signed_char" value="3" />
                                  </instr>
                                </subj>
                                <constv typename="signed_char" value="1" />
                              </instr>
                            </then>
                          </if>
                          <instr mname="" CodeAddress="15355" CodeSize="1">
                            <instr mname="ExitFunction" CodeAddress="15355" CodeSize="1" SrcRow="220">
                            </instr>
                          </instr>
                        </instr>
                      </then>
                      <else>
                        <instr mname="" CodeAddress="15359" CodeSize="7">
                          <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="15359" CodeSize="6" SrcRow="225">
                            <subj>
                              <instr mname="bAL_CzP" linkedname=".MyPackage.bAL_CzP" CodeAddress="15359" CodeSize="3" SrcRow="225">
                              </instr>
                            </subj>
                            <constv typename="signed_char" value="1" />
                          </instr>
                          <instr mname="" CodeAddress="15365" CodeSize="1">
                            <instr mname="ExitFunction" CodeAddress="15365" CodeSize="1" SrcRow="226">
                            </instr>
                          </instr>
                        </instr>
                      </else>
                    </if>
                  </then>
                  <else>
                    <instr mname="ExitFunction" CodeAddress="15369" CodeSize="1" SrcRow="228">
                    </instr>
                  </else>
                </if>
              </instr>
            </then>
            <else>
              <if>
                <condition>
                  <instr mname="or" linkedname=".MyPackage.signed_char.or" CodeAddress="15373" CodeSize="91" SrcRow="231">
                    <subj>
                      <instr mname="or" linkedname=".MyPackage.signed_char.or" CodeAddress="15374" CodeSize="72" SrcRow="231">
                        <subj>
                          <instr mname="or" linkedname=".MyPackage.signed_char.or" CodeAddress="15375" CodeSize="53" SrcRow="231">
                            <subj>
                              <instr mname="GreaterOrEqual" linkedname=".MyPackage.signed_char.GreaterOrEqual" CodeAddress="15376" CodeSize="34" SrcRow="231">
                                <subj>
                                  <instr mname="ElapsedSec" linkedname=".MyPackage.TTimerSec.ElapsedSec" CodeAddress="15377" CodeSize="15" SrcRow="231">
                                    <subj>
                                      <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="15378" CodeSize="11" SrcRow="231">
                                        <subj>
                                          <instr mname="Comp_Min_On" linkedname=".MyPackage.Comp_Min_On" CodeAddress="15379" CodeSize="3" SrcRow="231">
                                          </instr>
                                        </subj>
                                        <constv typename="signed_char" value="0" />
                                      </instr>
                                    </subj>
                                  </instr>
                                </subj>
                                <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="15392" CodeSize="11" SrcRow="231">
                                  <subj>
                                    <instr mname="ParamVal" linkedname=".MyPackage.ParamVal" CodeAddress="15393" CodeSize="3" SrcRow="231">
                                    </instr>
                                  </subj>
                                  <constv typename="signed_char" value="16" />
                                </instr>
                              </instr>
                            </subj>
                            <instr mname="Equal" linkedname=".MyPackage.signed_char.Equal" CodeAddress="15410" CodeSize="17" SrcRow="231">
                              <subj>
                                <instr mname="isAlarm" linkedname=".MyPackage.TAlarmsManager.isAlarm" CodeAddress="15411" CodeSize="9" SrcRow="231">
                                  <subj>
                                    <instr mname="AlarmsManager" linkedname=".MyPackage.AlarmsManager" CodeAddress="15412" CodeSize="3" SrcRow="231">
                                    </instr>
                                  </subj>
                                  <constv typename="signed_char" value="5" />
                                </instr>
                              </subj>
                              <constv typename="signed_char" value="1" />
                            </instr>
                          </instr>
                        </subj>
                        <instr mname="Equal" linkedname=".MyPackage.signed_char.Equal" CodeAddress="15428" CodeSize="17" SrcRow="231">
                          <subj>
                            <instr mname="isAlarm" linkedname=".MyPackage.TAlarmsManager.isAlarm" CodeAddress="15429" CodeSize="9" SrcRow="231">
                              <subj>
                                <instr mname="AlarmsManager" linkedname=".MyPackage.AlarmsManager" CodeAddress="15430" CodeSize="3" SrcRow="231">
                                </instr>
                              </subj>
                              <constv typename="signed_char" value="4" />
                            </instr>
                          </subj>
                          <constv typename="signed_char" value="1" />
                        </instr>
                      </instr>
                    </subj>
                    <instr mname="Equal" linkedname=".MyPackage.signed_char.Equal" CodeAddress="15446" CodeSize="17" SrcRow="231">
                      <subj>
                        <instr mname="isAlarm" linkedname=".MyPackage.TAlarmsManager.isAlarm" CodeAddress="15447" CodeSize="9" SrcRow="231">
                          <subj>
                            <instr mname="AlarmsManager" linkedname=".MyPackage.AlarmsManager" CodeAddress="15448" CodeSize="3" SrcRow="231">
                            </instr>
                          </subj>
                          <constv typename="signed_char" value="6" />
                        </instr>
                      </subj>
                      <constv typename="signed_char" value="1" />
                    </instr>
                  </instr>
                </condition>
                <then>
                  <instr mname="" CodeAddress="15467" CodeSize="140">
                    <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="15467" CodeSize="6" SrcRow="234">
                      <subj>
                        <instr mname="bHP1_isOn" linkedname=".MyPackage.bHP1_isOn" CodeAddress="15467" CodeSize="3" SrcRow="234">
                        </instr>
                      </subj>
                      <constv typename="signed_char" value="0" />
                    </instr>
                    <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="15473" CodeSize="14" SrcRow="235">
                      <subj>
                        <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="15473" CodeSize="11" SrcRow="235">
                          <subj>
                            <instr mname="VDOValue" linkedname=".MyPackage.VDOValue" CodeAddress="15474" CodeSize="3" SrcRow="235">
                            </instr>
                          </subj>
                          <constv typename="signed_char" value="3" />
                        </instr>
                      </subj>
                      <constv typename="signed_char" value="0" />
                    </instr>
                    <if>
                      <condition>
                        <instr mname="NotEqual" linkedname=".MyPackage.signed_char.NotEqual" CodeAddress="15487" CodeSize="19" SrcRow="236">
                          <subj>
                            <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="15488" CodeSize="11" SrcRow="236">
                              <subj>
                                <instr mname="VDOValue" linkedname=".MyPackage.VDOValue" CodeAddress="15489" CodeSize="3" SrcRow="236">
                                </instr>
                              </subj>
                              <constv typename="signed_char" value="15" />
                            </instr>
                          </subj>
                          <instr mname="bCoCwu" linkedname=".MyPackage.HP1_Turn.bCoCwu" CodeAddress="15500" CodeSize="3" SrcRow="236">
                          </instr>
                        </instr>
                      </condition>
                      <then>
                        <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="15509" CodeSize="17" SrcRow="236">
                          <subj>
                            <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="15509" CodeSize="11" SrcRow="236">
                              <subj>
                                <instr mname="VDOValue" linkedname=".MyPackage.VDOValue" CodeAddress="15510" CodeSize="3" SrcRow="236">
                                </instr>
                              </subj>
                              <constv typename="signed_char" value="15" />
                            </instr>
                          </subj>
                          <instr mname="bCoCwu" linkedname=".MyPackage.HP1_Turn.bCoCwu" CodeAddress="15520" CodeSize="3" SrcRow="236">
                          </instr>
                        </instr>
                      </then>
                    </if>
                    <if>
                      <condition>
                        <instr mname="Equal" linkedname=".MyPackage.signed_char.Equal" CodeAddress="15526" CodeSize="13" SrcRow="237">
                          <subj>
                            <instr mname="bOnOff" linkedname=".MyPackage.HP1_Turn.bOnOff" CodeAddress="15527" CodeSize="3" SrcRow="237">
                            </instr>
                          </subj>
                          <constv typename="signed_char" value="0" />
                        </instr>
                      </condition>
                      <then>
                        <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="15542" CodeSize="14" SrcRow="237">
                          <subj>
                            <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="15542" CodeSize="11" SrcRow="237">
                              <subj>
                                <instr mname="VDOValue" linkedname=".MyPackage.VDOValue" CodeAddress="15543" CodeSize="3" SrcRow="237">
                                </instr>
                              </subj>
                              <constv typename="signed_char" value="15" />
                            </instr>
                          </subj>
                          <constv typename="signed_char" value="0" />
                        </instr>
                      </then>
                    </if>
                    <if>
                      <condition>
                        <instr mname="not" linkedname=".MyPackage.signed_char.not" CodeAddress="15556" CodeSize="7" SrcRow="238">
                          <subj>
                            <instr mname="bHP2_isOn" linkedname=".MyPackage.bHP2_isOn" CodeAddress="15557" CodeSize="3" SrcRow="238">
                            </instr>
                          </subj>
                        </instr>
                      </condition>
                      <then>
                        <instr mname="" CodeAddress="15566" CodeSize="40">
                          <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="15566" CodeSize="14" SrcRow="239">
                            <subj>
                              <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="15566" CodeSize="11" SrcRow="239">
                                <subj>
                                  <instr mname="VDOValue" linkedname=".MyPackage.VDOValue" CodeAddress="15567" CodeSize="3" SrcRow="239">
                                  </instr>
                                </subj>
                                <constv typename="signed_char" value="6" />
                              </instr>
                            </subj>
                            <constv typename="signed_char" value="0" />
                          </instr>
                          <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="15580" CodeSize="14" SrcRow="240">
                            <subj>
                              <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="15580" CodeSize="11" SrcRow="240">
                                <subj>
                                  <instr mname="VDOValue" linkedname=".MyPackage.VDOValue" CodeAddress="15581" CodeSize="3" SrcRow="240">
                                  </instr>
                                </subj>
                                <constv typename="signed_char" value="9" />
                              </instr>
                            </subj>
                            <constv typename="signed_char" value="0" />
                          </instr>
                          <instr mname="Clear" linkedname=".MyPackage.TTimerSec.Clear" CodeAddress="15594" CodeSize="6" SrcRow="241">
                            <subj>
                              <instr mname="PG1Wait" linkedname=".MyPackage.PG1Wait" CodeAddress="15594" CodeSize="3" SrcRow="241">
                              </instr>
                            </subj>
                          </instr>
                          <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="15600" CodeSize="6" SrcRow="242">
                            <subj>
                              <instr mname="bAL_CzP" linkedname=".MyPackage.bAL_CzP" CodeAddress="15600" CodeSize="3" SrcRow="242">
                              </instr>
                            </subj>
                            <constv typename="signed_char" value="0" />
                          </instr>
                        </instr>
                      </then>
                    </if>
                    <instr mname="" CodeAddress="15606" CodeSize="1">
                      <instr mname="ExitFunction" CodeAddress="15606" CodeSize="1" SrcRow="244">
                      </instr>
                    </instr>
                  </instr>
                </then>
              </if>
            </else>
          </if>
        </instr>
      </code>
    </funct>
    <funct name="HP2_Turn" address="15608" pathname=".MyPackage.HP2_Turn" MaxStackCallSz="96" MaxInternalStackSz="48" MaxInternalStackCallPos="main.c:284" ByteSize="2" CodeAddress="15608" CodeSize="450" SrcFile="main.c">
      <type typename="signed_short">
      </type>
      <pvar name="RetVal" address="0" ByteSize="2">
        <type typename="signed_short"></type>
      </pvar>
      <pvar name="bOnOff" address="2" ByteSize="2">
        <type typename="signed_short">
        </type>
      </pvar>
      <code>
        <instr mname="" CodeAddress="15620" CodeSize="437">
          <if>
            <condition>
              <instr mname="and" linkedname=".MyPackage.signed_char.and" CodeAddress="15620" CodeSize="70" SrcRow="254">
                <subj>
                  <instr mname="and" linkedname=".MyPackage.signed_char.and" CodeAddress="15621" CodeSize="55" SrcRow="254">
                    <subj>
                      <instr mname="and" linkedname=".MyPackage.signed_char.and" CodeAddress="15622" CodeSize="36" SrcRow="254">
                        <subj>
                          <instr mname="Equal" linkedname=".MyPackage.signed_char.Equal" CodeAddress="15623" CodeSize="17" SrcRow="254">
                            <subj>
                              <instr mname="isAlarm" linkedname=".MyPackage.TAlarmsManager.isAlarm" CodeAddress="15624" CodeSize="9" SrcRow="254">
                                <subj>
                                  <instr mname="AlarmsManager" linkedname=".MyPackage.AlarmsManager" CodeAddress="15625" CodeSize="3" SrcRow="254">
                                  </instr>
                                </subj>
                                <constv typename="signed_char" value="5" />
                              </instr>
                            </subj>
                            <constv typename="signed_char" value="0" />
                          </instr>
                        </subj>
                        <instr mname="Equal" linkedname=".MyPackage.signed_char.Equal" CodeAddress="15640" CodeSize="17" SrcRow="254">
                          <subj>
                            <instr mname="isAlarm" linkedname=".MyPackage.TAlarmsManager.isAlarm" CodeAddress="15641" CodeSize="9" SrcRow="254">
                              <subj>
                                <instr mname="AlarmsManager" linkedname=".MyPackage.AlarmsManager" CodeAddress="15642" CodeSize="3" SrcRow="254">
                                </instr>
                              </subj>
                              <constv typename="signed_char" value="4" />
                            </instr>
                          </subj>
                          <constv typename="signed_char" value="0" />
                        </instr>
                      </instr>
                    </subj>
                    <instr mname="Equal" linkedname=".MyPackage.signed_char.Equal" CodeAddress="15658" CodeSize="17" SrcRow="254">
                      <subj>
                        <instr mname="isAlarm" linkedname=".MyPackage.TAlarmsManager.isAlarm" CodeAddress="15659" CodeSize="9" SrcRow="254">
                          <subj>
                            <instr mname="AlarmsManager" linkedname=".MyPackage.AlarmsManager" CodeAddress="15660" CodeSize="3" SrcRow="254">
                            </instr>
                          </subj>
                          <constv typename="signed_char" value="7" />
                        </instr>
                      </subj>
                      <constv typename="signed_char" value="0" />
                    </instr>
                  </instr>
                </subj>
                <instr mname="Equal" linkedname=".MyPackage.signed_char.Equal" CodeAddress="15676" CodeSize="13" SrcRow="254">
                  <subj>
                    <instr mname="bOnOff" linkedname=".MyPackage.HP2_Turn.bOnOff" CodeAddress="15677" CodeSize="3" SrcRow="254">
                    </instr>
                  </subj>
                  <constv typename="signed_char" value="1" />
                </instr>
              </instr>
            </condition>
            <then>
              <instr mname="" CodeAddress="15693" CodeSize="182">
                <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="15693" CodeSize="6" SrcRow="257">
                  <subj>
                    <instr mname="bHP2_isOn" linkedname=".MyPackage.bHP2_isOn" CodeAddress="15693" CodeSize="3" SrcRow="257">
                    </instr>
                  </subj>
                  <constv typename="signed_char" value="1" />
                </instr>
                <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="15699" CodeSize="14" SrcRow="259">
                  <subj>
                    <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="15699" CodeSize="11" SrcRow="259">
                      <subj>
                        <instr mname="VDOValue" linkedname=".MyPackage.VDOValue" CodeAddress="15700" CodeSize="3" SrcRow="259">
                        </instr>
                      </subj>
                      <constv typename="signed_char" value="6" />
                    </instr>
                  </subj>
                  <constv typename="signed_char" value="1" />
                </instr>
                <if>
                  <condition>
                    <instr mname="isClear" linkedname=".MyPackage.TTimerSec.isClear" CodeAddress="15713" CodeSize="7" SrcRow="261">
                      <subj>
                        <instr mname="PG1Wait" linkedname=".MyPackage.PG1Wait" CodeAddress="15714" CodeSize="3" SrcRow="261">
                        </instr>
                      </subj>
                    </instr>
                  </condition>
                  <then>
                    <instr mname="Start" linkedname=".MyPackage.TTimerSec.Start" CodeAddress="15723" CodeSize="6" SrcRow="261">
                      <subj>
                        <instr mname="PG1Wait" linkedname=".MyPackage.PG1Wait" CodeAddress="15723" CodeSize="3" SrcRow="261">
                        </instr>
                      </subj>
                    </instr>
                  </then>
                </if>
                <if>
                  <condition>
                    <instr mname="GreaterThan" linkedname=".MyPackage.signed_char.GreaterThan" CodeAddress="15729" CodeSize="26" SrcRow="262">
                      <subj>
                        <instr mname="ElapsedSec" linkedname=".MyPackage.TTimerSec.ElapsedSec" CodeAddress="15730" CodeSize="7" SrcRow="262">
                          <subj>
                            <instr mname="PG1Wait" linkedname=".MyPackage.PG1Wait" CodeAddress="15731" CodeSize="3" SrcRow="262">
                            </instr>
                          </subj>
                        </instr>
                      </subj>
                      <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="15737" CodeSize="11" SrcRow="262">
                        <subj>
                          <instr mname="ParamVal" linkedname=".MyPackage.ParamVal" CodeAddress="15738" CodeSize="3" SrcRow="262">
                          </instr>
                        </subj>
                        <constv typename="signed_char" value="15" />
                      </instr>
                    </instr>
                  </condition>
                  <then>
                    <if>
                      <condition>
                        <instr mname="Equal" linkedname=".MyPackage.signed_char.Equal" CodeAddress="15758" CodeSize="20" SrcRow="265">
                          <subj>
                            <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="15759" CodeSize="11" SrcRow="265">
                              <subj>
                                <instr mname="VDIValue" linkedname=".MyPackage.VDIValue" CodeAddress="15760" CodeSize="3" SrcRow="265">
                                </instr>
                              </subj>
                              <constv typename="signed_char" value="6" />
                            </instr>
                          </subj>
                          <constv typename="signed_char" value="1" />
                        </instr>
                      </condition>
                      <then>
                        <instr mname="" CodeAddress="15781" CodeSize="80">
                          <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="15781" CodeSize="14" SrcRow="268">
                            <subj>
                              <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="15781" CodeSize="11" SrcRow="268">
                                <subj>
                                  <instr mname="VDOValue" linkedname=".MyPackage.VDOValue" CodeAddress="15782" CodeSize="3" SrcRow="268">
                                  </instr>
                                </subj>
                                <constv typename="signed_char" value="9" />
                              </instr>
                            </subj>
                            <constv typename="signed_char" value="1" />
                          </instr>
                          <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="15795" CodeSize="14" SrcRow="270">
                            <subj>
                              <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="15795" CodeSize="11" SrcRow="270">
                                <subj>
                                  <instr mname="VDOValue" linkedname=".MyPackage.VDOValue" CodeAddress="15796" CodeSize="3" SrcRow="270">
                                  </instr>
                                </subj>
                                <constv typename="signed_char" value="14" />
                              </instr>
                            </subj>
                            <constv typename="signed_char" value="1" />
                          </instr>
                          <if>
                            <condition>
                              <instr mname="GreaterOrEqual" linkedname=".MyPackage.signed_char.GreaterOrEqual" CodeAddress="15809" CodeSize="34" SrcRow="272">
                                <subj>
                                  <instr mname="ElapsedSec" linkedname=".MyPackage.TTimerSec.ElapsedSec" CodeAddress="15810" CodeSize="15" SrcRow="272">
                                    <subj>
                                      <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="15811" CodeSize="11" SrcRow="272">
                                        <subj>
                                          <instr mname="Comp_Min_Off" linkedname=".MyPackage.Comp_Min_Off" CodeAddress="15812" CodeSize="3" SrcRow="272">
                                          </instr>
                                        </subj>
                                        <constv typename="signed_char" value="1" />
                                      </instr>
                                    </subj>
                                  </instr>
                                </subj>
                                <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="15825" CodeSize="11" SrcRow="272">
                                  <subj>
                                    <instr mname="ParamVal" linkedname=".MyPackage.ParamVal" CodeAddress="15826" CodeSize="3" SrcRow="272">
                                    </instr>
                                  </subj>
                                  <constv typename="signed_char" value="17" />
                                </instr>
                              </instr>
                            </condition>
                            <then>
                              <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="15846" CodeSize="14" SrcRow="272">
                                <subj>
                                  <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="15846" CodeSize="11" SrcRow="272">
                                    <subj>
                                      <instr mname="VDOValue" linkedname=".MyPackage.VDOValue" CodeAddress="15847" CodeSize="3" SrcRow="272">
                                      </instr>
                                    </subj>
                                    <constv typename="signed_char" value="4" />
                                  </instr>
                                </subj>
                                <constv typename="signed_char" value="1" />
                              </instr>
                            </then>
                          </if>
                          <instr mname="" CodeAddress="15860" CodeSize="1">
                            <instr mname="ExitFunction" CodeAddress="15860" CodeSize="1" SrcRow="273">
                            </instr>
                          </instr>
                        </instr>
                      </then>
                      <else>
                        <instr mname="" CodeAddress="15864" CodeSize="7">
                          <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="15864" CodeSize="6" SrcRow="278">
                            <subj>
                              <instr mname="bAL_CzP" linkedname=".MyPackage.bAL_CzP" CodeAddress="15864" CodeSize="3" SrcRow="278">
                              </instr>
                            </subj>
                            <constv typename="signed_char" value="1" />
                          </instr>
                          <instr mname="" CodeAddress="15870" CodeSize="1">
                            <instr mname="ExitFunction" CodeAddress="15870" CodeSize="1" SrcRow="279">
                            </instr>
                          </instr>
                        </instr>
                      </else>
                    </if>
                  </then>
                  <else>
                    <instr mname="ExitFunction" CodeAddress="15874" CodeSize="1" SrcRow="281">
                    </instr>
                  </else>
                </if>
              </instr>
            </then>
            <else>
              <if>
                <condition>
                  <instr mname="or" linkedname=".MyPackage.signed_char.or" CodeAddress="15878" CodeSize="91" SrcRow="284">
                    <subj>
                      <instr mname="or" linkedname=".MyPackage.signed_char.or" CodeAddress="15879" CodeSize="72" SrcRow="284">
                        <subj>
                          <instr mname="or" linkedname=".MyPackage.signed_char.or" CodeAddress="15880" CodeSize="53" SrcRow="284">
                            <subj>
                              <instr mname="GreaterOrEqual" linkedname=".MyPackage.signed_char.GreaterOrEqual" CodeAddress="15881" CodeSize="34" SrcRow="284">
                                <subj>
                                  <instr mname="ElapsedSec" linkedname=".MyPackage.TTimerSec.ElapsedSec" CodeAddress="15882" CodeSize="15" SrcRow="284">
                                    <subj>
                                      <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="15883" CodeSize="11" SrcRow="284">
                                        <subj>
                                          <instr mname="Comp_Min_On" linkedname=".MyPackage.Comp_Min_On" CodeAddress="15884" CodeSize="3" SrcRow="284">
                                          </instr>
                                        </subj>
                                        <constv typename="signed_char" value="1" />
                                      </instr>
                                    </subj>
                                  </instr>
                                </subj>
                                <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="15897" CodeSize="11" SrcRow="284">
                                  <subj>
                                    <instr mname="ParamVal" linkedname=".MyPackage.ParamVal" CodeAddress="15898" CodeSize="3" SrcRow="284">
                                    </instr>
                                  </subj>
                                  <constv typename="signed_char" value="16" />
                                </instr>
                              </instr>
                            </subj>
                            <instr mname="Equal" linkedname=".MyPackage.signed_char.Equal" CodeAddress="15915" CodeSize="17" SrcRow="284">
                              <subj>
                                <instr mname="isAlarm" linkedname=".MyPackage.TAlarmsManager.isAlarm" CodeAddress="15916" CodeSize="9" SrcRow="284">
                                  <subj>
                                    <instr mname="AlarmsManager" linkedname=".MyPackage.AlarmsManager" CodeAddress="15917" CodeSize="3" SrcRow="284">
                                    </instr>
                                  </subj>
                                  <constv typename="signed_char" value="5" />
                                </instr>
                              </subj>
                              <constv typename="signed_char" value="1" />
                            </instr>
                          </instr>
                        </subj>
                        <instr mname="Equal" linkedname=".MyPackage.signed_char.Equal" CodeAddress="15933" CodeSize="17" SrcRow="284">
                          <subj>
                            <instr mname="isAlarm" linkedname=".MyPackage.TAlarmsManager.isAlarm" CodeAddress="15934" CodeSize="9" SrcRow="284">
                              <subj>
                                <instr mname="AlarmsManager" linkedname=".MyPackage.AlarmsManager" CodeAddress="15935" CodeSize="3" SrcRow="284">
                                </instr>
                              </subj>
                              <constv typename="signed_char" value="4" />
                            </instr>
                          </subj>
                          <constv typename="signed_char" value="1" />
                        </instr>
                      </instr>
                    </subj>
                    <instr mname="Equal" linkedname=".MyPackage.signed_char.Equal" CodeAddress="15951" CodeSize="17" SrcRow="284">
                      <subj>
                        <instr mname="isAlarm" linkedname=".MyPackage.TAlarmsManager.isAlarm" CodeAddress="15952" CodeSize="9" SrcRow="284">
                          <subj>
                            <instr mname="AlarmsManager" linkedname=".MyPackage.AlarmsManager" CodeAddress="15953" CodeSize="3" SrcRow="284">
                            </instr>
                          </subj>
                          <constv typename="signed_char" value="7" />
                        </instr>
                      </subj>
                      <constv typename="signed_char" value="1" />
                    </instr>
                  </instr>
                </condition>
                <then>
                  <instr mname="" CodeAddress="15972" CodeSize="85">
                    <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="15972" CodeSize="6" SrcRow="287">
                      <subj>
                        <instr mname="bHP2_isOn" linkedname=".MyPackage.bHP2_isOn" CodeAddress="15972" CodeSize="3" SrcRow="287">
                        </instr>
                      </subj>
                      <constv typename="signed_char" value="0" />
                    </instr>
                    <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="15978" CodeSize="14" SrcRow="288">
                      <subj>
                        <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="15978" CodeSize="11" SrcRow="288">
                          <subj>
                            <instr mname="VDOValue" linkedname=".MyPackage.VDOValue" CodeAddress="15979" CodeSize="3" SrcRow="288">
                            </instr>
                          </subj>
                          <constv typename="signed_char" value="4" />
                        </instr>
                      </subj>
                      <constv typename="signed_char" value="0" />
                    </instr>
                    <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="15992" CodeSize="14" SrcRow="289">
                      <subj>
                        <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="15992" CodeSize="11" SrcRow="289">
                          <subj>
                            <instr mname="VDOValue" linkedname=".MyPackage.VDOValue" CodeAddress="15993" CodeSize="3" SrcRow="289">
                            </instr>
                          </subj>
                          <constv typename="signed_char" value="14" />
                        </instr>
                      </subj>
                      <constv typename="signed_char" value="0" />
                    </instr>
                    <if>
                      <condition>
                        <instr mname="not" linkedname=".MyPackage.signed_char.not" CodeAddress="16006" CodeSize="7" SrcRow="290">
                          <subj>
                            <instr mname="bHP1_isOn" linkedname=".MyPackage.bHP1_isOn" CodeAddress="16007" CodeSize="3" SrcRow="290">
                            </instr>
                          </subj>
                        </instr>
                      </condition>
                      <then>
                        <instr mname="" CodeAddress="16016" CodeSize="40">
                          <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="16016" CodeSize="14" SrcRow="291">
                            <subj>
                              <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="16016" CodeSize="11" SrcRow="291">
                                <subj>
                                  <instr mname="VDOValue" linkedname=".MyPackage.VDOValue" CodeAddress="16017" CodeSize="3" SrcRow="291">
                                  </instr>
                                </subj>
                                <constv typename="signed_char" value="6" />
                              </instr>
                            </subj>
                            <constv typename="signed_char" value="0" />
                          </instr>
                          <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="16030" CodeSize="14" SrcRow="292">
                            <subj>
                              <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="16030" CodeSize="11" SrcRow="292">
                                <subj>
                                  <instr mname="VDOValue" linkedname=".MyPackage.VDOValue" CodeAddress="16031" CodeSize="3" SrcRow="292">
                                  </instr>
                                </subj>
                                <constv typename="signed_char" value="9" />
                              </instr>
                            </subj>
                            <constv typename="signed_char" value="0" />
                          </instr>
                          <instr mname="Clear" linkedname=".MyPackage.TTimerSec.Clear" CodeAddress="16044" CodeSize="6" SrcRow="293">
                            <subj>
                              <instr mname="PG1Wait" linkedname=".MyPackage.PG1Wait" CodeAddress="16044" CodeSize="3" SrcRow="293">
                              </instr>
                            </subj>
                          </instr>
                          <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="16050" CodeSize="6" SrcRow="294">
                            <subj>
                              <instr mname="bAL_CzP" linkedname=".MyPackage.bAL_CzP" CodeAddress="16050" CodeSize="3" SrcRow="294">
                              </instr>
                            </subj>
                            <constv typename="signed_char" value="0" />
                          </instr>
                        </instr>
                      </then>
                    </if>
                    <instr mname="" CodeAddress="16056" CodeSize="1">
                      <instr mname="ExitFunction" CodeAddress="16056" CodeSize="1" SrcRow="296">
                      </instr>
                    </instr>
                  </instr>
                </then>
              </if>
            </else>
          </if>
        </instr>
      </code>
    </funct>
    <funct name="HP3_Turn" address="16058" pathname=".MyPackage.HP3_Turn" MaxStackCallSz="90" MaxInternalStackSz="42" MaxInternalStackCallPos="main.c:318" ByteSize="2" CodeAddress="16058" CodeSize="357" SrcFile="main.c">
      <type typename="signed_short">
      </type>
      <pvar name="RetVal" address="0" ByteSize="2">
        <type typename="signed_short"></type>
      </pvar>
      <pvar name="bOnOff" address="2" ByteSize="2">
        <type typename="signed_short">
        </type>
      </pvar>
      <pvar name="bCoCwu" address="4" ByteSize="2">
        <type typename="signed_short">
        </type>
      </pvar>
      <code>
        <instr mname="" CodeAddress="16070" CodeSize="344">
          <if>
            <condition>
              <instr mname="and" linkedname=".MyPackage.signed_char.and" CodeAddress="16070" CodeSize="53" SrcRow="306">
                <subj>
                  <instr mname="and" linkedname=".MyPackage.signed_char.and" CodeAddress="16071" CodeSize="32" SrcRow="306">
                    <subj>
                      <instr mname="Equal" linkedname=".MyPackage.signed_char.Equal" CodeAddress="16072" CodeSize="17" SrcRow="306">
                        <subj>
                          <instr mname="isAlarm" linkedname=".MyPackage.TAlarmsManager.isAlarm" CodeAddress="16073" CodeSize="9" SrcRow="306">
                            <subj>
                              <instr mname="AlarmsManager" linkedname=".MyPackage.AlarmsManager" CodeAddress="16074" CodeSize="3" SrcRow="306">
                              </instr>
                            </subj>
                            <constv typename="signed_char" value="8" />
                          </instr>
                        </subj>
                        <constv typename="signed_char" value="0" />
                      </instr>
                    </subj>
                    <instr mname="Equal" linkedname=".MyPackage.signed_char.Equal" CodeAddress="16089" CodeSize="13" SrcRow="306">
                      <subj>
                        <instr mname="bOnOff" linkedname=".MyPackage.HP3_Turn.bOnOff" CodeAddress="16090" CodeSize="3" SrcRow="306">
                        </instr>
                      </subj>
                      <constv typename="signed_char" value="1" />
                    </instr>
                  </instr>
                </subj>
                <instr mname="NotEqual" linkedname=".MyPackage.signed_char.NotEqual" CodeAddress="16103" CodeSize="19" SrcRow="306">
                  <subj>
                    <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="16104" CodeSize="11" SrcRow="306">
                      <subj>
                        <instr mname="VDOValue" linkedname=".MyPackage.VDOValue" CodeAddress="16105" CodeSize="3" SrcRow="306">
                        </instr>
                      </subj>
                      <constv typename="signed_char" value="16" />
                    </instr>
                  </subj>
                  <instr mname="bCoCwu" linkedname=".MyPackage.HP3_Turn.bCoCwu" CodeAddress="16116" CodeSize="3" SrcRow="306">
                  </instr>
                </instr>
              </instr>
            </condition>
            <then>
              <instr mname="" CodeAddress="16126" CodeSize="119">
                <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="16126" CodeSize="6" SrcRow="309">
                  <subj>
                    <instr mname="bHP3_isOn" linkedname=".MyPackage.bHP3_isOn" CodeAddress="16126" CodeSize="3" SrcRow="309">
                    </instr>
                  </subj>
                  <constv typename="signed_char" value="1" />
                </instr>
                <if>
                  <condition>
                    <instr mname="Equal" linkedname=".MyPackage.signed_char.Equal" CodeAddress="16132" CodeSize="13" SrcRow="310">
                      <subj>
                        <instr mname="bCoCwu" linkedname=".MyPackage.HP3_Turn.bCoCwu" CodeAddress="16133" CodeSize="3" SrcRow="310">
                        </instr>
                      </subj>
                      <constv typename="signed_char" value="0" />
                    </instr>
                  </condition>
                  <then>
                    <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="16148" CodeSize="14" SrcRow="310">
                      <subj>
                        <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="16148" CodeSize="11" SrcRow="310">
                          <subj>
                            <instr mname="VDOValue" linkedname=".MyPackage.VDOValue" CodeAddress="16149" CodeSize="3" SrcRow="310">
                            </instr>
                          </subj>
                          <constv typename="signed_char" value="16" />
                        </instr>
                      </subj>
                      <constv typename="signed_char" value="1" />
                    </instr>
                  </then>
                  <else>
                    <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="16165" CodeSize="14" SrcRow="311">
                      <subj>
                        <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="16165" CodeSize="11" SrcRow="311">
                          <subj>
                            <instr mname="VDOValue" linkedname=".MyPackage.VDOValue" CodeAddress="16166" CodeSize="3" SrcRow="311">
                            </instr>
                          </subj>
                          <constv typename="signed_char" value="16" />
                        </instr>
                      </subj>
                      <constv typename="signed_char" value="0" />
                    </instr>
                  </else>
                </if>
                <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="16179" CodeSize="14" SrcRow="313">
                  <subj>
                    <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="16179" CodeSize="11" SrcRow="313">
                      <subj>
                        <instr mname="VDOValue" linkedname=".MyPackage.VDOValue" CodeAddress="16180" CodeSize="3" SrcRow="313">
                        </instr>
                      </subj>
                      <constv typename="signed_char" value="8" />
                    </instr>
                  </subj>
                  <constv typename="signed_char" value="1" />
                </instr>
                <if>
                  <condition>
                    <instr mname="GreaterOrEqual" linkedname=".MyPackage.signed_char.GreaterOrEqual" CodeAddress="16193" CodeSize="34" SrcRow="315">
                      <subj>
                        <instr mname="ElapsedSec" linkedname=".MyPackage.TTimerSec.ElapsedSec" CodeAddress="16194" CodeSize="15" SrcRow="315">
                          <subj>
                            <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="16195" CodeSize="11" SrcRow="315">
                              <subj>
                                <instr mname="Comp_Min_Off" linkedname=".MyPackage.Comp_Min_Off" CodeAddress="16196" CodeSize="3" SrcRow="315">
                                </instr>
                              </subj>
                              <constv typename="signed_char" value="2" />
                            </instr>
                          </subj>
                        </instr>
                      </subj>
                      <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="16209" CodeSize="11" SrcRow="315">
                        <subj>
                          <instr mname="ParamVal" linkedname=".MyPackage.ParamVal" CodeAddress="16210" CodeSize="3" SrcRow="315">
                          </instr>
                        </subj>
                        <constv typename="signed_char" value="17" />
                      </instr>
                    </instr>
                  </condition>
                  <then>
                    <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="16230" CodeSize="14" SrcRow="315">
                      <subj>
                        <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="16230" CodeSize="11" SrcRow="315">
                          <subj>
                            <instr mname="VDOValue" linkedname=".MyPackage.VDOValue" CodeAddress="16231" CodeSize="3" SrcRow="315">
                            </instr>
                          </subj>
                          <constv typename="signed_char" value="5" />
                        </instr>
                      </subj>
                      <constv typename="signed_char" value="1" />
                    </instr>
                  </then>
                </if>
                <instr mname="" CodeAddress="16244" CodeSize="1">
                  <instr mname="ExitFunction" CodeAddress="16244" CodeSize="1" SrcRow="316">
                  </instr>
                </instr>
              </instr>
            </then>
            <else>
              <if>
                <condition>
                  <instr mname="or" linkedname=".MyPackage.signed_char.or" CodeAddress="16248" CodeSize="53" SrcRow="318">
                    <subj>
                      <instr mname="GreaterOrEqual" linkedname=".MyPackage.signed_char.GreaterOrEqual" CodeAddress="16249" CodeSize="34" SrcRow="318">
                        <subj>
                          <instr mname="ElapsedSec" linkedname=".MyPackage.TTimerSec.ElapsedSec" CodeAddress="16250" CodeSize="15" SrcRow="318">
                            <subj>
                              <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="16251" CodeSize="11" SrcRow="318">
                                <subj>
                                  <instr mname="Comp_Min_On" linkedname=".MyPackage.Comp_Min_On" CodeAddress="16252" CodeSize="3" SrcRow="318">
                                  </instr>
                                </subj>
                                <constv typename="signed_char" value="2" />
                              </instr>
                            </subj>
                          </instr>
                        </subj>
                        <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="16265" CodeSize="11" SrcRow="318">
                          <subj>
                            <instr mname="ParamVal" linkedname=".MyPackage.ParamVal" CodeAddress="16266" CodeSize="3" SrcRow="318">
                            </instr>
                          </subj>
                          <constv typename="signed_char" value="16" />
                        </instr>
                      </instr>
                    </subj>
                    <instr mname="Equal" linkedname=".MyPackage.signed_char.Equal" CodeAddress="16283" CodeSize="17" SrcRow="318">
                      <subj>
                        <instr mname="isAlarm" linkedname=".MyPackage.TAlarmsManager.isAlarm" CodeAddress="16284" CodeSize="9" SrcRow="318">
                          <subj>
                            <instr mname="AlarmsManager" linkedname=".MyPackage.AlarmsManager" CodeAddress="16285" CodeSize="3" SrcRow="318">
                            </instr>
                          </subj>
                          <constv typename="signed_char" value="7" />
                        </instr>
                      </subj>
                      <constv typename="signed_char" value="1" />
                    </instr>
                  </instr>
                </condition>
                <then>
                  <instr mname="" CodeAddress="16304" CodeSize="110">
                    <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="16304" CodeSize="6" SrcRow="321">
                      <subj>
                        <instr mname="bHP3_isOn" linkedname=".MyPackage.bHP3_isOn" CodeAddress="16304" CodeSize="3" SrcRow="321">
                        </instr>
                      </subj>
                      <constv typename="signed_char" value="0" />
                    </instr>
                    <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="16310" CodeSize="14" SrcRow="322">
                      <subj>
                        <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="16310" CodeSize="11" SrcRow="322">
                          <subj>
                            <instr mname="VDOValue" linkedname=".MyPackage.VDOValue" CodeAddress="16311" CodeSize="3" SrcRow="322">
                            </instr>
                          </subj>
                          <constv typename="signed_char" value="5" />
                        </instr>
                      </subj>
                      <constv typename="signed_char" value="0" />
                    </instr>
                    <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="16324" CodeSize="14" SrcRow="323">
                      <subj>
                        <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="16324" CodeSize="11" SrcRow="323">
                          <subj>
                            <instr mname="VDOValue" linkedname=".MyPackage.VDOValue" CodeAddress="16325" CodeSize="3" SrcRow="323">
                            </instr>
                          </subj>
                          <constv typename="signed_char" value="8" />
                        </instr>
                      </subj>
                      <constv typename="signed_char" value="0" />
                    </instr>
                    <if>
                      <condition>
                        <instr mname="Equal" linkedname=".MyPackage.signed_char.Equal" CodeAddress="16338" CodeSize="23" SrcRow="324">
                          <subj>
                            <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="16339" CodeSize="11" SrcRow="324">
                              <subj>
                                <instr mname="VDOValue" linkedname=".MyPackage.VDOValue" CodeAddress="16340" CodeSize="3" SrcRow="324">
                                </instr>
                              </subj>
                              <constv typename="signed_char" value="16" />
                            </instr>
                          </subj>
                          <instr mname="bCoCwu" linkedname=".MyPackage.HP3_Turn.bCoCwu" CodeAddress="16351" CodeSize="3" SrcRow="324">
                          </instr>
                        </instr>
                      </condition>
                      <then>
                        <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="16364" CodeSize="19" SrcRow="324">
                          <subj>
                            <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="16364" CodeSize="11" SrcRow="324">
                              <subj>
                                <instr mname="VDOValue" linkedname=".MyPackage.VDOValue" CodeAddress="16365" CodeSize="3" SrcRow="324">
                                </instr>
                              </subj>
                              <constv typename="signed_char" value="16" />
                            </instr>
                          </subj>
                          <instr mname="not" linkedname=".MyPackage.signed_char.not" CodeAddress="16375" CodeSize="7" SrcRow="324">
                            <subj>
                              <instr mname="bCoCwu" linkedname=".MyPackage.HP3_Turn.bCoCwu" CodeAddress="16376" CodeSize="3" SrcRow="324">
                              </instr>
                            </subj>
                          </instr>
                        </instr>
                      </then>
                    </if>
                    <if>
                      <condition>
                        <instr mname="Equal" linkedname=".MyPackage.signed_char.Equal" CodeAddress="16383" CodeSize="13" SrcRow="325">
                          <subj>
                            <instr mname="bOnOff" linkedname=".MyPackage.HP3_Turn.bOnOff" CodeAddress="16384" CodeSize="3" SrcRow="325">
                            </instr>
                          </subj>
                          <constv typename="signed_char" value="0" />
                        </instr>
                      </condition>
                      <then>
                        <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="16399" CodeSize="14" SrcRow="325">
                          <subj>
                            <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="16399" CodeSize="11" SrcRow="325">
                              <subj>
                                <instr mname="VDOValue" linkedname=".MyPackage.VDOValue" CodeAddress="16400" CodeSize="3" SrcRow="325">
                                </instr>
                              </subj>
                              <constv typename="signed_char" value="16" />
                            </instr>
                          </subj>
                          <constv typename="signed_char" value="0" />
                        </instr>
                      </then>
                    </if>
                    <instr mname="" CodeAddress="16413" CodeSize="1">
                      <instr mname="ExitFunction" CodeAddress="16413" CodeSize="1" SrcRow="326">
                      </instr>
                    </instr>
                  </instr>
                </then>
              </if>
            </else>
          </if>
        </instr>
      </code>
    </funct>
    <funct name="App_Init" address="16415" pathname=".MyPackage.App_Init" MaxStackCallSz="129" MaxInternalStackSz="37" MaxInternalStackCallPos="main.c:359" ByteSize="0" CodeAddress="16415" CodeSize="474" SrcFile="main.c">
      <type typename="object">
      </type>
      <code>
        <instr mname="" CodeAddress="16427" CodeSize="461">
          <instr mname="AlgoLib_Init" linkedname=".MyPackage.AlgoLib_Init" CodeAddress="16427" CodeSize="3" SrcRow="332">
          </instr>
          <instr mname="Init" linkedname=".MyPackage.TStaticIOManager.Init" CodeAddress="16430" CodeSize="6" SrcRow="333">
            <subj>
              <instr mname="IOManager" linkedname=".MyPackage.IOManager" CodeAddress="16430" CodeSize="3" SrcRow="333">
              </instr>
            </subj>
          </instr>
          <if>
            <condition>
              <instr mname="NotEqual" linkedname=".MyPackage.signed_char.NotEqual" CodeAddress="16436" CodeSize="13" SrcRow="336">
                <subj>
                  <instr mname="ParVersion" linkedname=".MyPackage.ParVersion" CodeAddress="16437" CodeSize="3" SrcRow="336">
                  </instr>
                </subj>
                <constv typename="signed_long" value="1542104695" />
              </instr>
            </condition>
            <then>
              <instr mname="" CodeAddress="16452" CodeSize="182">
                <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="16452" CodeSize="14" SrcRow="337">
                  <subj>
                    <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="16452" CodeSize="11" SrcRow="337">
                      <subj>
                        <instr mname="ParamVal" linkedname=".MyPackage.ParamVal" CodeAddress="16453" CodeSize="3" SrcRow="337">
                        </instr>
                      </subj>
                      <constv typename="signed_char" value="36" />
                    </instr>
                  </subj>
                  <constv typename="signed_char" value="1" />
                </instr>
                <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="16466" CodeSize="10" SrcRow="338">
                  <subj>
                    <instr mname="ParVersion" linkedname=".MyPackage.ParVersion" CodeAddress="16466" CodeSize="3" SrcRow="338">
                    </instr>
                  </subj>
                  <constv typename="signed_long" value="1542104695" />
                </instr>
                <instr mname="EraseSchedules" linkedname=".MyPackage.EraseSchedules" CodeAddress="16476" CodeSize="7" SrcRow="341">
                </instr>
                <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="16483" CodeSize="11" SrcRow="345">
                  <subj>
                    <instr mname="UIResetHistory" linkedname=".MyPackage.UIResetHistory" CodeAddress="16483" CodeSize="6" SrcRow="345">
                    </instr>
                  </subj>
                  <constv typename="signed_char" value="1" />
                </instr>
                <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="16494" CodeSize="14" SrcRow="348">
                  <subj>
                    <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="16494" CodeSize="11" SrcRow="348">
                      <subj>
                        <instr mname="CounterValue" linkedname=".MyPackage.CounterValue" CodeAddress="16495" CodeSize="3" SrcRow="348">
                        </instr>
                      </subj>
                      <constv typename="signed_char" value="0" />
                    </instr>
                  </subj>
                  <constv typename="signed_char" value="0" />
                </instr>
                <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="16508" CodeSize="14" SrcRow="348">
                  <subj>
                    <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="16508" CodeSize="11" SrcRow="348">
                      <subj>
                        <instr mname="CounterValue" linkedname=".MyPackage.CounterValue" CodeAddress="16509" CodeSize="3" SrcRow="348">
                        </instr>
                      </subj>
                      <constv typename="signed_char" value="1" />
                    </instr>
                  </subj>
                  <constv typename="signed_char" value="0" />
                </instr>
                <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="16522" CodeSize="14" SrcRow="348">
                  <subj>
                    <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="16522" CodeSize="11" SrcRow="348">
                      <subj>
                        <instr mname="CounterValue" linkedname=".MyPackage.CounterValue" CodeAddress="16523" CodeSize="3" SrcRow="348">
                        </instr>
                      </subj>
                      <constv typename="signed_char" value="2" />
                    </instr>
                  </subj>
                  <constv typename="signed_char" value="0" />
                </instr>
                <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="16536" CodeSize="14" SrcRow="348">
                  <subj>
                    <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="16536" CodeSize="11" SrcRow="348">
                      <subj>
                        <instr mname="CounterValue" linkedname=".MyPackage.CounterValue" CodeAddress="16537" CodeSize="3" SrcRow="348">
                        </instr>
                      </subj>
                      <constv typename="signed_char" value="3" />
                    </instr>
                  </subj>
                  <constv typename="signed_char" value="0" />
                </instr>
                <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="16550" CodeSize="14" SrcRow="348">
                  <subj>
                    <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="16550" CodeSize="11" SrcRow="348">
                      <subj>
                        <instr mname="CounterValue" linkedname=".MyPackage.CounterValue" CodeAddress="16551" CodeSize="3" SrcRow="348">
                        </instr>
                      </subj>
                      <constv typename="signed_char" value="4" />
                    </instr>
                  </subj>
                  <constv typename="signed_char" value="0" />
                </instr>
                <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="16564" CodeSize="14" SrcRow="348">
                  <subj>
                    <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="16564" CodeSize="11" SrcRow="348">
                      <subj>
                        <instr mname="CounterValue" linkedname=".MyPackage.CounterValue" CodeAddress="16565" CodeSize="3" SrcRow="348">
                        </instr>
                      </subj>
                      <constv typename="signed_char" value="5" />
                    </instr>
                  </subj>
                  <constv typename="signed_char" value="0" />
                </instr>
                <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="16578" CodeSize="14" SrcRow="349">
                  <subj>
                    <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="16578" CodeSize="11" SrcRow="349">
                      <subj>
                        <instr mname="CounterValue" linkedname=".MyPackage.CounterValue" CodeAddress="16579" CodeSize="3" SrcRow="349">
                        </instr>
                      </subj>
                      <constv typename="signed_char" value="6" />
                    </instr>
                  </subj>
                  <constv typename="signed_char" value="0" />
                </instr>
                <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="16592" CodeSize="14" SrcRow="349">
                  <subj>
                    <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="16592" CodeSize="11" SrcRow="349">
                      <subj>
                        <instr mname="CounterValue" linkedname=".MyPackage.CounterValue" CodeAddress="16593" CodeSize="3" SrcRow="349">
                        </instr>
                      </subj>
                      <constv typename="signed_char" value="7" />
                    </instr>
                  </subj>
                  <constv typename="signed_char" value="0" />
                </instr>
                <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="16606" CodeSize="14" SrcRow="349">
                  <subj>
                    <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="16606" CodeSize="11" SrcRow="349">
                      <subj>
                        <instr mname="CounterValue" linkedname=".MyPackage.CounterValue" CodeAddress="16607" CodeSize="3" SrcRow="349">
                        </instr>
                      </subj>
                      <constv typename="signed_char" value="8" />
                    </instr>
                  </subj>
                  <constv typename="signed_char" value="0" />
                </instr>
                <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="16620" CodeSize="14" SrcRow="349">
                  <subj>
                    <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="16620" CodeSize="11" SrcRow="349">
                      <subj>
                        <instr mname="CounterValue" linkedname=".MyPackage.CounterValue" CodeAddress="16621" CodeSize="3" SrcRow="349">
                        </instr>
                      </subj>
                      <constv typename="signed_char" value="9" />
                    </instr>
                  </subj>
                  <constv typename="signed_char" value="0" />
                </instr>
              </instr>
            </then>
          </if>
          <instr mname="Clear" linkedname=".MyPackage.TTimerSec.Clear" CodeAddress="16634" CodeSize="6" SrcRow="355">
            <subj>
              <instr mname="PG1Wait" linkedname=".MyPackage.PG1Wait" CodeAddress="16634" CodeSize="3" SrcRow="355">
              </instr>
            </subj>
          </instr>
          <instr mname="Clear" linkedname=".MyPackage.TTimerSec.Clear" CodeAddress="16640" CodeSize="6" SrcRow="356">
            <subj>
              <instr mname="PasterizationTime" linkedname=".MyPackage.PasterizationTime" CodeAddress="16640" CodeSize="3" SrcRow="356">
              </instr>
            </subj>
          </instr>
          <instr mname="Clear" linkedname=".MyPackage.TTimerSec.Clear" CodeAddress="16646" CodeSize="6" SrcRow="357">
            <subj>
              <instr mname="PasterizationTimeOut" linkedname=".MyPackage.PasterizationTimeOut" CodeAddress="16646" CodeSize="3" SrcRow="357">
              </instr>
            </subj>
          </instr>
          <instr mname="InitComEx" linkedname=".MyPackage.TCom.InitComEx" CodeAddress="16652" CodeSize="43" SrcRow="359">
            <subj>
              <instr mname="Com2" linkedname=".MyPackage.Com2" CodeAddress="16652" CodeSize="3" SrcRow="359">
              </instr>
            </subj>
            <constv typename="signed_char" value="2" />
            <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="16658" CodeSize="11" SrcRow="359">
              <subj>
                <instr mname="Com2BufferRx" linkedname=".MyPackage.Com2BufferRx" CodeAddress="16659" CodeSize="3" SrcRow="359">
                </instr>
              </subj>
              <constv typename="signed_char" value="0" />
            </instr>
            <constv typename="unsigned_char" value="128" />
            <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="16675" CodeSize="11" SrcRow="359">
              <subj>
                <instr mname="Com2BufferTx" linkedname=".MyPackage.Com2BufferTx" CodeAddress="16676" CodeSize="3" SrcRow="359">
                </instr>
              </subj>
              <constv typename="signed_char" value="0" />
            </instr>
            <constv typename="unsigned_char" value="128" />
          </instr>
          <instr mname="Init" linkedname=".MyPackage.TModbusMaster.Init" CodeAddress="16695" CodeSize="17" SrcRow="360">
            <subj>
              <instr mname="Com2" linkedname=".MyPackage.Com2" CodeAddress="16696" CodeSize="3" SrcRow="360">
              </instr>
            </subj>
            <constv typename="signed_short" value="9600" />
            <constv typename="signed_char" value="8" />
          </instr>
          <instr mname="EarlyStart" linkedname=".MyPackage.TTimerSec.EarlyStart" CodeAddress="16712" CodeSize="35" SrcRow="362">
            <subj>
              <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="16712" CodeSize="11" SrcRow="362">
                <subj>
                  <instr mname="Comp_Min_Off" linkedname=".MyPackage.Comp_Min_Off" CodeAddress="16713" CodeSize="3" SrcRow="362">
                  </instr>
                </subj>
                <constv typename="signed_char" value="0" />
              </instr>
            </subj>
            <instr mname="mul" linkedname=".MyPackage.signed_char.mul" CodeAddress="16723" CodeSize="21" SrcRow="362">
              <subj>
                <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="16724" CodeSize="11" SrcRow="362">
                  <subj>
                    <instr mname="ParamVal" linkedname=".MyPackage.ParamVal" CodeAddress="16725" CodeSize="3" SrcRow="362">
                    </instr>
                  </subj>
                  <constv typename="signed_char" value="17" />
                </instr>
              </subj>
              <constv typename="signed_short" value="1000" />
            </instr>
          </instr>
          <instr mname="EarlyStart" linkedname=".MyPackage.TTimerSec.EarlyStart" CodeAddress="16747" CodeSize="35" SrcRow="363">
            <subj>
              <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="16747" CodeSize="11" SrcRow="363">
                <subj>
                  <instr mname="Comp_Min_Off" linkedname=".MyPackage.Comp_Min_Off" CodeAddress="16748" CodeSize="3" SrcRow="363">
                  </instr>
                </subj>
                <constv typename="signed_char" value="1" />
              </instr>
            </subj>
            <instr mname="mul" linkedname=".MyPackage.signed_char.mul" CodeAddress="16758" CodeSize="21" SrcRow="363">
              <subj>
                <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="16759" CodeSize="11" SrcRow="363">
                  <subj>
                    <instr mname="ParamVal" linkedname=".MyPackage.ParamVal" CodeAddress="16760" CodeSize="3" SrcRow="363">
                    </instr>
                  </subj>
                  <constv typename="signed_char" value="17" />
                </instr>
              </subj>
              <constv typename="signed_short" value="1000" />
            </instr>
          </instr>
          <instr mname="EarlyStart" linkedname=".MyPackage.TTimerSec.EarlyStart" CodeAddress="16782" CodeSize="35" SrcRow="364">
            <subj>
              <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="16782" CodeSize="11" SrcRow="364">
                <subj>
                  <instr mname="Comp_Min_Off" linkedname=".MyPackage.Comp_Min_Off" CodeAddress="16783" CodeSize="3" SrcRow="364">
                  </instr>
                </subj>
                <constv typename="signed_char" value="2" />
              </instr>
            </subj>
            <instr mname="mul" linkedname=".MyPackage.signed_char.mul" CodeAddress="16793" CodeSize="21" SrcRow="364">
              <subj>
                <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="16794" CodeSize="11" SrcRow="364">
                  <subj>
                    <instr mname="ParamVal" linkedname=".MyPackage.ParamVal" CodeAddress="16795" CodeSize="3" SrcRow="364">
                    </instr>
                  </subj>
                  <constv typename="signed_char" value="17" />
                </instr>
              </subj>
              <constv typename="signed_short" value="1000" />
            </instr>
          </instr>
          <var name="i" address="12" ByteSize="2" CodeAddress="16817" CodeSize="2" SrcFile="main.c" SrcRow="367">
            <type typename="signed_short">
            </type>
          </var>
          <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="16819" CodeSize="6" SrcRow="368">
            <subj>
              <instr mname="iHPselected" linkedname=".MyPackage.iHPselected" CodeAddress="16819" CodeSize="3" SrcRow="368">
              </instr>
            </subj>
            <constv typename="signed_char" value="-1" />
          </instr>
          <instr mname="for" CodeAddress="16825" CodeSize="61">
            <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="16825" CodeSize="6" SrcRow="369">
              <subj>
                <instr mname="i" linkedname=".MyPackage..i" CodeAddress="16825" CodeSize="3" SrcRow="369">
                </instr>
              </subj>
              <constv typename="signed_char" value="0" />
            </instr>
            <instr mname="LessOrEqual" linkedname=".MyPackage.signed_char.LessOrEqual" CodeAddress="16874" CodeSize="9" SrcRow="369">
              <subj>
                <instr mname="i" linkedname=".MyPackage..i" CodeAddress="16875" CodeSize="3" SrcRow="369">
                </instr>
              </subj>
              <constv typename="signed_char" value="9" />
            </instr>
            <instr mname="sum_set" linkedname=".MyPackage.signed_char.sum_set" CodeAddress="16867" CodeSize="7" SrcRow="369">
              <subj>
                <instr mname="i" linkedname=".MyPackage..i" CodeAddress="16867" CodeSize="3" SrcRow="369">
                </instr>
              </subj>
              <constv typename="signed_char" value="1" />
            </instr>
            <instr mname="" CodeAddress="16834" CodeSize="33">
              <instr mname="Load" linkedname=".MyPackage.THourCounter.Load" CodeAddress="16834" CodeSize="33" SrcRow="371">
                <subj>
                  <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="16834" CodeSize="14" SrcRow="371">
                    <subj>
                      <instr mname="WHCounters" linkedname=".MyPackage.WHCounters" CodeAddress="16835" CodeSize="3" SrcRow="371">
                      </instr>
                    </subj>
                    <instr mname="i" linkedname=".MyPackage..i" CodeAddress="16838" CodeSize="3" SrcRow="371">
                    </instr>
                  </instr>
                </subj>
                <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="16848" CodeSize="14" SrcRow="371">
                  <subj>
                    <instr mname="CounterValue" linkedname=".MyPackage.CounterValue" CodeAddress="16849" CodeSize="3" SrcRow="371">
                    </instr>
                  </subj>
                  <instr mname="i" linkedname=".MyPackage..i" CodeAddress="16852" CodeSize="3" SrcRow="371">
                  </instr>
                </instr>
              </instr>
            </instr>
          </instr>
        </instr>
      </code>
    </funct>
    <funct name="App_Run" address="16889" pathname=".MyPackage.App_Run" MaxStackCallSz="308" MaxInternalStackSz="60" MaxInternalStackCallPos="main.c:509" ByteSize="0" CodeAddress="16889" CodeSize="3638" SrcFile="main.c">
      <type typename="object">
      </type>
      <code>
        <instr mname="" CodeAddress="16901" CodeSize="3625">
          <if>
            <condition>
              <instr mname="Equal" linkedname=".MyPackage.signed_char.Equal" CodeAddress="16901" CodeSize="21" SrcRow="381">
                <subj>
                  <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="16902" CodeSize="11" SrcRow="381">
                    <subj>
                      <instr mname="ParamVal" linkedname=".MyPackage.ParamVal" CodeAddress="16903" CodeSize="3" SrcRow="381">
                      </instr>
                    </subj>
                    <constv typename="signed_char" value="36" />
                  </instr>
                </subj>
                <constv typename="signed_char" value="1" />
              </instr>
            </condition>
            <then>
              <instr mname="" CodeAddress="16925" CodeSize="35">
                <instr mname="InitializeParamVal" linkedname=".MyPackage.InitializeParamVal" CodeAddress="16925" CodeSize="3" SrcRow="382">
                </instr>
                <instr mname="LoadDefault" linkedname=".MyPackage.TStaticIOManager.LoadDefault" CodeAddress="16928" CodeSize="6" SrcRow="383">
                  <subj>
                    <instr mname="IOManager" linkedname=".MyPackage.IOManager" CodeAddress="16928" CodeSize="3" SrcRow="383">
                    </instr>
                  </subj>
                </instr>
                <instr mname="ClearHistory" linkedname=".MyPackage.TEventHistory.ClearHistory" CodeAddress="16934" CodeSize="6" SrcRow="386">
                  <subj>
                    <instr mname="EventHistoryLog" linkedname=".MyPackage.EventHistoryLog" CodeAddress="16934" CodeSize="3" SrcRow="386">
                    </instr>
                  </subj>
                </instr>
                <instr mname="Clear" linkedname=".MyPackage.T7dScheduler.Clear" CodeAddress="16940" CodeSize="6" SrcRow="390">
                  <subj>
                    <instr mname="Scheduler" linkedname=".MyPackage.Scheduler" CodeAddress="16940" CodeSize="3" SrcRow="390">
                    </instr>
                  </subj>
                </instr>
                <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="16946" CodeSize="14" SrcRow="392">
                  <subj>
                    <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="16946" CodeSize="11" SrcRow="392">
                      <subj>
                        <instr mname="ParamVal" linkedname=".MyPackage.ParamVal" CodeAddress="16947" CodeSize="3" SrcRow="392">
                        </instr>
                      </subj>
                      <constv typename="signed_char" value="36" />
                    </instr>
                  </subj>
                  <constv typename="signed_char" value="0" />
                </instr>
              </instr>
            </then>
          </if>
          <instr mname="AlgoLib_Run" linkedname=".MyPackage.AlgoLib_Run" CodeAddress="16960" CodeSize="3" SrcRow="396">
          </instr>
          <instr mname="Run" linkedname=".MyPackage.TStaticIOManager.Run" CodeAddress="16963" CodeSize="6" SrcRow="397">
            <subj>
              <instr mname="IOManager" linkedname=".MyPackage.IOManager" CodeAddress="16963" CodeSize="3" SrcRow="397">
              </instr>
            </subj>
          </instr>
          <instr mname="Run" linkedname=".MyPackage.TModbusMaster.Run" CodeAddress="16969" CodeSize="6" SrcRow="399">
            <subj>
              <instr mname="Com2" linkedname=".MyPackage.Com2" CodeAddress="16969" CodeSize="3" SrcRow="399">
              </instr>
            </subj>
          </instr>
          <if>
            <condition>
              <instr mname="NotEqual" linkedname=".MyPackage.signed_char.NotEqual" CodeAddress="16975" CodeSize="9" SrcRow="401">
                <subj>
                  <instr mname="Status" linkedname=".MyPackage.TModbusMaster.Status" CodeAddress="16976" CodeSize="3" SrcRow="401">
                    <subj>
                      <instr mname="Com2" linkedname=".MyPackage.Com2" CodeAddress="16976" CodeSize="3" SrcRow="401">
                      </instr>
                    </subj>
                  </instr>
                </subj>
                <constv typename="signed_char" value="32" />
              </instr>
            </condition>
            <then>
              <instr mname="" CodeAddress="16987" CodeSize="38">
                <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="16987" CodeSize="20" SrcRow="404">
                  <subj>
                    <instr mname="Moc_inwertera" linkedname=".MyPackage.Moc_inwertera" CodeAddress="16987" CodeSize="3" SrcRow="404">
                    </instr>
                  </subj>
                  <instr mname="div" linkedname=".MyPackage.signed_char.div" CodeAddress="16990" CodeSize="16" SrcRow="404">
                    <subj>
                      <instr mname="ReadAnswerVarShort" linkedname=".MyPackage.TModbusMaster.ReadAnswerVarShort" CodeAddress="16991" CodeSize="10" SrcRow="404">
                        <subj>
                          <instr mname="Com2" linkedname=".MyPackage.Com2" CodeAddress="16993" CodeSize="3" SrcRow="404">
                          </instr>
                        </subj>
                      </instr>
                    </subj>
                    <constv typename="signed_char" value="10" />
                  </instr>
                </instr>
                <instr mname="ReadRequest" linkedname=".MyPackage.TModbusMaster.ReadRequest" CodeAddress="17007" CodeSize="18" SrcRow="405">
                  <subj>
                    <instr mname="Com2" linkedname=".MyPackage.Com2" CodeAddress="17007" CodeSize="3" SrcRow="405">
                    </instr>
                  </subj>
                  <instr mname="SlaveID" linkedname=".MyPackage.SlaveID" CodeAddress="17010" CodeSize="3" SrcRow="405">
                  </instr>
                  <constv typename="signed_char" value="4" />
                  <constv typename="signed_char" value="12" />
                  <constv typename="signed_char" value="1" />
                </instr>
              </instr>
            </then>
          </if>
          <instr mname="set" linkedname=".MyPackage.float.set" CodeAddress="17025" CodeSize="24" SrcRow="410">
            <subj>
              <instr mname="NTC_Temp_CO" linkedname=".MyPackage.NTC_Temp_CO" CodeAddress="17025" CodeSize="3" SrcRow="410">
              </instr>
            </subj>
            <instr mname="IntegerToFloat" linkedname=".MyPackage.IntegerToFloat" CodeAddress="17028" CodeSize="20" SrcRow="410">
              <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="17029" CodeSize="11" SrcRow="410">
                <subj>
                  <instr mname="VAIValue" linkedname=".MyPackage.VAIValue" CodeAddress="17030" CodeSize="3" SrcRow="410">
                  </instr>
                </subj>
                <constv typename="signed_char" value="2" />
              </instr>
              <constv typename="signed_char" value="-1" />
            </instr>
          </instr>
          <instr mname="set" linkedname=".MyPackage.float.set" CodeAddress="17049" CodeSize="24" SrcRow="411">
            <subj>
              <instr mname="NTC_Temp_CWU" linkedname=".MyPackage.NTC_Temp_CWU" CodeAddress="17049" CodeSize="3" SrcRow="411">
              </instr>
            </subj>
            <instr mname="IntegerToFloat" linkedname=".MyPackage.IntegerToFloat" CodeAddress="17052" CodeSize="20" SrcRow="411">
              <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="17053" CodeSize="11" SrcRow="411">
                <subj>
                  <instr mname="VAIValue" linkedname=".MyPackage.VAIValue" CodeAddress="17054" CodeSize="3" SrcRow="411">
                  </instr>
                </subj>
                <constv typename="signed_char" value="4" />
              </instr>
              <constv typename="signed_char" value="-1" />
            </instr>
          </instr>
          <instr mname="set" linkedname=".MyPackage.float.set" CodeAddress="17073" CodeSize="24" SrcRow="412">
            <subj>
              <instr mname="NTC_Temp_Glik" linkedname=".MyPackage.NTC_Temp_Glik" CodeAddress="17073" CodeSize="3" SrcRow="412">
              </instr>
            </subj>
            <instr mname="IntegerToFloat" linkedname=".MyPackage.IntegerToFloat" CodeAddress="17076" CodeSize="20" SrcRow="412">
              <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="17077" CodeSize="11" SrcRow="412">
                <subj>
                  <instr mname="VAIValue" linkedname=".MyPackage.VAIValue" CodeAddress="17078" CodeSize="3" SrcRow="412">
                  </instr>
                </subj>
                <constv typename="signed_char" value="5" />
              </instr>
              <constv typename="signed_char" value="-1" />
            </instr>
          </instr>
          <instr mname="set" linkedname=".MyPackage.float.set" CodeAddress="17097" CodeSize="24" SrcRow="413">
            <subj>
              <instr mname="NTC_Temp_Zewn" linkedname=".MyPackage.NTC_Temp_Zewn" CodeAddress="17097" CodeSize="3" SrcRow="413">
              </instr>
            </subj>
            <instr mname="IntegerToFloat" linkedname=".MyPackage.IntegerToFloat" CodeAddress="17100" CodeSize="20" SrcRow="413">
              <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="17101" CodeSize="11" SrcRow="413">
                <subj>
                  <instr mname="VAIValue" linkedname=".MyPackage.VAIValue" CodeAddress="17102" CodeSize="3" SrcRow="413">
                  </instr>
                </subj>
                <constv typename="signed_char" value="3" />
              </instr>
              <constv typename="signed_char" value="-1" />
            </instr>
          </instr>
          <if>
            <condition>
              <instr mname="LessThan" linkedname=".MyPackage.signed_char.LessThan" CodeAddress="17121" CodeSize="13" SrcRow="415">
                <subj>
                  <instr mname="bFirstRun" linkedname=".MyPackage.bFirstRun" CodeAddress="17122" CodeSize="3" SrcRow="415">
                  </instr>
                </subj>
                <constv typename="signed_short" value="300" />
              </instr>
            </condition>
            <then>
              <instr mname="" CodeAddress="17137" CodeSize="17">
                <instr mname="set" linkedname=".MyPackage.float.set" CodeAddress="17137" CodeSize="8" SrcRow="415">
                  <subj>
                    <instr mname="Y" linkedname=".MyPackage.Y" CodeAddress="17137" CodeSize="3" SrcRow="415">
                    </instr>
                  </subj>
                  <instr mname="BuildingTemperature" linkedname=".MyPackage.BuildingTemperature" CodeAddress="17140" CodeSize="4" SrcRow="415">
                  </instr>
                </instr>
                <instr mname="PostIncr" linkedname=".MyPackage.signed_short.PostIncr" CodeAddress="17145" CodeSize="7" SrcRow="415">
                  <subj>
                    <instr mname="bFirstRun" linkedname=".MyPackage.bFirstRun" CodeAddress="17146" CodeSize="3" SrcRow="415">
                    </instr>
                  </subj>
                </instr>
              </instr>
            </then>
          </if>
          <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="17154" CodeSize="24" SrcRow="416">
            <subj>
              <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="17154" CodeSize="11" SrcRow="416">
                <subj>
                  <instr mname="ParamVal" linkedname=".MyPackage.ParamVal" CodeAddress="17155" CodeSize="3" SrcRow="416">
                  </instr>
                </subj>
                <constv typename="signed_char" value="26" />
              </instr>
            </subj>
            <instr mname="mul" linkedname=".MyPackage.signed_char.mul" CodeAddress="17165" CodeSize="12" SrcRow="416">
              <subj>
                <instr mname="FloatToIntegerRound" linkedname=".MyPackage.FloatToIntegerRound" CodeAddress="17166" CodeSize="8" SrcRow="416">
                  <instr mname="RealBuildingTemperature" linkedname=".MyPackage.RealBuildingTemperature" CodeAddress="17167" CodeSize="4" SrcRow="416">
                  </instr>
                </instr>
              </subj>
              <constv typename="signed_char" value="10" />
            </instr>
          </instr>
          <if>
            <condition>
              <instr mname="Equal" linkedname=".MyPackage.signed_char.Equal" CodeAddress="17178" CodeSize="21" SrcRow="419">
                <subj>
                  <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="17179" CodeSize="11" SrcRow="419">
                    <subj>
                      <instr mname="ParamVal" linkedname=".MyPackage.ParamVal" CodeAddress="17180" CodeSize="3" SrcRow="419">
                      </instr>
                    </subj>
                    <constv typename="signed_char" value="25" />
                  </instr>
                </subj>
                <constv typename="signed_char" value="0" />
              </instr>
            </condition>
            <then>
              <instr mname="" CodeAddress="17202" CodeSize="50">
                <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="17202" CodeSize="11" SrcRow="421">
                  <subj>
                    <instr mname="ActiveSchedules" linkedname=".MyPackage.ActiveSchedules" CodeAddress="17202" CodeSize="3" SrcRow="421">
                    </instr>
                  </subj>
                  <instr mname="CheckSchedule" linkedname=".MyPackage.CheckSchedule" CodeAddress="17205" CodeSize="5" SrcRow="421">
                  </instr>
                </instr>
                <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="17213" CodeSize="13" SrcRow="422">
                  <subj>
                    <instr mname="bTaryfaON" linkedname=".MyPackage.bTaryfaON" CodeAddress="17213" CodeSize="3" SrcRow="422">
                    </instr>
                  </subj>
                  <instr mname="band" linkedname=".MyPackage.signed_char.band" CodeAddress="17216" CodeSize="9" SrcRow="422">
                    <subj>
                      <instr mname="ActiveSchedules" linkedname=".MyPackage.ActiveSchedules" CodeAddress="17217" CodeSize="3" SrcRow="422">
                      </instr>
                    </subj>
                    <constv typename="signed_char" value="1" />
                  </instr>
                </instr>
                <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="17226" CodeSize="13" SrcRow="423">
                  <subj>
                    <instr mname="bPcwuON" linkedname=".MyPackage.bPcwuON" CodeAddress="17226" CodeSize="3" SrcRow="423">
                    </instr>
                  </subj>
                  <instr mname="band" linkedname=".MyPackage.signed_char.band" CodeAddress="17229" CodeSize="9" SrcRow="423">
                    <subj>
                      <instr mname="ActiveSchedules" linkedname=".MyPackage.ActiveSchedules" CodeAddress="17230" CodeSize="3" SrcRow="423">
                      </instr>
                    </subj>
                    <constv typename="signed_char" value="2" />
                  </instr>
                </instr>
                <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="17239" CodeSize="13" SrcRow="424">
                  <subj>
                    <instr mname="bPasteryzuj" linkedname=".MyPackage.bPasteryzuj" CodeAddress="17239" CodeSize="3" SrcRow="424">
                    </instr>
                  </subj>
                  <instr mname="band" linkedname=".MyPackage.signed_char.band" CodeAddress="17242" CodeSize="9" SrcRow="424">
                    <subj>
                      <instr mname="ActiveSchedules" linkedname=".MyPackage.ActiveSchedules" CodeAddress="17243" CodeSize="3" SrcRow="424">
                      </instr>
                    </subj>
                    <constv typename="signed_char" value="4" />
                  </instr>
                </instr>
              </instr>
            </then>
            <else>
              <instr mname="" CodeAddress="17255" CodeSize="45">
                <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="17255" CodeSize="16" SrcRow="428">
                  <subj>
                    <instr mname="bTaryfaON" linkedname=".MyPackage.bTaryfaON" CodeAddress="17255" CodeSize="3" SrcRow="428">
                    </instr>
                  </subj>
                  <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="17258" CodeSize="11" SrcRow="428">
                    <subj>
                      <instr mname="VDIValue" linkedname=".MyPackage.VDIValue" CodeAddress="17259" CodeSize="3" SrcRow="428">
                      </instr>
                    </subj>
                    <constv typename="signed_char" value="7" />
                  </instr>
                </instr>
                <if>
                  <condition>
                    <instr mname="Equal" linkedname=".MyPackage.signed_char.Equal" CodeAddress="17271" CodeSize="20" SrcRow="430">
                      <subj>
                        <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="17272" CodeSize="11" SrcRow="430">
                          <subj>
                            <instr mname="VDIValue" linkedname=".MyPackage.VDIValue" CodeAddress="17273" CodeSize="3" SrcRow="430">
                            </instr>
                          </subj>
                          <constv typename="signed_char" value="8" />
                        </instr>
                      </subj>
                      <constv typename="signed_char" value="1" />
                    </instr>
                  </condition>
                  <then>
                    <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="17294" CodeSize="6" SrcRow="430">
                      <subj>
                        <instr mname="bPasteryzuj" linkedname=".MyPackage.bPasteryzuj" CodeAddress="17294" CodeSize="3" SrcRow="430">
                        </instr>
                      </subj>
                      <constv typename="signed_char" value="1" />
                    </instr>
                  </then>
                </if>
              </instr>
            </else>
          </if>
          <if>
            <condition>
              <instr mname="Equal" linkedname=".MyPackage.signed_char.Equal" CodeAddress="17300" CodeSize="21" SrcRow="435">
                <subj>
                  <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="17301" CodeSize="11" SrcRow="435">
                    <subj>
                      <instr mname="ParamVal" linkedname=".MyPackage.ParamVal" CodeAddress="17302" CodeSize="3" SrcRow="435">
                      </instr>
                    </subj>
                    <constv typename="signed_char" value="6" />
                  </instr>
                </subj>
                <constv typename="signed_char" value="1" />
              </instr>
            </condition>
            <then>
              <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="17324" CodeSize="20" SrcRow="435">
                <subj>
                  <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="17324" CodeSize="11" SrcRow="435">
                    <subj>
                      <instr mname="ParamVal" linkedname=".MyPackage.ParamVal" CodeAddress="17325" CodeSize="3" SrcRow="435">
                      </instr>
                    </subj>
                    <constv typename="signed_char" value="1" />
                  </instr>
                </subj>
                <instr mname="FloatToIntegerRound" linkedname=".MyPackage.FloatToIntegerRound" CodeAddress="17335" CodeSize="8" SrcRow="435">
                  <instr mname="COTemperature" linkedname=".MyPackage.COTemperature" CodeAddress="17336" CodeSize="4" SrcRow="435">
                  </instr>
                </instr>
              </instr>
            </then>
            <else>
              <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="17347" CodeSize="20" SrcRow="436">
                <subj>
                  <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="17347" CodeSize="11" SrcRow="436">
                    <subj>
                      <instr mname="ParamVal" linkedname=".MyPackage.ParamVal" CodeAddress="17348" CodeSize="3" SrcRow="436">
                      </instr>
                    </subj>
                    <constv typename="signed_char" value="5" />
                  </instr>
                </subj>
                <instr mname="FloatToIntegerRound" linkedname=".MyPackage.FloatToIntegerRound" CodeAddress="17358" CodeSize="8" SrcRow="436">
                  <instr mname="BuildingTemperature" linkedname=".MyPackage.BuildingTemperature" CodeAddress="17359" CodeSize="4" SrcRow="436">
                  </instr>
                </instr>
              </instr>
            </else>
          </if>
          <if>
            <condition>
              <instr mname="GreaterThan" linkedname=".MyPackage.signed_char.GreaterThan" CodeAddress="17367" CodeSize="32" SrcRow="438">
                <subj>
                  <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="17368" CodeSize="11" SrcRow="438">
                    <subj>
                      <instr mname="ParamVal" linkedname=".MyPackage.ParamVal" CodeAddress="17369" CodeSize="3" SrcRow="438">
                      </instr>
                    </subj>
                    <constv typename="signed_char" value="1" />
                  </instr>
                </subj>
                <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="17381" CodeSize="11" SrcRow="438">
                  <subj>
                    <instr mname="ParamVal" linkedname=".MyPackage.ParamVal" CodeAddress="17382" CodeSize="3" SrcRow="438">
                    </instr>
                  </subj>
                  <constv typename="signed_char" value="22" />
                </instr>
              </instr>
            </condition>
            <then>
              <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="17402" CodeSize="25" SrcRow="438">
                <subj>
                  <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="17402" CodeSize="11" SrcRow="438">
                    <subj>
                      <instr mname="ParamVal" linkedname=".MyPackage.ParamVal" CodeAddress="17403" CodeSize="3" SrcRow="438">
                      </instr>
                    </subj>
                    <constv typename="signed_char" value="1" />
                  </instr>
                </subj>
                <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="17413" CodeSize="11" SrcRow="438">
                  <subj>
                    <instr mname="ParamVal" linkedname=".MyPackage.ParamVal" CodeAddress="17414" CodeSize="3" SrcRow="438">
                    </instr>
                  </subj>
                  <constv typename="signed_char" value="22" />
                </instr>
              </instr>
            </then>
          </if>
          <if>
            <condition>
              <instr mname="GreaterThan" linkedname=".MyPackage.signed_char.GreaterThan" CodeAddress="17427" CodeSize="32" SrcRow="439">
                <subj>
                  <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="17428" CodeSize="11" SrcRow="439">
                    <subj>
                      <instr mname="ParamVal" linkedname=".MyPackage.ParamVal" CodeAddress="17429" CodeSize="3" SrcRow="439">
                      </instr>
                    </subj>
                    <constv typename="signed_char" value="2" />
                  </instr>
                </subj>
                <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="17441" CodeSize="11" SrcRow="439">
                  <subj>
                    <instr mname="ParamVal" linkedname=".MyPackage.ParamVal" CodeAddress="17442" CodeSize="3" SrcRow="439">
                    </instr>
                  </subj>
                  <constv typename="signed_char" value="23" />
                </instr>
              </instr>
            </condition>
            <then>
              <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="17462" CodeSize="25" SrcRow="439">
                <subj>
                  <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="17462" CodeSize="11" SrcRow="439">
                    <subj>
                      <instr mname="ParamVal" linkedname=".MyPackage.ParamVal" CodeAddress="17463" CodeSize="3" SrcRow="439">
                      </instr>
                    </subj>
                    <constv typename="signed_char" value="2" />
                  </instr>
                </subj>
                <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="17473" CodeSize="11" SrcRow="439">
                  <subj>
                    <instr mname="ParamVal" linkedname=".MyPackage.ParamVal" CodeAddress="17474" CodeSize="3" SrcRow="439">
                    </instr>
                  </subj>
                  <constv typename="signed_char" value="23" />
                </instr>
              </instr>
            </then>
          </if>
          <if>
            <condition>
              <instr mname="GreaterThan" linkedname=".MyPackage.signed_char.GreaterThan" CodeAddress="17487" CodeSize="32" SrcRow="441">
                <subj>
                  <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="17488" CodeSize="11" SrcRow="441">
                    <subj>
                      <instr mname="ParamVal" linkedname=".MyPackage.ParamVal" CodeAddress="17489" CodeSize="3" SrcRow="441">
                      </instr>
                    </subj>
                    <constv typename="signed_char" value="19" />
                  </instr>
                </subj>
                <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="17501" CodeSize="11" SrcRow="441">
                  <subj>
                    <instr mname="ParamVal" linkedname=".MyPackage.ParamVal" CodeAddress="17502" CodeSize="3" SrcRow="441">
                    </instr>
                  </subj>
                  <constv typename="signed_char" value="18" />
                </instr>
              </instr>
            </condition>
            <then>
              <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="17522" CodeSize="25" SrcRow="441">
                <subj>
                  <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="17522" CodeSize="11" SrcRow="441">
                    <subj>
                      <instr mname="ParamVal" linkedname=".MyPackage.ParamVal" CodeAddress="17523" CodeSize="3" SrcRow="441">
                      </instr>
                    </subj>
                    <constv typename="signed_char" value="18" />
                  </instr>
                </subj>
                <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="17533" CodeSize="11" SrcRow="441">
                  <subj>
                    <instr mname="ParamVal" linkedname=".MyPackage.ParamVal" CodeAddress="17534" CodeSize="3" SrcRow="441">
                    </instr>
                  </subj>
                  <constv typename="signed_char" value="19" />
                </instr>
              </instr>
            </then>
          </if>
          <if>
            <condition>
              <instr mname="Equal" linkedname=".MyPackage.signed_char.Equal" CodeAddress="17547" CodeSize="20" SrcRow="443">
                <subj>
                  <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="17548" CodeSize="11" SrcRow="443">
                    <subj>
                      <instr mname="VDOValue" linkedname=".MyPackage.VDOValue" CodeAddress="17549" CodeSize="3" SrcRow="443">
                      </instr>
                    </subj>
                    <constv typename="signed_char" value="3" />
                  </instr>
                </subj>
                <constv typename="signed_char" value="0" />
              </instr>
            </condition>
            <then>
              <instr mname="" CodeAddress="17570" CodeSize="46">
                <if>
                  <condition>
                    <instr mname="isClear" linkedname=".MyPackage.TTimerSec.isClear" CodeAddress="17570" CodeSize="15" SrcRow="443">
                      <subj>
                        <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="17571" CodeSize="11" SrcRow="443">
                          <subj>
                            <instr mname="Comp_Min_Off" linkedname=".MyPackage.Comp_Min_Off" CodeAddress="17572" CodeSize="3" SrcRow="443">
                            </instr>
                          </subj>
                          <constv typename="signed_char" value="0" />
                        </instr>
                      </subj>
                    </instr>
                  </condition>
                  <then>
                    <instr mname="Start" linkedname=".MyPackage.TTimerSec.Start" CodeAddress="17588" CodeSize="14" SrcRow="443">
                      <subj>
                        <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="17588" CodeSize="11" SrcRow="443">
                          <subj>
                            <instr mname="Comp_Min_Off" linkedname=".MyPackage.Comp_Min_Off" CodeAddress="17589" CodeSize="3" SrcRow="443">
                            </instr>
                          </subj>
                          <constv typename="signed_char" value="0" />
                        </instr>
                      </subj>
                    </instr>
                  </then>
                </if>
                <instr mname="Clear" linkedname=".MyPackage.TTimerSec.Clear" CodeAddress="17602" CodeSize="14" SrcRow="443">
                  <subj>
                    <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="17602" CodeSize="11" SrcRow="443">
                      <subj>
                        <instr mname="Comp_Min_On" linkedname=".MyPackage.Comp_Min_On" CodeAddress="17603" CodeSize="3" SrcRow="443">
                        </instr>
                      </subj>
                      <constv typename="signed_char" value="0" />
                    </instr>
                  </subj>
                </instr>
              </instr>
            </then>
            <else>
              <instr mname="" CodeAddress="17619" CodeSize="46">
                <if>
                  <condition>
                    <instr mname="isClear" linkedname=".MyPackage.TTimerSec.isClear" CodeAddress="17619" CodeSize="15" SrcRow="444">
                      <subj>
                        <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="17620" CodeSize="11" SrcRow="444">
                          <subj>
                            <instr mname="Comp_Min_On" linkedname=".MyPackage.Comp_Min_On" CodeAddress="17621" CodeSize="3" SrcRow="444">
                            </instr>
                          </subj>
                          <constv typename="signed_char" value="0" />
                        </instr>
                      </subj>
                    </instr>
                  </condition>
                  <then>
                    <instr mname="Start" linkedname=".MyPackage.TTimerSec.Start" CodeAddress="17637" CodeSize="14" SrcRow="444">
                      <subj>
                        <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="17637" CodeSize="11" SrcRow="444">
                          <subj>
                            <instr mname="Comp_Min_On" linkedname=".MyPackage.Comp_Min_On" CodeAddress="17638" CodeSize="3" SrcRow="444">
                            </instr>
                          </subj>
                          <constv typename="signed_char" value="0" />
                        </instr>
                      </subj>
                    </instr>
                  </then>
                </if>
                <instr mname="Clear" linkedname=".MyPackage.TTimerSec.Clear" CodeAddress="17651" CodeSize="14" SrcRow="444">
                  <subj>
                    <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="17651" CodeSize="11" SrcRow="444">
                      <subj>
                        <instr mname="Comp_Min_Off" linkedname=".MyPackage.Comp_Min_Off" CodeAddress="17652" CodeSize="3" SrcRow="444">
                        </instr>
                      </subj>
                      <constv typename="signed_char" value="0" />
                    </instr>
                  </subj>
                </instr>
              </instr>
            </else>
          </if>
          <if>
            <condition>
              <instr mname="Equal" linkedname=".MyPackage.signed_char.Equal" CodeAddress="17665" CodeSize="20" SrcRow="445">
                <subj>
                  <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="17666" CodeSize="11" SrcRow="445">
                    <subj>
                      <instr mname="VDOValue" linkedname=".MyPackage.VDOValue" CodeAddress="17667" CodeSize="3" SrcRow="445">
                      </instr>
                    </subj>
                    <constv typename="signed_char" value="4" />
                  </instr>
                </subj>
                <constv typename="signed_char" value="0" />
              </instr>
            </condition>
            <then>
              <instr mname="" CodeAddress="17688" CodeSize="46">
                <if>
                  <condition>
                    <instr mname="isClear" linkedname=".MyPackage.TTimerSec.isClear" CodeAddress="17688" CodeSize="15" SrcRow="445">
                      <subj>
                        <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="17689" CodeSize="11" SrcRow="445">
                          <subj>
                            <instr mname="Comp_Min_Off" linkedname=".MyPackage.Comp_Min_Off" CodeAddress="17690" CodeSize="3" SrcRow="445">
                            </instr>
                          </subj>
                          <constv typename="signed_char" value="1" />
                        </instr>
                      </subj>
                    </instr>
                  </condition>
                  <then>
                    <instr mname="Start" linkedname=".MyPackage.TTimerSec.Start" CodeAddress="17706" CodeSize="14" SrcRow="445">
                      <subj>
                        <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="17706" CodeSize="11" SrcRow="445">
                          <subj>
                            <instr mname="Comp_Min_Off" linkedname=".MyPackage.Comp_Min_Off" CodeAddress="17707" CodeSize="3" SrcRow="445">
                            </instr>
                          </subj>
                          <constv typename="signed_char" value="1" />
                        </instr>
                      </subj>
                    </instr>
                  </then>
                </if>
                <instr mname="Clear" linkedname=".MyPackage.TTimerSec.Clear" CodeAddress="17720" CodeSize="14" SrcRow="445">
                  <subj>
                    <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="17720" CodeSize="11" SrcRow="445">
                      <subj>
                        <instr mname="Comp_Min_On" linkedname=".MyPackage.Comp_Min_On" CodeAddress="17721" CodeSize="3" SrcRow="445">
                        </instr>
                      </subj>
                      <constv typename="signed_char" value="1" />
                    </instr>
                  </subj>
                </instr>
              </instr>
            </then>
            <else>
              <instr mname="" CodeAddress="17737" CodeSize="46">
                <if>
                  <condition>
                    <instr mname="isClear" linkedname=".MyPackage.TTimerSec.isClear" CodeAddress="17737" CodeSize="15" SrcRow="446">
                      <subj>
                        <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="17738" CodeSize="11" SrcRow="446">
                          <subj>
                            <instr mname="Comp_Min_On" linkedname=".MyPackage.Comp_Min_On" CodeAddress="17739" CodeSize="3" SrcRow="446">
                            </instr>
                          </subj>
                          <constv typename="signed_char" value="1" />
                        </instr>
                      </subj>
                    </instr>
                  </condition>
                  <then>
                    <instr mname="Start" linkedname=".MyPackage.TTimerSec.Start" CodeAddress="17755" CodeSize="14" SrcRow="446">
                      <subj>
                        <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="17755" CodeSize="11" SrcRow="446">
                          <subj>
                            <instr mname="Comp_Min_On" linkedname=".MyPackage.Comp_Min_On" CodeAddress="17756" CodeSize="3" SrcRow="446">
                            </instr>
                          </subj>
                          <constv typename="signed_char" value="1" />
                        </instr>
                      </subj>
                    </instr>
                  </then>
                </if>
                <instr mname="Clear" linkedname=".MyPackage.TTimerSec.Clear" CodeAddress="17769" CodeSize="14" SrcRow="446">
                  <subj>
                    <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="17769" CodeSize="11" SrcRow="446">
                      <subj>
                        <instr mname="Comp_Min_Off" linkedname=".MyPackage.Comp_Min_Off" CodeAddress="17770" CodeSize="3" SrcRow="446">
                        </instr>
                      </subj>
                      <constv typename="signed_char" value="1" />
                    </instr>
                  </subj>
                </instr>
              </instr>
            </else>
          </if>
          <if>
            <condition>
              <instr mname="Equal" linkedname=".MyPackage.signed_char.Equal" CodeAddress="17783" CodeSize="20" SrcRow="447">
                <subj>
                  <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="17784" CodeSize="11" SrcRow="447">
                    <subj>
                      <instr mname="VDOValue" linkedname=".MyPackage.VDOValue" CodeAddress="17785" CodeSize="3" SrcRow="447">
                      </instr>
                    </subj>
                    <constv typename="signed_char" value="5" />
                  </instr>
                </subj>
                <constv typename="signed_char" value="0" />
              </instr>
            </condition>
            <then>
              <instr mname="" CodeAddress="17806" CodeSize="46">
                <if>
                  <condition>
                    <instr mname="isClear" linkedname=".MyPackage.TTimerSec.isClear" CodeAddress="17806" CodeSize="15" SrcRow="447">
                      <subj>
                        <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="17807" CodeSize="11" SrcRow="447">
                          <subj>
                            <instr mname="Comp_Min_Off" linkedname=".MyPackage.Comp_Min_Off" CodeAddress="17808" CodeSize="3" SrcRow="447">
                            </instr>
                          </subj>
                          <constv typename="signed_char" value="2" />
                        </instr>
                      </subj>
                    </instr>
                  </condition>
                  <then>
                    <instr mname="Start" linkedname=".MyPackage.TTimerSec.Start" CodeAddress="17824" CodeSize="14" SrcRow="447">
                      <subj>
                        <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="17824" CodeSize="11" SrcRow="447">
                          <subj>
                            <instr mname="Comp_Min_Off" linkedname=".MyPackage.Comp_Min_Off" CodeAddress="17825" CodeSize="3" SrcRow="447">
                            </instr>
                          </subj>
                          <constv typename="signed_char" value="2" />
                        </instr>
                      </subj>
                    </instr>
                  </then>
                </if>
                <instr mname="Clear" linkedname=".MyPackage.TTimerSec.Clear" CodeAddress="17838" CodeSize="14" SrcRow="447">
                  <subj>
                    <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="17838" CodeSize="11" SrcRow="447">
                      <subj>
                        <instr mname="Comp_Min_On" linkedname=".MyPackage.Comp_Min_On" CodeAddress="17839" CodeSize="3" SrcRow="447">
                        </instr>
                      </subj>
                      <constv typename="signed_char" value="2" />
                    </instr>
                  </subj>
                </instr>
              </instr>
            </then>
            <else>
              <instr mname="" CodeAddress="17855" CodeSize="46">
                <if>
                  <condition>
                    <instr mname="isClear" linkedname=".MyPackage.TTimerSec.isClear" CodeAddress="17855" CodeSize="15" SrcRow="448">
                      <subj>
                        <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="17856" CodeSize="11" SrcRow="448">
                          <subj>
                            <instr mname="Comp_Min_On" linkedname=".MyPackage.Comp_Min_On" CodeAddress="17857" CodeSize="3" SrcRow="448">
                            </instr>
                          </subj>
                          <constv typename="signed_char" value="2" />
                        </instr>
                      </subj>
                    </instr>
                  </condition>
                  <then>
                    <instr mname="Start" linkedname=".MyPackage.TTimerSec.Start" CodeAddress="17873" CodeSize="14" SrcRow="448">
                      <subj>
                        <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="17873" CodeSize="11" SrcRow="448">
                          <subj>
                            <instr mname="Comp_Min_On" linkedname=".MyPackage.Comp_Min_On" CodeAddress="17874" CodeSize="3" SrcRow="448">
                            </instr>
                          </subj>
                          <constv typename="signed_char" value="2" />
                        </instr>
                      </subj>
                    </instr>
                  </then>
                </if>
                <instr mname="Clear" linkedname=".MyPackage.TTimerSec.Clear" CodeAddress="17887" CodeSize="14" SrcRow="448">
                  <subj>
                    <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="17887" CodeSize="11" SrcRow="448">
                      <subj>
                        <instr mname="Comp_Min_Off" linkedname=".MyPackage.Comp_Min_Off" CodeAddress="17888" CodeSize="3" SrcRow="448">
                        </instr>
                      </subj>
                      <constv typename="signed_char" value="2" />
                    </instr>
                  </subj>
                </instr>
              </instr>
            </else>
          </if>
          <if>
            <condition>
              <instr mname="or" linkedname=".MyPackage.signed_char.or" CodeAddress="17901" CodeSize="62" SrcRow="452">
                <subj>
                  <instr mname="or" linkedname=".MyPackage.signed_char.or" CodeAddress="17902" CodeSize="36" SrcRow="452">
                    <subj>
                      <instr mname="Equal" linkedname=".MyPackage.signed_char.Equal" CodeAddress="17903" CodeSize="21" SrcRow="452">
                        <subj>
                          <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="17904" CodeSize="11" SrcRow="452">
                            <subj>
                              <instr mname="ParamVal" linkedname=".MyPackage.ParamVal" CodeAddress="17905" CodeSize="3" SrcRow="452">
                              </instr>
                            </subj>
                            <constv typename="signed_char" value="9" />
                          </instr>
                        </subj>
                        <constv typename="signed_char" value="0" />
                      </instr>
                    </subj>
                    <instr mname="Equal" linkedname=".MyPackage.signed_char.Equal" CodeAddress="17924" CodeSize="13" SrcRow="453">
                      <subj>
                        <instr mname="bTaryfaON" linkedname=".MyPackage.bTaryfaON" CodeAddress="17925" CodeSize="3" SrcRow="453">
                        </instr>
                      </subj>
                      <constv typename="signed_char" value="1" />
                    </instr>
                  </instr>
                </subj>
                <instr mname="GreaterOrEqual" linkedname=".MyPackage.signed_char.GreaterOrEqual" CodeAddress="17938" CodeSize="24" SrcRow="454">
                  <subj>
                    <instr mname="Moc_inwertera" linkedname=".MyPackage.Moc_inwertera" CodeAddress="17939" CodeSize="3" SrcRow="454">
                    </instr>
                  </subj>
                  <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="17944" CodeSize="11" SrcRow="454">
                    <subj>
                      <instr mname="ParamVal" linkedname=".MyPackage.ParamVal" CodeAddress="17945" CodeSize="3" SrcRow="454">
                      </instr>
                    </subj>
                    <constv typename="signed_char" value="28" />
                  </instr>
                </instr>
              </instr>
            </condition>
            <then>
              <instr mname="" CodeAddress="17966" CodeSize="252">
                <if>
                  <condition>
                    <instr mname="or" linkedname=".MyPackage.signed_char.or" CodeAddress="17966" CodeSize="104" SrcRow="456">
                      <subj>
                        <instr mname="LessThan" linkedname=".MyPackage.float.LessThan" CodeAddress="17967" CodeSize="51" SrcRow="456">
                          <subj>
                            <instr mname="NTC_Temp_CWU" linkedname=".MyPackage.NTC_Temp_CWU" CodeAddress="17968" CodeSize="3" SrcRow="456">
                            </instr>
                          </subj>
                          <instr mname="sub" linkedname=".MyPackage.signed_char.sub" CodeAddress="17973" CodeSize="28" SrcRow="456">
                            <subj>
                              <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="17974" CodeSize="11" SrcRow="456">
                                <subj>
                                  <instr mname="ParamVal" linkedname=".MyPackage.ParamVal" CodeAddress="17975" CodeSize="3" SrcRow="456">
                                  </instr>
                                </subj>
                                <constv typename="signed_char" value="2" />
                              </instr>
                            </subj>
                            <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="17987" CodeSize="11" SrcRow="456">
                              <subj>
                                <instr mname="ParamVal" linkedname=".MyPackage.ParamVal" CodeAddress="17988" CodeSize="3" SrcRow="456">
                                </instr>
                              </subj>
                              <constv typename="signed_char" value="10" />
                            </instr>
                          </instr>
                        </instr>
                      </subj>
                      <instr mname="" CodeAddress="18018" CodeSize="51">
                        <instr mname="and" linkedname=".MyPackage.signed_char.and" CodeAddress="18018" CodeSize="51" SrcRow="456">
                          <subj>
                            <instr mname="LessThan" linkedname=".MyPackage.float.LessThan" CodeAddress="18019" CodeSize="36" SrcRow="456">
                              <subj>
                                <instr mname="NTC_Temp_CWU" linkedname=".MyPackage.NTC_Temp_CWU" CodeAddress="18020" CodeSize="3" SrcRow="456">
                                </instr>
                              </subj>
                              <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="18025" CodeSize="11" SrcRow="456">
                                <subj>
                                  <instr mname="ParamVal" linkedname=".MyPackage.ParamVal" CodeAddress="18026" CodeSize="3" SrcRow="456">
                                  </instr>
                                </subj>
                                <constv typename="signed_char" value="2" />
                              </instr>
                            </instr>
                          </subj>
                          <instr mname="Equal" linkedname=".MyPackage.signed_char.Equal" CodeAddress="18055" CodeSize="13" SrcRow="456">
                            <subj>
                              <instr mname="Hist_od_CWU" linkedname=".MyPackage.Hist_od_CWU" CodeAddress="18056" CodeSize="3" SrcRow="456">
                              </instr>
                            </subj>
                            <constv typename="signed_char" value="0" />
                          </instr>
                        </instr>
                      </instr>
                    </instr>
                  </condition>
                  <then>
                    <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="18073" CodeSize="6" SrcRow="456">
                      <subj>
                        <instr mname="bCwuON" linkedname=".MyPackage.bCwuON" CodeAddress="18073" CodeSize="3" SrcRow="456">
                        </instr>
                      </subj>
                      <constv typename="signed_char" value="1" />
                    </instr>
                  </then>
                  <else>
                    <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="18082" CodeSize="6" SrcRow="457">
                      <subj>
                        <instr mname="bCwuON" linkedname=".MyPackage.bCwuON" CodeAddress="18082" CodeSize="3" SrcRow="457">
                        </instr>
                      </subj>
                      <constv typename="signed_char" value="0" />
                    </instr>
                  </else>
                </if>
                <if>
                  <condition>
                    <instr mname="or" linkedname=".MyPackage.signed_char.or" CodeAddress="18088" CodeSize="112" SrcRow="458">
                      <subj>
                        <instr mname="GreaterOrEqual" linkedname=".MyPackage.float.GreaterOrEqual" CodeAddress="18089" CodeSize="40" SrcRow="458">
                          <subj>
                            <instr mname="NTC_Temp_CWU" linkedname=".MyPackage.NTC_Temp_CWU" CodeAddress="18090" CodeSize="3" SrcRow="458">
                            </instr>
                          </subj>
                          <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="18095" CodeSize="11" SrcRow="458">
                            <subj>
                              <instr mname="ParamVal" linkedname=".MyPackage.ParamVal" CodeAddress="18096" CodeSize="3" SrcRow="458">
                              </instr>
                            </subj>
                            <constv typename="signed_char" value="2" />
                          </instr>
                        </instr>
                      </subj>
                      <instr mname="" CodeAddress="18129" CodeSize="70">
                        <instr mname="and" linkedname=".MyPackage.signed_char.and" CodeAddress="18129" CodeSize="70" SrcRow="458">
                          <subj>
                            <instr mname="GreaterThan" linkedname=".MyPackage.float.GreaterThan" CodeAddress="18130" CodeSize="55" SrcRow="458">
                              <subj>
                                <instr mname="NTC_Temp_CWU" linkedname=".MyPackage.NTC_Temp_CWU" CodeAddress="18131" CodeSize="3" SrcRow="458">
                                </instr>
                              </subj>
                              <instr mname="sub" linkedname=".MyPackage.signed_char.sub" CodeAddress="18136" CodeSize="28" SrcRow="458">
                                <subj>
                                  <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="18137" CodeSize="11" SrcRow="458">
                                    <subj>
                                      <instr mname="ParamVal" linkedname=".MyPackage.ParamVal" CodeAddress="18138" CodeSize="3" SrcRow="458">
                                      </instr>
                                    </subj>
                                    <constv typename="signed_char" value="2" />
                                  </instr>
                                </subj>
                                <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="18150" CodeSize="11" SrcRow="458">
                                  <subj>
                                    <instr mname="ParamVal" linkedname=".MyPackage.ParamVal" CodeAddress="18151" CodeSize="3" SrcRow="458">
                                    </instr>
                                  </subj>
                                  <constv typename="signed_char" value="10" />
                                </instr>
                              </instr>
                            </instr>
                          </subj>
                          <instr mname="Equal" linkedname=".MyPackage.signed_char.Equal" CodeAddress="18185" CodeSize="13" SrcRow="458">
                            <subj>
                              <instr mname="Hist_od_CWU" linkedname=".MyPackage.Hist_od_CWU" CodeAddress="18186" CodeSize="3" SrcRow="458">
                              </instr>
                            </subj>
                            <constv typename="signed_char" value="1" />
                          </instr>
                        </instr>
                      </instr>
                    </instr>
                  </condition>
                  <then>
                    <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="18203" CodeSize="6" SrcRow="458">
                      <subj>
                        <instr mname="Hist_od_CWU" linkedname=".MyPackage.Hist_od_CWU" CodeAddress="18203" CodeSize="3" SrcRow="458">
                        </instr>
                      </subj>
                      <constv typename="signed_char" value="1" />
                    </instr>
                  </then>
                  <else>
                    <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="18212" CodeSize="6" SrcRow="459">
                      <subj>
                        <instr mname="Hist_od_CWU" linkedname=".MyPackage.Hist_od_CWU" CodeAddress="18212" CodeSize="3" SrcRow="459">
                        </instr>
                      </subj>
                      <constv typename="signed_char" value="0" />
                    </instr>
                  </else>
                </if>
              </instr>
            </then>
            <else>
              <instr mname="" CodeAddress="18221" CodeSize="12">
                <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="18221" CodeSize="6" SrcRow="460">
                  <subj>
                    <instr mname="bCwuON" linkedname=".MyPackage.bCwuON" CodeAddress="18221" CodeSize="3" SrcRow="460">
                    </instr>
                  </subj>
                  <constv typename="signed_char" value="0" />
                </instr>
                <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="18227" CodeSize="6" SrcRow="460">
                  <subj>
                    <instr mname="Hist_od_CWU" linkedname=".MyPackage.Hist_od_CWU" CodeAddress="18227" CodeSize="3" SrcRow="460">
                    </instr>
                  </subj>
                  <constv typename="signed_char" value="0" />
                </instr>
              </instr>
            </else>
          </if>
          <if>
            <condition>
              <instr mname="and" linkedname=".MyPackage.signed_char.and" CodeAddress="18233" CodeSize="59" SrcRow="462">
                <subj>
                  <instr mname="" CodeAddress="18234" CodeSize="36">
                    <instr mname="or" linkedname=".MyPackage.signed_char.or" CodeAddress="18234" CodeSize="36" SrcRow="462">
                      <subj>
                        <instr mname="Equal" linkedname=".MyPackage.signed_char.Equal" CodeAddress="18235" CodeSize="21" SrcRow="462">
                          <subj>
                            <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="18236" CodeSize="11" SrcRow="462">
                              <subj>
                                <instr mname="ParamVal" linkedname=".MyPackage.ParamVal" CodeAddress="18237" CodeSize="3" SrcRow="462">
                                </instr>
                              </subj>
                              <constv typename="signed_char" value="8" />
                            </instr>
                          </subj>
                          <constv typename="signed_char" value="0" />
                        </instr>
                      </subj>
                      <instr mname="Equal" linkedname=".MyPackage.signed_char.Equal" CodeAddress="18256" CodeSize="13" SrcRow="462">
                        <subj>
                          <instr mname="bTaryfaON" linkedname=".MyPackage.bTaryfaON" CodeAddress="18257" CodeSize="3" SrcRow="462">
                          </instr>
                        </subj>
                        <constv typename="signed_char" value="1" />
                      </instr>
                    </instr>
                  </instr>
                </subj>
                <instr mname="Equal" linkedname=".MyPackage.signed_char.Equal" CodeAddress="18270" CodeSize="21" SrcRow="463">
                  <subj>
                    <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="18271" CodeSize="11" SrcRow="463">
                      <subj>
                        <instr mname="ParamVal" linkedname=".MyPackage.ParamVal" CodeAddress="18272" CodeSize="3" SrcRow="463">
                        </instr>
                      </subj>
                      <constv typename="signed_char" value="0" />
                    </instr>
                  </subj>
                  <constv typename="signed_char" value="1" />
                </instr>
              </instr>
            </condition>
            <then>
              <instr mname="" CodeAddress="18295" CodeSize="252">
                <if>
                  <condition>
                    <instr mname="or" linkedname=".MyPackage.signed_char.or" CodeAddress="18295" CodeSize="104" SrcRow="465">
                      <subj>
                        <instr mname="LessThan" linkedname=".MyPackage.float.LessThan" CodeAddress="18296" CodeSize="51" SrcRow="465">
                          <subj>
                            <instr mname="NTC_Temp_CO" linkedname=".MyPackage.NTC_Temp_CO" CodeAddress="18297" CodeSize="3" SrcRow="465">
                            </instr>
                          </subj>
                          <instr mname="sub" linkedname=".MyPackage.signed_char.sub" CodeAddress="18302" CodeSize="28" SrcRow="465">
                            <subj>
                              <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="18303" CodeSize="11" SrcRow="465">
                                <subj>
                                  <instr mname="ParamVal" linkedname=".MyPackage.ParamVal" CodeAddress="18304" CodeSize="3" SrcRow="465">
                                  </instr>
                                </subj>
                                <constv typename="signed_char" value="1" />
                              </instr>
                            </subj>
                            <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="18316" CodeSize="11" SrcRow="465">
                              <subj>
                                <instr mname="ParamVal" linkedname=".MyPackage.ParamVal" CodeAddress="18317" CodeSize="3" SrcRow="465">
                                </instr>
                              </subj>
                              <constv typename="signed_char" value="11" />
                            </instr>
                          </instr>
                        </instr>
                      </subj>
                      <instr mname="" CodeAddress="18347" CodeSize="51">
                        <instr mname="and" linkedname=".MyPackage.signed_char.and" CodeAddress="18347" CodeSize="51" SrcRow="465">
                          <subj>
                            <instr mname="LessThan" linkedname=".MyPackage.float.LessThan" CodeAddress="18348" CodeSize="36" SrcRow="465">
                              <subj>
                                <instr mname="NTC_Temp_CO" linkedname=".MyPackage.NTC_Temp_CO" CodeAddress="18349" CodeSize="3" SrcRow="465">
                                </instr>
                              </subj>
                              <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="18354" CodeSize="11" SrcRow="465">
                                <subj>
                                  <instr mname="ParamVal" linkedname=".MyPackage.ParamVal" CodeAddress="18355" CodeSize="3" SrcRow="465">
                                  </instr>
                                </subj>
                                <constv typename="signed_char" value="1" />
                              </instr>
                            </instr>
                          </subj>
                          <instr mname="Equal" linkedname=".MyPackage.signed_char.Equal" CodeAddress="18384" CodeSize="13" SrcRow="465">
                            <subj>
                              <instr mname="Hist_od_CO" linkedname=".MyPackage.Hist_od_CO" CodeAddress="18385" CodeSize="3" SrcRow="465">
                              </instr>
                            </subj>
                            <constv typename="signed_char" value="0" />
                          </instr>
                        </instr>
                      </instr>
                    </instr>
                  </condition>
                  <then>
                    <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="18402" CodeSize="6" SrcRow="465">
                      <subj>
                        <instr mname="bCoON" linkedname=".MyPackage.bCoON" CodeAddress="18402" CodeSize="3" SrcRow="465">
                        </instr>
                      </subj>
                      <constv typename="signed_char" value="1" />
                    </instr>
                  </then>
                  <else>
                    <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="18411" CodeSize="6" SrcRow="466">
                      <subj>
                        <instr mname="bCoON" linkedname=".MyPackage.bCoON" CodeAddress="18411" CodeSize="3" SrcRow="466">
                        </instr>
                      </subj>
                      <constv typename="signed_char" value="0" />
                    </instr>
                  </else>
                </if>
                <if>
                  <condition>
                    <instr mname="or" linkedname=".MyPackage.signed_char.or" CodeAddress="18417" CodeSize="112" SrcRow="467">
                      <subj>
                        <instr mname="GreaterOrEqual" linkedname=".MyPackage.float.GreaterOrEqual" CodeAddress="18418" CodeSize="40" SrcRow="467">
                          <subj>
                            <instr mname="NTC_Temp_CO" linkedname=".MyPackage.NTC_Temp_CO" CodeAddress="18419" CodeSize="3" SrcRow="467">
                            </instr>
                          </subj>
                          <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="18424" CodeSize="11" SrcRow="467">
                            <subj>
                              <instr mname="ParamVal" linkedname=".MyPackage.ParamVal" CodeAddress="18425" CodeSize="3" SrcRow="467">
                              </instr>
                            </subj>
                            <constv typename="signed_char" value="1" />
                          </instr>
                        </instr>
                      </subj>
                      <instr mname="" CodeAddress="18458" CodeSize="70">
                        <instr mname="and" linkedname=".MyPackage.signed_char.and" CodeAddress="18458" CodeSize="70" SrcRow="467">
                          <subj>
                            <instr mname="GreaterThan" linkedname=".MyPackage.float.GreaterThan" CodeAddress="18459" CodeSize="55" SrcRow="467">
                              <subj>
                                <instr mname="NTC_Temp_CO" linkedname=".MyPackage.NTC_Temp_CO" CodeAddress="18460" CodeSize="3" SrcRow="467">
                                </instr>
                              </subj>
                              <instr mname="sub" linkedname=".MyPackage.signed_char.sub" CodeAddress="18465" CodeSize="28" SrcRow="467">
                                <subj>
                                  <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="18466" CodeSize="11" SrcRow="467">
                                    <subj>
                                      <instr mname="ParamVal" linkedname=".MyPackage.ParamVal" CodeAddress="18467" CodeSize="3" SrcRow="467">
                                      </instr>
                                    </subj>
                                    <constv typename="signed_char" value="1" />
                                  </instr>
                                </subj>
                                <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="18479" CodeSize="11" SrcRow="467">
                                  <subj>
                                    <instr mname="ParamVal" linkedname=".MyPackage.ParamVal" CodeAddress="18480" CodeSize="3" SrcRow="467">
                                    </instr>
                                  </subj>
                                  <constv typename="signed_char" value="11" />
                                </instr>
                              </instr>
                            </instr>
                          </subj>
                          <instr mname="Equal" linkedname=".MyPackage.signed_char.Equal" CodeAddress="18514" CodeSize="13" SrcRow="467">
                            <subj>
                              <instr mname="Hist_od_CO" linkedname=".MyPackage.Hist_od_CO" CodeAddress="18515" CodeSize="3" SrcRow="467">
                              </instr>
                            </subj>
                            <constv typename="signed_char" value="1" />
                          </instr>
                        </instr>
                      </instr>
                    </instr>
                  </condition>
                  <then>
                    <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="18532" CodeSize="6" SrcRow="467">
                      <subj>
                        <instr mname="Hist_od_CO" linkedname=".MyPackage.Hist_od_CO" CodeAddress="18532" CodeSize="3" SrcRow="467">
                        </instr>
                      </subj>
                      <constv typename="signed_char" value="1" />
                    </instr>
                  </then>
                  <else>
                    <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="18541" CodeSize="6" SrcRow="468">
                      <subj>
                        <instr mname="Hist_od_CO" linkedname=".MyPackage.Hist_od_CO" CodeAddress="18541" CodeSize="3" SrcRow="468">
                        </instr>
                      </subj>
                      <constv typename="signed_char" value="0" />
                    </instr>
                  </else>
                </if>
              </instr>
            </then>
            <else>
              <instr mname="" CodeAddress="18550" CodeSize="12">
                <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="18550" CodeSize="6" SrcRow="469">
                  <subj>
                    <instr mname="bCoON" linkedname=".MyPackage.bCoON" CodeAddress="18550" CodeSize="3" SrcRow="469">
                    </instr>
                  </subj>
                  <constv typename="signed_char" value="0" />
                </instr>
                <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="18556" CodeSize="6" SrcRow="469">
                  <subj>
                    <instr mname="Hist_od_CO" linkedname=".MyPackage.Hist_od_CO" CodeAddress="18556" CodeSize="3" SrcRow="469">
                    </instr>
                  </subj>
                  <constv typename="signed_char" value="0" />
                </instr>
              </instr>
            </else>
          </if>
          <if>
            <condition>
              <instr mname="and" linkedname=".MyPackage.signed_char.and" CodeAddress="18562" CodeSize="79" SrcRow="471">
                <subj>
                  <instr mname="and" linkedname=".MyPackage.signed_char.and" CodeAddress="18563" CodeSize="60" SrcRow="471">
                    <subj>
                      <instr mname="and" linkedname=".MyPackage.signed_char.and" CodeAddress="18564" CodeSize="41" SrcRow="471">
                        <subj>
                          <instr mname="Equal" linkedname=".MyPackage.signed_char.Equal" CodeAddress="18565" CodeSize="13" SrcRow="471">
                            <subj>
                              <instr mname="bPasteryzuj" linkedname=".MyPackage.bPasteryzuj" CodeAddress="18566" CodeSize="3" SrcRow="471">
                              </instr>
                            </subj>
                            <constv typename="signed_char" value="1" />
                          </instr>
                        </subj>
                        <instr mname="LessOrEqual" linkedname=".MyPackage.signed_char.LessOrEqual" CodeAddress="18578" CodeSize="26" SrcRow="471">
                          <subj>
                            <instr mname="ElapsedSec" linkedname=".MyPackage.TStoppableTimerSec.ElapsedSec" CodeAddress="18579" CodeSize="7" SrcRow="471">
                              <subj>
                                <instr mname="PasterizationTime" linkedname=".MyPackage.PasterizationTime" CodeAddress="18580" CodeSize="3" SrcRow="471">
                                </instr>
                              </subj>
                            </instr>
                          </subj>
                          <instr mname="mul" linkedname=".MyPackage.signed_char.mul" CodeAddress="18586" CodeSize="17" SrcRow="471">
                            <subj>
                              <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="18587" CodeSize="11" SrcRow="471">
                                <subj>
                                  <instr mname="ParamVal" linkedname=".MyPackage.ParamVal" CodeAddress="18588" CodeSize="3" SrcRow="471">
                                  </instr>
                                </subj>
                                <constv typename="signed_char" value="19" />
                              </instr>
                            </subj>
                            <constv typename="signed_char" value="60" />
                          </instr>
                        </instr>
                      </instr>
                    </subj>
                    <instr mname="Equal" linkedname=".MyPackage.signed_char.Equal" CodeAddress="18605" CodeSize="17" SrcRow="471">
                      <subj>
                        <instr mname="isAlarm" linkedname=".MyPackage.TAlarmsManager.isAlarm" CodeAddress="18606" CodeSize="9" SrcRow="471">
                          <subj>
                            <instr mname="AlarmsManager" linkedname=".MyPackage.AlarmsManager" CodeAddress="18607" CodeSize="3" SrcRow="471">
                            </instr>
                          </subj>
                          <constv typename="signed_char" value="3" />
                        </instr>
                      </subj>
                      <constv typename="signed_char" value="0" />
                    </instr>
                  </instr>
                </subj>
                <instr mname="Equal" linkedname=".MyPackage.signed_char.Equal" CodeAddress="18623" CodeSize="17" SrcRow="471">
                  <subj>
                    <instr mname="isAlarm" linkedname=".MyPackage.TAlarmsManager.isAlarm" CodeAddress="18624" CodeSize="9" SrcRow="471">
                      <subj>
                        <instr mname="AlarmsManager" linkedname=".MyPackage.AlarmsManager" CodeAddress="18625" CodeSize="3" SrcRow="471">
                        </instr>
                      </subj>
                      <constv typename="signed_char" value="9" />
                    </instr>
                  </subj>
                  <constv typename="signed_char" value="0" />
                </instr>
              </instr>
            </condition>
            <then>
              <instr mname="" CodeAddress="18644" CodeSize="250">
                <if>
                  <condition>
                    <instr mname="isClear" linkedname=".MyPackage.TTimerSec.isClear" CodeAddress="18644" CodeSize="7" SrcRow="475">
                      <subj>
                        <instr mname="PasterizationTimeOut" linkedname=".MyPackage.PasterizationTimeOut" CodeAddress="18645" CodeSize="3" SrcRow="475">
                        </instr>
                      </subj>
                    </instr>
                  </condition>
                  <then>
                    <instr mname="Start" linkedname=".MyPackage.TTimerSec.Start" CodeAddress="18654" CodeSize="6" SrcRow="475">
                      <subj>
                        <instr mname="PasterizationTimeOut" linkedname=".MyPackage.PasterizationTimeOut" CodeAddress="18654" CodeSize="3" SrcRow="475">
                        </instr>
                      </subj>
                    </instr>
                  </then>
                </if>
                <if>
                  <condition>
                    <instr mname="LessThan" linkedname=".MyPackage.float.LessThan" CodeAddress="18660" CodeSize="36" SrcRow="476">
                      <subj>
                        <instr mname="NTC_Temp_CWU" linkedname=".MyPackage.NTC_Temp_CWU" CodeAddress="18661" CodeSize="3" SrcRow="476">
                        </instr>
                      </subj>
                      <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="18666" CodeSize="11" SrcRow="476">
                        <subj>
                          <instr mname="ParamVal" linkedname=".MyPackage.ParamVal" CodeAddress="18667" CodeSize="3" SrcRow="476">
                          </instr>
                        </subj>
                        <constv typename="signed_char" value="23" />
                      </instr>
                    </instr>
                  </condition>
                  <then>
                    <instr mname="" CodeAddress="18699" CodeSize="26">
                      <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="18699" CodeSize="6" SrcRow="476">
                        <subj>
                          <instr mname="bCwuON" linkedname=".MyPackage.bCwuON" CodeAddress="18699" CodeSize="3" SrcRow="476">
                          </instr>
                        </subj>
                        <constv typename="signed_char" value="1" />
                      </instr>
                      <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="18705" CodeSize="14" SrcRow="476">
                        <subj>
                          <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="18705" CodeSize="11" SrcRow="476">
                            <subj>
                              <instr mname="VDOValue" linkedname=".MyPackage.VDOValue" CodeAddress="18706" CodeSize="3" SrcRow="476">
                              </instr>
                            </subj>
                            <constv typename="signed_char" value="13" />
                          </instr>
                        </subj>
                        <constv typename="signed_char" value="0" />
                      </instr>
                      <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="18719" CodeSize="6" SrcRow="476">
                        <subj>
                          <instr mname="bPcwuON" linkedname=".MyPackage.bPcwuON" CodeAddress="18719" CodeSize="3" SrcRow="476">
                          </instr>
                        </subj>
                        <constv typename="signed_char" value="0" />
                      </instr>
                    </instr>
                  </then>
                  <else>
                    <if>
                      <condition>
                        <instr mname="LessOrEqual" linkedname=".MyPackage.float.LessOrEqual" CodeAddress="18728" CodeSize="40" SrcRow="477">
                          <subj>
                            <instr mname="NTC_Temp_CWU" linkedname=".MyPackage.NTC_Temp_CWU" CodeAddress="18729" CodeSize="3" SrcRow="477">
                            </instr>
                          </subj>
                          <instr mname="sum" linkedname=".MyPackage.signed_char.sum" CodeAddress="18734" CodeSize="17" SrcRow="477">
                            <subj>
                              <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="18735" CodeSize="11" SrcRow="477">
                                <subj>
                                  <instr mname="ParamVal" linkedname=".MyPackage.ParamVal" CodeAddress="18736" CodeSize="3" SrcRow="477">
                                  </instr>
                                </subj>
                                <constv typename="signed_char" value="4" />
                              </instr>
                            </subj>
                            <constv typename="signed_char" value="-2" />
                          </instr>
                        </instr>
                      </condition>
                      <then>
                        <instr mname="" CodeAddress="18771" CodeSize="26">
                          <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="18771" CodeSize="14" SrcRow="479">
                            <subj>
                              <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="18771" CodeSize="11" SrcRow="479">
                                <subj>
                                  <instr mname="VDOValue" linkedname=".MyPackage.VDOValue" CodeAddress="18772" CodeSize="3" SrcRow="479">
                                  </instr>
                                </subj>
                                <constv typename="signed_char" value="13" />
                              </instr>
                            </subj>
                            <constv typename="signed_char" value="1" />
                          </instr>
                          <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="18785" CodeSize="6" SrcRow="480">
                            <subj>
                              <instr mname="bCwuON" linkedname=".MyPackage.bCwuON" CodeAddress="18785" CodeSize="3" SrcRow="480">
                              </instr>
                            </subj>
                            <constv typename="signed_char" value="0" />
                          </instr>
                          <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="18791" CodeSize="6" SrcRow="481">
                            <subj>
                              <instr mname="bPcwuON" linkedname=".MyPackage.bPcwuON" CodeAddress="18791" CodeSize="3" SrcRow="481">
                              </instr>
                            </subj>
                            <constv typename="signed_char" value="0" />
                          </instr>
                        </instr>
                      </then>
                      <else>
                        <if>
                          <condition>
                            <instr mname="GreaterOrEqual" linkedname=".MyPackage.float.GreaterOrEqual" CodeAddress="18800" CodeSize="40" SrcRow="483">
                              <subj>
                                <instr mname="NTC_Temp_CWU" linkedname=".MyPackage.NTC_Temp_CWU" CodeAddress="18801" CodeSize="3" SrcRow="483">
                                </instr>
                              </subj>
                              <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="18806" CodeSize="11" SrcRow="483">
                                <subj>
                                  <instr mname="ParamVal" linkedname=".MyPackage.ParamVal" CodeAddress="18807" CodeSize="3" SrcRow="483">
                                  </instr>
                                </subj>
                                <constv typename="signed_char" value="4" />
                              </instr>
                            </instr>
                          </condition>
                          <then>
                            <instr mname="" CodeAddress="18843" CodeSize="42">
                              <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="18843" CodeSize="14" SrcRow="485">
                                <subj>
                                  <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="18843" CodeSize="11" SrcRow="485">
                                    <subj>
                                      <instr mname="VDOValue" linkedname=".MyPackage.VDOValue" CodeAddress="18844" CodeSize="3" SrcRow="485">
                                      </instr>
                                    </subj>
                                    <constv typename="signed_char" value="13" />
                                  </instr>
                                </subj>
                                <constv typename="signed_char" value="0" />
                              </instr>
                              <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="18857" CodeSize="6" SrcRow="486">
                                <subj>
                                  <instr mname="bCwuON" linkedname=".MyPackage.bCwuON" CodeAddress="18857" CodeSize="3" SrcRow="486">
                                  </instr>
                                </subj>
                                <constv typename="signed_char" value="0" />
                              </instr>
                              <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="18863" CodeSize="6" SrcRow="487">
                                <subj>
                                  <instr mname="bPcwuON" linkedname=".MyPackage.bPcwuON" CodeAddress="18863" CodeSize="3" SrcRow="487">
                                  </instr>
                                </subj>
                                <constv typename="signed_char" value="0" />
                              </instr>
                              <if>
                                <condition>
                                  <instr mname="isClear" linkedname=".MyPackage.TTimerSec.isClear" CodeAddress="18869" CodeSize="7" SrcRow="488">
                                    <subj>
                                      <instr mname="PasterizationTime" linkedname=".MyPackage.PasterizationTime" CodeAddress="18870" CodeSize="3" SrcRow="488">
                                      </instr>
                                    </subj>
                                  </instr>
                                </condition>
                                <then>
                                  <instr mname="Start" linkedname=".MyPackage.TTimerSec.Start" CodeAddress="18879" CodeSize="6" SrcRow="488">
                                    <subj>
                                      <instr mname="PasterizationTime" linkedname=".MyPackage.PasterizationTime" CodeAddress="18879" CodeSize="3" SrcRow="488">
                                      </instr>
                                    </subj>
                                  </instr>
                                </then>
                              </if>
                            </instr>
                          </then>
                          <else>
                            <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="18888" CodeSize="6" SrcRow="491">
                              <subj>
                                <instr mname="bPcwuON" linkedname=".MyPackage.bPcwuON" CodeAddress="18888" CodeSize="3" SrcRow="491">
                                </instr>
                              </subj>
                              <constv typename="signed_char" value="0" />
                            </instr>
                          </else>
                        </if>
                      </else>
                    </if>
                  </else>
                </if>
              </instr>
            </then>
            <else>
              <instr mname="" CodeAddress="18897" CodeSize="50">
                <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="18897" CodeSize="6" SrcRow="495">
                  <subj>
                    <instr mname="bPasteryzuj" linkedname=".MyPackage.bPasteryzuj" CodeAddress="18897" CodeSize="3" SrcRow="495">
                    </instr>
                  </subj>
                  <constv typename="signed_char" value="0" />
                </instr>
                <instr mname="Start" linkedname=".MyPackage.TTimerSec.Start" CodeAddress="18903" CodeSize="6" SrcRow="496">
                  <subj>
                    <instr mname="PasterizationTime" linkedname=".MyPackage.PasterizationTime" CodeAddress="18903" CodeSize="3" SrcRow="496">
                    </instr>
                  </subj>
                </instr>
                <instr mname="Clear" linkedname=".MyPackage.TTimerSec.Clear" CodeAddress="18909" CodeSize="6" SrcRow="497">
                  <subj>
                    <instr mname="PasterizationTime" linkedname=".MyPackage.PasterizationTime" CodeAddress="18909" CodeSize="3" SrcRow="497">
                    </instr>
                  </subj>
                </instr>
                <instr mname="Start" linkedname=".MyPackage.TTimerSec.Start" CodeAddress="18915" CodeSize="6" SrcRow="498">
                  <subj>
                    <instr mname="PasterizationTimeOut" linkedname=".MyPackage.PasterizationTimeOut" CodeAddress="18915" CodeSize="3" SrcRow="498">
                    </instr>
                  </subj>
                </instr>
                <instr mname="Clear" linkedname=".MyPackage.TTimerSec.Clear" CodeAddress="18921" CodeSize="6" SrcRow="499">
                  <subj>
                    <instr mname="PasterizationTimeOut" linkedname=".MyPackage.PasterizationTimeOut" CodeAddress="18921" CodeSize="3" SrcRow="499">
                    </instr>
                  </subj>
                </instr>
                <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="18927" CodeSize="14" SrcRow="500">
                  <subj>
                    <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="18927" CodeSize="11" SrcRow="500">
                      <subj>
                        <instr mname="VDOValue" linkedname=".MyPackage.VDOValue" CodeAddress="18928" CodeSize="3" SrcRow="500">
                        </instr>
                      </subj>
                      <constv typename="signed_char" value="13" />
                    </instr>
                  </subj>
                  <constv typename="signed_char" value="0" />
                </instr>
                <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="18941" CodeSize="6" SrcRow="501">
                  <subj>
                    <instr mname="bPcwuON" linkedname=".MyPackage.bPcwuON" CodeAddress="18941" CodeSize="3" SrcRow="501">
                    </instr>
                  </subj>
                  <constv typename="signed_char" value="1" />
                </instr>
              </instr>
            </else>
          </if>
          <if>
            <condition>
              <instr mname="or" linkedname=".MyPackage.signed_char.or" CodeAddress="18947" CodeSize="116" SrcRow="507">
                <subj>
                  <instr mname="GreaterOrEqual" linkedname=".MyPackage.float.GreaterOrEqual" CodeAddress="18948" CodeSize="40" SrcRow="507">
                    <subj>
                      <instr mname="NTC_Temp_Zewn" linkedname=".MyPackage.NTC_Temp_Zewn" CodeAddress="18949" CodeSize="3" SrcRow="507">
                      </instr>
                    </subj>
                    <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="18954" CodeSize="11" SrcRow="507">
                      <subj>
                        <instr mname="ParamVal" linkedname=".MyPackage.ParamVal" CodeAddress="18955" CodeSize="3" SrcRow="507">
                        </instr>
                      </subj>
                      <constv typename="signed_char" value="13" />
                    </instr>
                  </instr>
                </subj>
                <instr mname="" CodeAddress="18988" CodeSize="74">
                  <instr mname="and" linkedname=".MyPackage.signed_char.and" CodeAddress="18988" CodeSize="74" SrcRow="508">
                    <subj>
                      <instr mname="Equal" linkedname=".MyPackage.signed_char.Equal" CodeAddress="18989" CodeSize="13" SrcRow="508">
                        <subj>
                          <instr mname="bHP3_isOn" linkedname=".MyPackage.bHP3_isOn" CodeAddress="18990" CodeSize="3" SrcRow="508">
                          </instr>
                        </subj>
                        <constv typename="signed_char" value="1" />
                      </instr>
                    </subj>
                    <instr mname="GreaterOrEqual" linkedname=".MyPackage.float.GreaterOrEqual" CodeAddress="19002" CodeSize="59" SrcRow="509">
                      <subj>
                        <instr mname="NTC_Temp_Zewn" linkedname=".MyPackage.NTC_Temp_Zewn" CodeAddress="19003" CodeSize="3" SrcRow="509">
                        </instr>
                      </subj>
                      <instr mname="sub" linkedname=".MyPackage.signed_char.sub" CodeAddress="19008" CodeSize="32" SrcRow="509">
                        <subj>
                          <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="19009" CodeSize="11" SrcRow="509">
                            <subj>
                              <instr mname="ParamVal" linkedname=".MyPackage.ParamVal" CodeAddress="19010" CodeSize="3" SrcRow="509">
                              </instr>
                            </subj>
                            <constv typename="signed_char" value="13" />
                          </instr>
                        </subj>
                        <instr mname="div" linkedname=".MyPackage.signed_char.div" CodeAddress="19022" CodeSize="17" SrcRow="509">
                          <subj>
                            <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="19023" CodeSize="11" SrcRow="509">
                              <subj>
                                <instr mname="ParamVal" linkedname=".MyPackage.ParamVal" CodeAddress="19024" CodeSize="3" SrcRow="509">
                                </instr>
                              </subj>
                              <constv typename="signed_char" value="14" />
                            </instr>
                          </subj>
                          <constv typename="signed_char" value="10" />
                        </instr>
                      </instr>
                    </instr>
                  </instr>
                </instr>
              </instr>
            </condition>
            <then>
              <instr mname="" CodeAddress="19066" CodeSize="83">
                <instr mname="HP1_Turn" linkedname=".MyPackage.HP1_Turn" CodeAddress="19066" CodeSize="5" SrcRow="511">
                  <constv typename="signed_char" value="0" />
                  <constv typename="signed_char" value="0" />
                </instr>
                <instr mname="HP2_Turn" linkedname=".MyPackage.HP2_Turn" CodeAddress="19071" CodeSize="7" SrcRow="512">
                  <constv typename="signed_char" value="0" />
                </instr>
                <if>
                  <condition>
                    <instr mname="Equal" linkedname=".MyPackage.signed_char.Equal" CodeAddress="19078" CodeSize="13" SrcRow="513">
                      <subj>
                        <instr mname="bCwuON" linkedname=".MyPackage.bCwuON" CodeAddress="19079" CodeSize="3" SrcRow="513">
                        </instr>
                      </subj>
                      <constv typename="signed_char" value="1" />
                    </instr>
                  </condition>
                  <then>
                    <instr mname="HP3_Turn" linkedname=".MyPackage.HP3_Turn" CodeAddress="19094" CodeSize="13" SrcRow="514">
                      <constv typename="signed_char" value="1" />
                      <constv typename="signed_char" value="1" />
                    </instr>
                  </then>
                  <else>
                    <if>
                      <condition>
                        <instr mname="Equal" linkedname=".MyPackage.signed_char.Equal" CodeAddress="19110" CodeSize="13" SrcRow="515">
                          <subj>
                            <instr mname="bCoON" linkedname=".MyPackage.bCoON" CodeAddress="19111" CodeSize="3" SrcRow="515">
                            </instr>
                          </subj>
                          <constv typename="signed_char" value="1" />
                        </instr>
                      </condition>
                      <then>
                        <instr mname="HP3_Turn" linkedname=".MyPackage.HP3_Turn" CodeAddress="19126" CodeSize="13" SrcRow="516">
                          <constv typename="signed_char" value="1" />
                          <constv typename="signed_char" value="0" />
                        </instr>
                      </then>
                      <else>
                        <instr mname="HP3_Turn" linkedname=".MyPackage.HP3_Turn" CodeAddress="19142" CodeSize="7" SrcRow="518">
                          <constv typename="signed_char" value="0" />
                          <constv typename="signed_char" value="0" />
                        </instr>
                      </else>
                    </if>
                  </else>
                </if>
              </instr>
            </then>
            <else>
              <instr mname="" CodeAddress="19152" CodeSize="301">
                <instr mname="HP3_Turn" linkedname=".MyPackage.HP3_Turn" CodeAddress="19152" CodeSize="7" SrcRow="521">
                  <constv typename="signed_char" value="0" />
                  <constv typename="signed_char" value="0" />
                </instr>
                <if>
                  <condition>
                    <instr mname="Equal" linkedname=".MyPackage.signed_char.Equal" CodeAddress="19159" CodeSize="13" SrcRow="522">
                      <subj>
                        <instr mname="bCwuON" linkedname=".MyPackage.bCwuON" CodeAddress="19160" CodeSize="3" SrcRow="522">
                        </instr>
                      </subj>
                      <constv typename="signed_char" value="1" />
                    </instr>
                  </condition>
                  <then>
                    <instr mname="" CodeAddress="19175" CodeSize="16">
                      <instr mname="HP1_Turn" linkedname=".MyPackage.HP1_Turn" CodeAddress="19175" CodeSize="9" SrcRow="524">
                        <constv typename="signed_char" value="1" />
                        <constv typename="signed_char" value="1" />
                      </instr>
                      <instr mname="HP2_Turn" linkedname=".MyPackage.HP2_Turn" CodeAddress="19184" CodeSize="5" SrcRow="525">
                        <constv typename="signed_char" value="0" />
                      </instr>
                    </instr>
                  </then>
                  <else>
                    <if>
                      <condition>
                        <instr mname="Equal" linkedname=".MyPackage.signed_char.Equal" CodeAddress="19194" CodeSize="13" SrcRow="529">
                          <subj>
                            <instr mname="bCoON" linkedname=".MyPackage.bCoON" CodeAddress="19195" CodeSize="3" SrcRow="529">
                            </instr>
                          </subj>
                          <constv typename="signed_char" value="1" />
                        </instr>
                      </condition>
                      <then>
                        <if>
                          <condition>
                            <instr mname="GreaterOrEqual" linkedname=".MyPackage.float.GreaterOrEqual" CodeAddress="19210" CodeSize="56" SrcRow="531">
                              <subj>
                                <instr mname="sub" linkedname=".MyPackage.float.sub" CodeAddress="19211" CodeSize="21" SrcRow="531">
                                  <subj>
                                    <instr mname="BuildingTemperature" linkedname=".MyPackage.BuildingTemperature" CodeAddress="19212" CodeSize="4" SrcRow="531">
                                    </instr>
                                  </subj>
                                  <instr mname="NTC_Temp_Zewn" linkedname=".MyPackage.NTC_Temp_Zewn" CodeAddress="19216" CodeSize="3" SrcRow="531">
                                  </instr>
                                </instr>
                              </subj>
                              <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="19232" CodeSize="11" SrcRow="531">
                                <subj>
                                  <instr mname="ParamVal" linkedname=".MyPackage.ParamVal" CodeAddress="19233" CodeSize="3" SrcRow="531">
                                  </instr>
                                </subj>
                                <constv typename="signed_char" value="20" />
                              </instr>
                            </instr>
                          </condition>
                          <then>
                            <instr mname="" CodeAddress="19269" CodeSize="20">
                              <instr mname="HP2_Turn" linkedname=".MyPackage.HP2_Turn" CodeAddress="19269" CodeSize="11" SrcRow="535">
                                <constv typename="signed_char" value="1" />
                              </instr>
                              <instr mname="HP1_Turn" linkedname=".MyPackage.HP1_Turn" CodeAddress="19280" CodeSize="9" SrcRow="536">
                                <constv typename="signed_char" value="1" />
                                <constv typename="signed_char" value="0" />
                              </instr>
                            </instr>
                          </then>
                          <else>
                            <if>
                              <condition>
                                <instr mname="Equal" linkedname=".MyPackage.signed_char.Equal" CodeAddress="19292" CodeSize="13" SrcRow="542">
                                  <subj>
                                    <instr mname="iHPselected" linkedname=".MyPackage.iHPselected" CodeAddress="19293" CodeSize="3" SrcRow="542">
                                    </instr>
                                  </subj>
                                  <constv typename="signed_char" value="-1" />
                                </instr>
                              </condition>
                              <then>
                                <if>
                                  <condition>
                                    <instr mname="GreaterThan" linkedname=".MyPackage.signed_char.GreaterThan" CodeAddress="19308" CodeSize="36" SrcRow="544">
                                      <subj>
                                        <instr mname="WorkingHours" linkedname=".MyPackage.THourCounter.WorkingHours" CodeAddress="19309" CodeSize="15" SrcRow="544">
                                          <subj>
                                            <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="19310" CodeSize="11" SrcRow="544">
                                              <subj>
                                                <instr mname="WHCounters" linkedname=".MyPackage.WHCounters" CodeAddress="19311" CodeSize="3" SrcRow="544">
                                                </instr>
                                              </subj>
                                              <constv typename="signed_char" value="0" />
                                            </instr>
                                          </subj>
                                        </instr>
                                      </subj>
                                      <instr mname="WorkingHours" linkedname=".MyPackage.THourCounter.WorkingHours" CodeAddress="19324" CodeSize="15" SrcRow="544">
                                        <subj>
                                          <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="19325" CodeSize="11" SrcRow="544">
                                            <subj>
                                              <instr mname="WHCounters" linkedname=".MyPackage.WHCounters" CodeAddress="19326" CodeSize="3" SrcRow="544">
                                              </instr>
                                            </subj>
                                            <constv typename="signed_char" value="1" />
                                          </instr>
                                        </subj>
                                      </instr>
                                    </instr>
                                  </condition>
                                  <then>
                                    <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="19347" CodeSize="6" SrcRow="544">
                                      <subj>
                                        <instr mname="iHPselected" linkedname=".MyPackage.iHPselected" CodeAddress="19347" CodeSize="3" SrcRow="544">
                                        </instr>
                                      </subj>
                                      <constv typename="signed_char" value="1" />
                                    </instr>
                                  </then>
                                  <else>
                                    <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="19356" CodeSize="6" SrcRow="545">
                                      <subj>
                                        <instr mname="iHPselected" linkedname=".MyPackage.iHPselected" CodeAddress="19356" CodeSize="3" SrcRow="545">
                                        </instr>
                                      </subj>
                                      <constv typename="signed_char" value="0" />
                                    </instr>
                                  </else>
                                </if>
                              </then>
                              <else>
                                <if>
                                  <condition>
                                    <instr mname="Equal" linkedname=".MyPackage.signed_char.Equal" CodeAddress="19365" CodeSize="13" SrcRow="548">
                                      <subj>
                                        <instr mname="iHPselected" linkedname=".MyPackage.iHPselected" CodeAddress="19366" CodeSize="3" SrcRow="548">
                                        </instr>
                                      </subj>
                                      <constv typename="signed_char" value="1" />
                                    </instr>
                                  </condition>
                                  <then>
                                    <instr mname="" CodeAddress="19381" CodeSize="16">
                                      <instr mname="HP2_Turn" linkedname=".MyPackage.HP2_Turn" CodeAddress="19381" CodeSize="11" SrcRow="550">
                                        <constv typename="signed_char" value="1" />
                                      </instr>
                                      <instr mname="HP1_Turn" linkedname=".MyPackage.HP1_Turn" CodeAddress="19392" CodeSize="5" SrcRow="551">
                                        <constv typename="signed_char" value="0" />
                                        <constv typename="signed_char" value="0" />
                                      </instr>
                                    </instr>
                                  </then>
                                  <else>
                                    <if>
                                      <condition>
                                        <instr mname="Equal" linkedname=".MyPackage.signed_char.Equal" CodeAddress="19400" CodeSize="13" SrcRow="553">
                                          <subj>
                                            <instr mname="iHPselected" linkedname=".MyPackage.iHPselected" CodeAddress="19401" CodeSize="3" SrcRow="553">
                                            </instr>
                                          </subj>
                                          <constv typename="signed_char" value="0" />
                                        </instr>
                                      </condition>
                                      <then>
                                        <instr mname="" CodeAddress="19416" CodeSize="16">
                                          <instr mname="HP2_Turn" linkedname=".MyPackage.HP2_Turn" CodeAddress="19416" CodeSize="7" SrcRow="555">
                                            <constv typename="signed_char" value="0" />
                                          </instr>
                                          <instr mname="HP1_Turn" linkedname=".MyPackage.HP1_Turn" CodeAddress="19423" CodeSize="9" SrcRow="556">
                                            <constv typename="signed_char" value="1" />
                                            <constv typename="signed_char" value="0" />
                                          </instr>
                                        </instr>
                                      </then>
                                    </if>
                                  </else>
                                </if>
                              </else>
                            </if>
                          </else>
                        </if>
                      </then>
                      <else>
                        <instr mname="" CodeAddress="19435" CodeSize="18">
                          <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="19435" CodeSize="6" SrcRow="561">
                            <subj>
                              <instr mname="iHPselected" linkedname=".MyPackage.iHPselected" CodeAddress="19435" CodeSize="3" SrcRow="561">
                              </instr>
                            </subj>
                            <constv typename="signed_char" value="-1" />
                          </instr>
                          <instr mname="HP1_Turn" linkedname=".MyPackage.HP1_Turn" CodeAddress="19441" CodeSize="5" SrcRow="562">
                            <constv typename="signed_char" value="0" />
                            <constv typename="signed_char" value="0" />
                          </instr>
                          <instr mname="HP2_Turn" linkedname=".MyPackage.HP2_Turn" CodeAddress="19446" CodeSize="5" SrcRow="563">
                            <constv typename="signed_char" value="0" />
                          </instr>
                        </instr>
                      </else>
                    </if>
                  </else>
                </if>
              </instr>
            </else>
          </if>
          <if>
            <condition>
              <instr mname="Equal" linkedname=".MyPackage.signed_char.Equal" CodeAddress="19453" CodeSize="13" SrcRow="569">
                <subj>
                  <instr mname="bPcwuON" linkedname=".MyPackage.bPcwuON" CodeAddress="19454" CodeSize="3" SrcRow="569">
                  </instr>
                </subj>
                <constv typename="signed_char" value="1" />
              </instr>
            </condition>
            <then>
              <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="19469" CodeSize="14" SrcRow="569">
                <subj>
                  <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="19469" CodeSize="11" SrcRow="569">
                    <subj>
                      <instr mname="VDOValue" linkedname=".MyPackage.VDOValue" CodeAddress="19470" CodeSize="3" SrcRow="569">
                      </instr>
                    </subj>
                    <constv typename="signed_char" value="12" />
                  </instr>
                </subj>
                <constv typename="signed_char" value="1" />
              </instr>
            </then>
            <else>
              <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="19486" CodeSize="14" SrcRow="570">
                <subj>
                  <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="19486" CodeSize="11" SrcRow="570">
                    <subj>
                      <instr mname="VDOValue" linkedname=".MyPackage.VDOValue" CodeAddress="19487" CodeSize="3" SrcRow="570">
                      </instr>
                    </subj>
                    <constv typename="signed_char" value="12" />
                  </instr>
                </subj>
                <constv typename="signed_char" value="0" />
              </instr>
            </else>
          </if>
          <if>
            <condition>
              <instr mname="Equal" linkedname=".MyPackage.signed_char.Equal" CodeAddress="19500" CodeSize="21" SrcRow="572">
                <subj>
                  <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="19501" CodeSize="11" SrcRow="572">
                    <subj>
                      <instr mname="ParamVal" linkedname=".MyPackage.ParamVal" CodeAddress="19502" CodeSize="3" SrcRow="572">
                      </instr>
                    </subj>
                    <constv typename="signed_char" value="3" />
                  </instr>
                </subj>
                <constv typename="signed_char" value="1" />
              </instr>
            </condition>
            <then>
              <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="19524" CodeSize="14" SrcRow="572">
                <subj>
                  <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="19524" CodeSize="11" SrcRow="572">
                    <subj>
                      <instr mname="VDOValue" linkedname=".MyPackage.VDOValue" CodeAddress="19525" CodeSize="3" SrcRow="572">
                      </instr>
                    </subj>
                    <constv typename="signed_char" value="7" />
                  </instr>
                </subj>
                <constv typename="signed_char" value="1" />
              </instr>
            </then>
            <else>
              <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="19541" CodeSize="14" SrcRow="573">
                <subj>
                  <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="19541" CodeSize="11" SrcRow="573">
                    <subj>
                      <instr mname="VDOValue" linkedname=".MyPackage.VDOValue" CodeAddress="19542" CodeSize="3" SrcRow="573">
                      </instr>
                    </subj>
                    <constv typename="signed_char" value="7" />
                  </instr>
                </subj>
                <constv typename="signed_char" value="0" />
              </instr>
            </else>
          </if>
          <if>
            <condition>
              <instr mname="and" linkedname=".MyPackage.signed_char.and" CodeAddress="19555" CodeSize="82" SrcRow="575">
                <subj>
                  <instr mname="Equal" linkedname=".MyPackage.signed_char.Equal" CodeAddress="19556" CodeSize="21" SrcRow="575">
                    <subj>
                      <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="19557" CodeSize="11" SrcRow="575">
                        <subj>
                          <instr mname="ParamVal" linkedname=".MyPackage.ParamVal" CodeAddress="19558" CodeSize="3" SrcRow="575">
                          </instr>
                        </subj>
                        <constv typename="signed_char" value="0" />
                      </instr>
                    </subj>
                    <constv typename="signed_char" value="1" />
                  </instr>
                </subj>
                <instr mname="GreaterThan" linkedname=".MyPackage.float.GreaterThan" CodeAddress="19577" CodeSize="59" SrcRow="575">
                  <subj>
                    <instr mname="NTC_Temp_CO" linkedname=".MyPackage.NTC_Temp_CO" CodeAddress="19578" CodeSize="3" SrcRow="575">
                    </instr>
                  </subj>
                  <instr mname="sub" linkedname=".MyPackage.signed_char.sub" CodeAddress="19583" CodeSize="32" SrcRow="575">
                    <subj>
                      <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="19584" CodeSize="11" SrcRow="575">
                        <subj>
                          <instr mname="ParamVal" linkedname=".MyPackage.ParamVal" CodeAddress="19585" CodeSize="3" SrcRow="575">
                          </instr>
                        </subj>
                        <constv typename="signed_char" value="1" />
                      </instr>
                    </subj>
                    <instr mname="div" linkedname=".MyPackage.signed_char.div" CodeAddress="19597" CodeSize="17" SrcRow="575">
                      <subj>
                        <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="19598" CodeSize="11" SrcRow="575">
                          <subj>
                            <instr mname="ParamVal" linkedname=".MyPackage.ParamVal" CodeAddress="19599" CodeSize="3" SrcRow="575">
                            </instr>
                          </subj>
                          <constv typename="signed_char" value="24" />
                        </instr>
                      </subj>
                      <constv typename="signed_char" value="10" />
                    </instr>
                  </instr>
                </instr>
              </instr>
            </condition>
            <then>
              <instr mname="" CodeAddress="19640" CodeSize="28">
                <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="19640" CodeSize="14" SrcRow="575">
                  <subj>
                    <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="19640" CodeSize="11" SrcRow="575">
                      <subj>
                        <instr mname="VDOValue" linkedname=".MyPackage.VDOValue" CodeAddress="19641" CodeSize="3" SrcRow="575">
                        </instr>
                      </subj>
                      <constv typename="signed_char" value="10" />
                    </instr>
                  </subj>
                  <constv typename="signed_char" value="1" />
                </instr>
                <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="19654" CodeSize="14" SrcRow="575">
                  <subj>
                    <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="19654" CodeSize="11" SrcRow="575">
                      <subj>
                        <instr mname="VDOValue" linkedname=".MyPackage.VDOValue" CodeAddress="19655" CodeSize="3" SrcRow="575">
                        </instr>
                      </subj>
                      <constv typename="signed_char" value="11" />
                    </instr>
                  </subj>
                  <constv typename="signed_char" value="1" />
                </instr>
              </instr>
            </then>
            <else>
              <instr mname="" CodeAddress="19671" CodeSize="28">
                <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="19671" CodeSize="14" SrcRow="576">
                  <subj>
                    <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="19671" CodeSize="11" SrcRow="576">
                      <subj>
                        <instr mname="VDOValue" linkedname=".MyPackage.VDOValue" CodeAddress="19672" CodeSize="3" SrcRow="576">
                        </instr>
                      </subj>
                      <constv typename="signed_char" value="10" />
                    </instr>
                  </subj>
                  <constv typename="signed_char" value="0" />
                </instr>
                <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="19685" CodeSize="14" SrcRow="576">
                  <subj>
                    <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="19685" CodeSize="11" SrcRow="576">
                      <subj>
                        <instr mname="VDOValue" linkedname=".MyPackage.VDOValue" CodeAddress="19686" CodeSize="3" SrcRow="576">
                        </instr>
                      </subj>
                      <constv typename="signed_char" value="11" />
                    </instr>
                  </subj>
                  <constv typename="signed_char" value="0" />
                </instr>
              </instr>
            </else>
          </if>
          <if>
            <condition>
              <instr mname="LessOrEqual" linkedname=".MyPackage.float.LessOrEqual" CodeAddress="19699" CodeSize="36" SrcRow="578">
                <subj>
                  <instr mname="NTC_Temp_Zewn" linkedname=".MyPackage.NTC_Temp_Zewn" CodeAddress="19700" CodeSize="3" SrcRow="578">
                  </instr>
                </subj>
                <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="19705" CodeSize="11" SrcRow="578">
                  <subj>
                    <instr mname="ParamVal" linkedname=".MyPackage.ParamVal" CodeAddress="19706" CodeSize="3" SrcRow="578">
                    </instr>
                  </subj>
                  <constv typename="signed_char" value="27" />
                </instr>
              </instr>
            </condition>
            <then>
              <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="19738" CodeSize="14" SrcRow="579">
                <subj>
                  <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="19738" CodeSize="11" SrcRow="579">
                    <subj>
                      <instr mname="VDOValue" linkedname=".MyPackage.VDOValue" CodeAddress="19739" CodeSize="3" SrcRow="579">
                      </instr>
                    </subj>
                    <constv typename="signed_char" value="17" />
                  </instr>
                </subj>
                <constv typename="signed_char" value="1" />
              </instr>
            </then>
            <else>
              <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="19755" CodeSize="14" SrcRow="582">
                <subj>
                  <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="19755" CodeSize="11" SrcRow="582">
                    <subj>
                      <instr mname="VDOValue" linkedname=".MyPackage.VDOValue" CodeAddress="19756" CodeSize="3" SrcRow="582">
                      </instr>
                    </subj>
                    <constv typename="signed_char" value="17" />
                  </instr>
                </subj>
                <constv typename="signed_char" value="0" />
              </instr>
            </else>
          </if>
          <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="19769" CodeSize="38" SrcRow="588">
            <subj>
              <instr mname="GlobalOn" linkedname=".MyPackage.GlobalOn" CodeAddress="19769" CodeSize="6" SrcRow="588">
              </instr>
            </subj>
            <instr mname="and" linkedname=".MyPackage.signed_char.and" CodeAddress="19775" CodeSize="31" SrcRow="588">
              <subj>
                <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="19776" CodeSize="11" SrcRow="588">
                  <subj>
                    <instr mname="VDIValue" linkedname=".MyPackage.VDIValue" CodeAddress="19777" CodeSize="3" SrcRow="588">
                    </instr>
                  </subj>
                  <constv typename="signed_char" value="1" />
                </instr>
              </subj>
              <instr mname="" CodeAddress="19788" CodeSize="17">
                <instr mname="NotEqual" linkedname=".MyPackage.signed_char.NotEqual" CodeAddress="19788" CodeSize="17" SrcRow="588">
                  <subj>
                    <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="19789" CodeSize="11" SrcRow="588">
                      <subj>
                        <instr mname="ParamVal" linkedname=".MyPackage.ParamVal" CodeAddress="19790" CodeSize="3" SrcRow="588">
                        </instr>
                      </subj>
                      <constv typename="signed_char" value="35" />
                    </instr>
                  </subj>
                  <constv typename="signed_char" value="0" />
                </instr>
              </instr>
            </instr>
          </instr>
          <instr mname="SetStatus" linkedname=".MyPackage.TToggleTimer.SetStatus" CodeAddress="19807" CodeSize="16" SrcRow="589">
            <subj>
              <instr mname="SysOn" linkedname=".MyPackage.SysOn" CodeAddress="19808" CodeSize="3" SrcRow="589">
              </instr>
            </subj>
            <instr mname="GlobalOn" linkedname=".MyPackage.GlobalOn" CodeAddress="19811" CodeSize="6" SrcRow="589">
            </instr>
          </instr>
          <instr mname="SetAlarmCondition" linkedname=".MyPackage.TAlarmsManager.SetAlarmCondition" CodeAddress="19823" CodeSize="35" SrcRow="592">
            <subj>
              <instr mname="AlarmsManager" linkedname=".MyPackage.AlarmsManager" CodeAddress="19823" CodeSize="3" SrcRow="592">
              </instr>
            </subj>
            <constv typename="signed_char" value="0" />
            <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="19828" CodeSize="10" SrcRow="592">
              <subj>
                <instr mname="VDIValue" linkedname=".MyPackage.VDIValue" CodeAddress="19828" CodeSize="3" SrcRow="592">
                </instr>
              </subj>
              <constv typename="signed_char" value="2" />
            </instr>
            <instr mname="ToChar" linkedname=".MyPackage.ToChar" CodeAddress="19839" CodeSize="9" SrcRow="592">
              <instr mname="GetStatus" linkedname=".MyPackage.TToggle.GetStatus" CodeAddress="19839" CodeSize="7" SrcRow="592">
                <subj>
                  <instr mname="SysOn" linkedname=".MyPackage.SysOn" CodeAddress="19840" CodeSize="3" SrcRow="592">
                  </instr>
                </subj>
              </instr>
            </instr>
            <instr mname="ElapsedSec" linkedname=".MyPackage.TTimerSec.ElapsedSec" CodeAddress="19848" CodeSize="7" SrcRow="592">
              <subj>
                <instr mname="tmr" linkedname=".MyPackage.TToggleTimer.tmr" CodeAddress="19849" CodeSize="3" SrcRow="592">
                  <subj>
                    <instr mname="SysOn" linkedname=".MyPackage.SysOn" CodeAddress="19849" CodeSize="3" SrcRow="592">
                    </instr>
                  </subj>
                </instr>
              </subj>
            </instr>
          </instr>
          <instr mname="SetAlarmCondition" linkedname=".MyPackage.TAlarmsManager.SetAlarmCondition" CodeAddress="19858" CodeSize="15" SrcRow="594">
            <subj>
              <instr mname="AlarmsManager" linkedname=".MyPackage.AlarmsManager" CodeAddress="19858" CodeSize="3" SrcRow="594">
              </instr>
            </subj>
            <constv typename="signed_char" value="5" />
            <instr mname="bAL_CzP" linkedname=".MyPackage.bAL_CzP" SrcRow="594">
            </instr>
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
          </instr>
          <instr mname="SetAlarmCondition" linkedname=".MyPackage.TAlarmsManager.SetAlarmCondition" CodeAddress="19873" CodeSize="46" SrcRow="596">
            <subj>
              <instr mname="AlarmsManager" linkedname=".MyPackage.AlarmsManager" CodeAddress="19873" CodeSize="3" SrcRow="596">
              </instr>
            </subj>
            <constv typename="signed_char" value="4" />
            <instr mname="LessThan" linkedname=".MyPackage.float.LessThan" CodeAddress="19882" CodeSize="32" SrcRow="596">
              <subj>
                <instr mname="NTC_Temp_Glik" linkedname=".MyPackage.NTC_Temp_Glik" CodeAddress="19879" CodeSize="3" SrcRow="596">
                </instr>
              </subj>
              <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="19884" CodeSize="11" SrcRow="596">
                <subj>
                  <instr mname="ParamVal" linkedname=".MyPackage.ParamVal" CodeAddress="19885" CodeSize="3" SrcRow="596">
                  </instr>
                </subj>
                <constv typename="signed_char" value="12" />
              </instr>
            </instr>
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
          </instr>
          <instr mname="SetAlarmCondition" linkedname=".MyPackage.TAlarmsManager.SetAlarmCondition" CodeAddress="19919" CodeSize="22" SrcRow="598">
            <subj>
              <instr mname="AlarmsManager" linkedname=".MyPackage.AlarmsManager" CodeAddress="19919" CodeSize="3" SrcRow="598">
              </instr>
            </subj>
            <constv typename="signed_char" value="6" />
            <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="19928" CodeSize="7" SrcRow="598">
              <subj>
                <instr mname="VDIValue" linkedname=".MyPackage.VDIValue" CodeAddress="19925" CodeSize="3" SrcRow="598">
                </instr>
              </subj>
              <constv typename="signed_char" value="3" />
            </instr>
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
          </instr>
          <instr mname="SetAlarmCondition" linkedname=".MyPackage.TAlarmsManager.SetAlarmCondition" CodeAddress="19941" CodeSize="22" SrcRow="600">
            <subj>
              <instr mname="AlarmsManager" linkedname=".MyPackage.AlarmsManager" CodeAddress="19941" CodeSize="3" SrcRow="600">
              </instr>
            </subj>
            <constv typename="signed_char" value="7" />
            <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="19950" CodeSize="7" SrcRow="600">
              <subj>
                <instr mname="VDIValue" linkedname=".MyPackage.VDIValue" CodeAddress="19947" CodeSize="3" SrcRow="600">
                </instr>
              </subj>
              <constv typename="signed_char" value="4" />
            </instr>
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
          </instr>
          <instr mname="SetAlarmCondition" linkedname=".MyPackage.TAlarmsManager.SetAlarmCondition" CodeAddress="19963" CodeSize="22" SrcRow="602">
            <subj>
              <instr mname="AlarmsManager" linkedname=".MyPackage.AlarmsManager" CodeAddress="19963" CodeSize="3" SrcRow="602">
              </instr>
            </subj>
            <constv typename="signed_char" value="8" />
            <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="19972" CodeSize="7" SrcRow="602">
              <subj>
                <instr mname="VDIValue" linkedname=".MyPackage.VDIValue" CodeAddress="19969" CodeSize="3" SrcRow="602">
                </instr>
              </subj>
              <constv typename="signed_char" value="5" />
            </instr>
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
          </instr>
          <instr mname="SetAlarmCondition" linkedname=".MyPackage.TAlarmsManager.SetAlarmCondition" CodeAddress="19985" CodeSize="54" SrcRow="604">
            <subj>
              <instr mname="AlarmsManager" linkedname=".MyPackage.AlarmsManager" CodeAddress="19985" CodeSize="3" SrcRow="604">
              </instr>
            </subj>
            <constv typename="signed_char" value="3" />
            <instr mname="GreaterThan" linkedname=".MyPackage.float.GreaterThan" CodeAddress="19994" CodeSize="40" SrcRow="604">
              <subj>
                <instr mname="NTC_Temp_CWU" linkedname=".MyPackage.NTC_Temp_CWU" CodeAddress="19991" CodeSize="3" SrcRow="604">
                </instr>
              </subj>
              <instr mname="sum" linkedname=".MyPackage.signed_char.sum" CodeAddress="19996" CodeSize="17" SrcRow="604">
                <subj>
                  <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="19997" CodeSize="11" SrcRow="604">
                    <subj>
                      <instr mname="ParamVal" linkedname=".MyPackage.ParamVal" CodeAddress="19998" CodeSize="3" SrcRow="604">
                      </instr>
                    </subj>
                    <constv typename="signed_char" value="4" />
                  </instr>
                </subj>
                <constv typename="signed_char" value="10" />
              </instr>
            </instr>
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
          </instr>
          <instr mname="SetAlarmCondition" linkedname=".MyPackage.TAlarmsManager.SetAlarmCondition" CodeAddress="20039" CodeSize="50" SrcRow="606">
            <subj>
              <instr mname="AlarmsManager" linkedname=".MyPackage.AlarmsManager" CodeAddress="20039" CodeSize="3" SrcRow="606">
              </instr>
            </subj>
            <constv typename="signed_char" value="1" />
            <instr mname="GreaterThan" linkedname=".MyPackage.float.GreaterThan" CodeAddress="20048" CodeSize="36" SrcRow="606">
              <subj>
                <instr mname="NTC_Temp_CO" linkedname=".MyPackage.NTC_Temp_CO" CodeAddress="20045" CodeSize="3" SrcRow="606">
                </instr>
              </subj>
              <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="20050" CodeSize="11" SrcRow="606">
                <subj>
                  <instr mname="ParamVal" linkedname=".MyPackage.ParamVal" CodeAddress="20051" CodeSize="3" SrcRow="606">
                  </instr>
                </subj>
                <constv typename="signed_char" value="22" />
              </instr>
            </instr>
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
          </instr>
          <instr mname="SetAlarmCondition" linkedname=".MyPackage.TAlarmsManager.SetAlarmCondition" CodeAddress="20089" CodeSize="40" SrcRow="608">
            <subj>
              <instr mname="AlarmsManager" linkedname=".MyPackage.AlarmsManager" CodeAddress="20089" CodeSize="3" SrcRow="608">
              </instr>
            </subj>
            <constv typename="signed_char" value="9" />
            <instr mname="GreaterOrEqual" linkedname=".MyPackage.signed_char.GreaterOrEqual" CodeAddress="20098" CodeSize="26" SrcRow="608">
              <subj>
                <instr mname="ElapsedSec" linkedname=".MyPackage.TStoppableTimerSec.ElapsedSec" CodeAddress="20095" CodeSize="7" SrcRow="608">
                  <subj>
                    <instr mname="PasterizationTimeOut" linkedname=".MyPackage.PasterizationTimeOut" CodeAddress="20096" CodeSize="3" SrcRow="608">
                    </instr>
                  </subj>
                </instr>
              </subj>
              <instr mname="mul" linkedname=".MyPackage.signed_char.mul" CodeAddress="20102" CodeSize="17" SrcRow="608">
                <subj>
                  <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="20103" CodeSize="11" SrcRow="608">
                    <subj>
                      <instr mname="ParamVal" linkedname=".MyPackage.ParamVal" CodeAddress="20104" CodeSize="3" SrcRow="608">
                      </instr>
                    </subj>
                    <constv typename="signed_char" value="18" />
                  </instr>
                </subj>
                <constv typename="signed_char" value="60" />
              </instr>
            </instr>
            <constv typename="signed_char" value="0" />
            <constv typename="signed_char" value="0" />
          </instr>
          <if>
            <condition>
              <instr mname="isAlarm" linkedname=".MyPackage.TAlarmsManager.isAlarm" CodeAddress="20129" CodeSize="9" SrcRow="612">
                <subj>
                  <instr mname="AlarmsManager" linkedname=".MyPackage.AlarmsManager" CodeAddress="20130" CodeSize="3" SrcRow="612">
                  </instr>
                </subj>
                <constv typename="signed_char" value="0" />
              </instr>
            </condition>
            <then>
              <instr mname="">
              </instr>
            </then>
          </if>
          <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="20141" CodeSize="17" SrcRow="619">
            <subj>
              <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="20141" CodeSize="11" SrcRow="619">
                <subj>
                  <instr mname="VDOValue" linkedname=".MyPackage.VDOValue" CodeAddress="20142" CodeSize="3" SrcRow="619">
                  </instr>
                </subj>
                <constv typename="signed_char" value="1" />
              </instr>
            </subj>
            <instr mname="ActiveAlarms" linkedname=".MyPackage.TAlarmsManager.ActiveAlarms" CodeAddress="20152" CodeSize="3" SrcRow="619">
              <subj>
                <instr mname="AlarmsManager" linkedname=".MyPackage.AlarmsManager" CodeAddress="20152" CodeSize="3" SrcRow="619">
                </instr>
              </subj>
            </instr>
          </instr>
          <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="20158" CodeSize="17" SrcRow="620">
            <subj>
              <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="20158" CodeSize="11" SrcRow="620">
                <subj>
                  <instr mname="VDOValue" linkedname=".MyPackage.VDOValue" CodeAddress="20159" CodeSize="3" SrcRow="620">
                  </instr>
                </subj>
                <constv typename="signed_char" value="2" />
              </instr>
            </subj>
            <instr mname="ActiveWarnings" linkedname=".MyPackage.TAlarmsManager.ActiveWarnings" CodeAddress="20169" CodeSize="3" SrcRow="620">
              <subj>
                <instr mname="AlarmsManager" linkedname=".MyPackage.AlarmsManager" CodeAddress="20169" CodeSize="3" SrcRow="620">
                </instr>
              </subj>
            </instr>
          </instr>
          <instr mname="SetStatus" linkedname=".MyPackage.THourCounter.SetStatus" CodeAddress="20175" CodeSize="26" SrcRow="622">
            <subj>
              <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="20175" CodeSize="11" SrcRow="622">
                <subj>
                  <instr mname="WHCounters" linkedname=".MyPackage.WHCounters" CodeAddress="20176" CodeSize="3" SrcRow="622">
                  </instr>
                </subj>
                <constv typename="signed_char" value="0" />
              </instr>
            </subj>
            <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="20186" CodeSize="11" SrcRow="622">
              <subj>
                <instr mname="VDOValue" linkedname=".MyPackage.VDOValue" CodeAddress="20187" CodeSize="3" SrcRow="622">
                </instr>
              </subj>
              <constv typename="signed_char" value="3" />
            </instr>
          </instr>
          <instr mname="SetStatus" linkedname=".MyPackage.THourCounter.SetStatus" CodeAddress="20201" CodeSize="26" SrcRow="623">
            <subj>
              <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="20201" CodeSize="11" SrcRow="623">
                <subj>
                  <instr mname="WHCounters" linkedname=".MyPackage.WHCounters" CodeAddress="20202" CodeSize="3" SrcRow="623">
                  </instr>
                </subj>
                <constv typename="signed_char" value="1" />
              </instr>
            </subj>
            <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="20212" CodeSize="11" SrcRow="623">
              <subj>
                <instr mname="VDOValue" linkedname=".MyPackage.VDOValue" CodeAddress="20213" CodeSize="3" SrcRow="623">
                </instr>
              </subj>
              <constv typename="signed_char" value="4" />
            </instr>
          </instr>
          <instr mname="SetStatus" linkedname=".MyPackage.THourCounter.SetStatus" CodeAddress="20227" CodeSize="26" SrcRow="624">
            <subj>
              <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="20227" CodeSize="11" SrcRow="624">
                <subj>
                  <instr mname="WHCounters" linkedname=".MyPackage.WHCounters" CodeAddress="20228" CodeSize="3" SrcRow="624">
                  </instr>
                </subj>
                <constv typename="signed_char" value="2" />
              </instr>
            </subj>
            <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="20238" CodeSize="11" SrcRow="624">
              <subj>
                <instr mname="VDOValue" linkedname=".MyPackage.VDOValue" CodeAddress="20239" CodeSize="3" SrcRow="624">
                </instr>
              </subj>
              <constv typename="signed_char" value="5" />
            </instr>
          </instr>
          <instr mname="SetStatus" linkedname=".MyPackage.THourCounter.SetStatus" CodeAddress="20253" CodeSize="26" SrcRow="625">
            <subj>
              <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="20253" CodeSize="11" SrcRow="625">
                <subj>
                  <instr mname="WHCounters" linkedname=".MyPackage.WHCounters" CodeAddress="20254" CodeSize="3" SrcRow="625">
                  </instr>
                </subj>
                <constv typename="signed_char" value="3" />
              </instr>
            </subj>
            <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="20264" CodeSize="11" SrcRow="625">
              <subj>
                <instr mname="VDOValue" linkedname=".MyPackage.VDOValue" CodeAddress="20265" CodeSize="3" SrcRow="625">
                </instr>
              </subj>
              <constv typename="signed_char" value="6" />
            </instr>
          </instr>
          <instr mname="SetStatus" linkedname=".MyPackage.THourCounter.SetStatus" CodeAddress="20279" CodeSize="26" SrcRow="626">
            <subj>
              <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="20279" CodeSize="11" SrcRow="626">
                <subj>
                  <instr mname="WHCounters" linkedname=".MyPackage.WHCounters" CodeAddress="20280" CodeSize="3" SrcRow="626">
                  </instr>
                </subj>
                <constv typename="signed_char" value="4" />
              </instr>
            </subj>
            <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="20290" CodeSize="11" SrcRow="626">
              <subj>
                <instr mname="VDOValue" linkedname=".MyPackage.VDOValue" CodeAddress="20291" CodeSize="3" SrcRow="626">
                </instr>
              </subj>
              <constv typename="signed_char" value="7" />
            </instr>
          </instr>
          <instr mname="SetStatus" linkedname=".MyPackage.THourCounter.SetStatus" CodeAddress="20305" CodeSize="26" SrcRow="627">
            <subj>
              <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="20305" CodeSize="11" SrcRow="627">
                <subj>
                  <instr mname="WHCounters" linkedname=".MyPackage.WHCounters" CodeAddress="20306" CodeSize="3" SrcRow="627">
                  </instr>
                </subj>
                <constv typename="signed_char" value="5" />
              </instr>
            </subj>
            <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="20316" CodeSize="11" SrcRow="627">
              <subj>
                <instr mname="VDOValue" linkedname=".MyPackage.VDOValue" CodeAddress="20317" CodeSize="3" SrcRow="627">
                </instr>
              </subj>
              <constv typename="signed_char" value="8" />
            </instr>
          </instr>
          <instr mname="SetStatus" linkedname=".MyPackage.THourCounter.SetStatus" CodeAddress="20331" CodeSize="26" SrcRow="628">
            <subj>
              <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="20331" CodeSize="11" SrcRow="628">
                <subj>
                  <instr mname="WHCounters" linkedname=".MyPackage.WHCounters" CodeAddress="20332" CodeSize="3" SrcRow="628">
                  </instr>
                </subj>
                <constv typename="signed_char" value="6" />
              </instr>
            </subj>
            <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="20342" CodeSize="11" SrcRow="628">
              <subj>
                <instr mname="VDOValue" linkedname=".MyPackage.VDOValue" CodeAddress="20343" CodeSize="3" SrcRow="628">
                </instr>
              </subj>
              <constv typename="signed_char" value="9" />
            </instr>
          </instr>
          <instr mname="SetStatus" linkedname=".MyPackage.THourCounter.SetStatus" CodeAddress="20357" CodeSize="26" SrcRow="629">
            <subj>
              <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="20357" CodeSize="11" SrcRow="629">
                <subj>
                  <instr mname="WHCounters" linkedname=".MyPackage.WHCounters" CodeAddress="20358" CodeSize="3" SrcRow="629">
                  </instr>
                </subj>
                <constv typename="signed_char" value="7" />
              </instr>
            </subj>
            <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="20368" CodeSize="11" SrcRow="629">
              <subj>
                <instr mname="VDOValue" linkedname=".MyPackage.VDOValue" CodeAddress="20369" CodeSize="3" SrcRow="629">
                </instr>
              </subj>
              <constv typename="signed_char" value="10" />
            </instr>
          </instr>
          <instr mname="SetStatus" linkedname=".MyPackage.THourCounter.SetStatus" CodeAddress="20383" CodeSize="26" SrcRow="630">
            <subj>
              <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="20383" CodeSize="11" SrcRow="630">
                <subj>
                  <instr mname="WHCounters" linkedname=".MyPackage.WHCounters" CodeAddress="20384" CodeSize="3" SrcRow="630">
                  </instr>
                </subj>
                <constv typename="signed_char" value="8" />
              </instr>
            </subj>
            <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="20394" CodeSize="11" SrcRow="630">
              <subj>
                <instr mname="VDOValue" linkedname=".MyPackage.VDOValue" CodeAddress="20395" CodeSize="3" SrcRow="630">
                </instr>
              </subj>
              <constv typename="signed_char" value="11" />
            </instr>
          </instr>
          <instr mname="SetStatus" linkedname=".MyPackage.THourCounter.SetStatus" CodeAddress="20409" CodeSize="26" SrcRow="631">
            <subj>
              <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="20409" CodeSize="11" SrcRow="631">
                <subj>
                  <instr mname="WHCounters" linkedname=".MyPackage.WHCounters" CodeAddress="20410" CodeSize="3" SrcRow="631">
                  </instr>
                </subj>
                <constv typename="signed_char" value="9" />
              </instr>
            </subj>
            <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="20420" CodeSize="11" SrcRow="631">
              <subj>
                <instr mname="VDOValue" linkedname=".MyPackage.VDOValue" CodeAddress="20421" CodeSize="3" SrcRow="631">
                </instr>
              </subj>
              <constv typename="signed_char" value="12" />
            </instr>
          </instr>
          <if>
            <condition>
              <instr mname="GreaterOrEqual" linkedname=".MyPackage.signed_char.GreaterOrEqual" CodeAddress="20435" CodeSize="19" SrcRow="635">
                <subj>
                  <instr mname="ElapsedSec" linkedname=".MyPackage.TTimerSec.ElapsedSec" CodeAddress="20436" CodeSize="7" SrcRow="635">
                    <subj>
                      <instr mname="SaveWH" linkedname=".MyPackage.SaveWH" CodeAddress="20437" CodeSize="3" SrcRow="635">
                      </instr>
                    </subj>
                  </instr>
                </subj>
                <constv typename="signed_short" value="600" />
              </instr>
            </condition>
            <then>
              <instr mname="" CodeAddress="20457" CodeSize="69">
                <var name="i" address="12" ByteSize="2" CodeAddress="20457" CodeSize="2" SrcFile="main.c" SrcRow="637">
                  <type typename="signed_short">
                  </type>
                </var>
                <instr mname="for" CodeAddress="20459" CodeSize="59">
                  <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="20459" CodeSize="6" SrcRow="638">
                    <subj>
                      <instr mname="i" linkedname=".MyPackage...i" CodeAddress="20459" CodeSize="3" SrcRow="638">
                      </instr>
                    </subj>
                    <constv typename="signed_char" value="0" />
                  </instr>
                  <instr mname="LessOrEqual" linkedname=".MyPackage.signed_char.LessOrEqual" CodeAddress="20506" CodeSize="9" SrcRow="638">
                    <subj>
                      <instr mname="i" linkedname=".MyPackage...i" CodeAddress="20507" CodeSize="3" SrcRow="638">
                      </instr>
                    </subj>
                    <constv typename="signed_char" value="9" />
                  </instr>
                  <instr mname="sum_set" linkedname=".MyPackage.signed_char.sum_set" CodeAddress="20499" CodeSize="7" SrcRow="638">
                    <subj>
                      <instr mname="i" linkedname=".MyPackage...i" CodeAddress="20499" CodeSize="3" SrcRow="638">
                      </instr>
                    </subj>
                    <constv typename="signed_char" value="1" />
                  </instr>
                  <instr mname="" CodeAddress="20468" CodeSize="31">
                    <instr mname="set" linkedname=".MyPackage.signed_char.set" CodeAddress="20468" CodeSize="31" SrcRow="640">
                      <subj>
                        <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="20468" CodeSize="14" SrcRow="640">
                          <subj>
                            <instr mname="CounterValue" linkedname=".MyPackage.CounterValue" CodeAddress="20469" CodeSize="3" SrcRow="640">
                            </instr>
                          </subj>
                          <instr mname="i" linkedname=".MyPackage...i" CodeAddress="20472" CodeSize="3" SrcRow="640">
                          </instr>
                        </instr>
                      </subj>
                      <instr mname="Sec" linkedname=".MyPackage.THourCounter.Sec" CodeAddress="20482" CodeSize="14" SrcRow="640">
                        <subj>
                          <instr mname="geti" linkedname=".MyPackage.Array.geti" CodeAddress="20482" CodeSize="14" SrcRow="640">
                            <subj>
                              <instr mname="WHCounters" linkedname=".MyPackage.WHCounters" CodeAddress="20483" CodeSize="3" SrcRow="640">
                              </instr>
                            </subj>
                            <instr mname="i" linkedname=".MyPackage...i" CodeAddress="20486" CodeSize="3" SrcRow="640">
                            </instr>
                          </instr>
                        </subj>
                      </instr>
                    </instr>
                  </instr>
                </instr>
                <instr mname="Start" linkedname=".MyPackage.TTimerSec.Start" CodeAddress="20518" CodeSize="6" SrcRow="644">
                  <subj>
                    <instr mname="SaveWH" linkedname=".MyPackage.SaveWH" CodeAddress="20518" CodeSize="3" SrcRow="644">
                    </instr>
                  </subj>
                </instr>
              </instr>
            </then>
          </if>
        </instr>
      </code>
    </funct>
  </namespace>
  <define_list>
    <define name="nvmcc_comp_v1">1</define>
    <define name="nvmcc_VendorID">0</define>
    <define name="nvmcc_CompileDate">1542104695</define>
    <define name="included_stdalgo"></define>
    <define name="LIBMINBIOSREQ">DateSerial(2007,2,9)</define>
    <define name="TErrCode">long</define>
    <define name="errOk">0</define>
    <define name="errError">5</define>
    <define name="errBufferFull">errError</define>
    <define name="errInvalidParam">errError</define>
    <define name="ComRxBufferSize">128     /* must be power of 2 */</define>
    <define name="ComTxBufferSize">128     /* must be power of 2 */</define>
    <define name="CanRxBufferSize">128     /* must be power of 2 */</define>
    <define name="CanTxBufferSize">128     /* must be power of 2 */</define>
    <define name="MAX_AINUM">16</define>
    <define name="MAX_AONUM">6</define>
    <define name="MAX_DINUM">22</define>
    <define name="MAX_DONUM">20</define>
    <define name="CANReqTimeout">2000    /* CAN request default timeout */</define>
    <define name="MaxErrors">100       /* maximum errors on e2p, com, flash, ... MINIMUM VALUE IS 1 */</define>
    <define name="comSerFlag_8N1">0x08            /* Flag for serial line: 8 data bit, No parity, 1 stop bit */</define>
    <define name="comSerFlag_8E1">0x0E            /* Flag for serial line: 8 data bit, Even parity, 1 stop bit */</define>
    <define name="comSerFlag_8O1">0x0F            /* Flag for serial line: 8 data bit, Odd parity,  1 stop bit */</define>
    <define name="comSerFlag_8N2">0x0C            /* Flag for serial line: 8 data bit, No parity,   2 stop bit */</define>
    <define name="comSerFlag_7E1">0x01            /* Flag for serial line: 7 data bit, Even parity, 1 stop bit */</define>
    <define name="comSerFlag_7O1">0x03            /* Flag for serial line: 7 data bit, Odd parity,  1 stop bit */</define>
    <define name="TComBaud_1200">1</define>
    <define name="TComBaud_2400">2</define>
    <define name="TComBaud_4800">3</define>
    <define name="TComBaud_9600">4</define>
    <define name="TComBaud_14400">5</define>
    <define name="TComBaud_19200">6</define>
    <define name="TComBaud_28800">7</define>
    <define name="TComBaud_38400">8</define>
    <define name="TComBaud_57600">9</define>
    <define name="TComBaud_115200">10</define>
    <define name="comEvRxChar">1</define>
    <define name="comEvTxBuffEmpty">2</define>
    <define name="comEvError">3</define>
    <define name="comEvOverrun">4</define>
    <define name="comEvTxBuffLow">5</define>
    <define name="comEvRxLine">6</define>
    <define name="comEvRxPacket">7</define>
    <define name="CAN_1000KBPS">0</define>
    <define name="CAN_800KBPS">1</define>
    <define name="CAN_500KBPS">2</define>
    <define name="CAN_250KBPS">3</define>
    <define name="CAN_125KBPS">4</define>
    <define name="CAN_50KBPS">6</define>
    <define name="CAN_20KBPS">7</define>
    <define name="CAN_10KBPS">8</define>
    <define name="CAN_AUTO">9</define>
    <define name="co_canR">1</define>
    <define name="co_canW">2</define>
    <define name="co_canRW">3</define>
    <define name="IO_NAValue">0x00007FFF</define>
    <define name="canOnlyR">0x01</define>
    <define name="canOnlyRW">0x81</define>
    <define name="CanBroadcast">0x00        /* Can destination address, used to send broadcast messages */</define>
    <define name="CanMCXLinkedDev">0x80        /* Can destination address, used to send messages to the device connected through MCXLink */</define>
    <define name="CanNecosServiceMessages">0x2000      /* index to be used to send debug/service messages (0x2000-0x5FFF Manufacturer specific indexes, 0x2000-0x200F Necos reserved) */</define>
    <define name="CanLegacyMessages">0x2000      /* start index to be used to send manufacturer specific service messages (0x2000-0x5FFF Manufacturer specific indexes, 0x5000-0x5FFF Necos reserved) */</define>
    <define name="CanNecosFnRequestVar">0x10        /* request variable from dest */</define>
    <define name="DATA_FRAME">0</define>
    <define name="REMOTE_FRAME">1</define>
    <define name="ioTypeNTC">1</define>
    <define name="ioType0_5V">2</define>
    <define name="ioType4_20mA">3   /* GetAI will return (GetRawAI()-4000)/16 ---&gt;  12000 -&gt; 500 */</define>
    <define name="ioTypePPM">4   /* iParam= 0-1000   0/00 of semiperiod pulse width, value will be pulse position */</define>
    <define name="ioTypePWM">5   /* iParam= 0-60000  microsec width of period (20000 = 50Hz), value will be on percentage / duty cycle */</define>
    <define name="ioTypePT1000">6</define>
    <define name="ioType0_1V">7</define>
    <define name="ioType0_10V">8</define>
    <define name="ioType0_20mA">9</define>
    <define name="ioTypeDIGITAL">10</define>
    <define name="ioTypeDIGIN">10</define>
    <define name="ioTypeFREQ">11  /* value will be frequency in Hz. Duty cycle is 50% */</define>
    <define name="ioTypeCNT">12  /* Impulse counter. Read digital input as a counter. Count 1-&gt;0 transition on inputs. Minimum impulse length is 64ms. */</define>
    <define name="ioTypeRES">13  /* read input as resistance (resistance value, value will be returned in ohm) */</define>
    <define name="ioType0_5V_NOP">14  /* 0-5V special mode */</define>
    <define name="ioTypePTC">15  /* PTC probes */</define>
    <define name="ioTypeSH_PRES">16  /* [mV] Danfoss Superheat sensor: pressure input. */</define>
    <define name="ioTypeSH_TEMP">17  /* [mV] Danfoss Superheat sensor: temperature input. */</define>
    <define name="ioTypePT1000m">18  /* [mOhm] PT1000, but read value is in mOhm for better precision. */</define>
    <define name="ioTypeRATIOM">19  /* [0.00 - 100.00 %] 0-5V ratiometric. */</define>
    <define name="ioTypeDIGOUT">50  /* unsupported (only for compatibility) */</define>
    <define name="ioTypePT1000N">60  /* special PT1000 mode. read PT1000 probe with input configured as NTC. Read value will not have a good precision */</define>
    <define name="ioTypeNI1000">61  /* Ni1000 probe */</define>
    <define name="ioTypeNTC_100K">62  /* NTC 100K probe  */</define>
    <define name="ioTypeNTC_2K">63  /* NTC 2K probe  */</define>
    <define name="ioTypeEXV">64  /* EXV valve for 1v and 2v */</define>
    <define name="FilterMultiply">100      /* should become 100, but value for AIFilter must be changed */</define>
    <define name="SECS_DAY">86400     /* seconds in one day: 24*60*60 */</define>
    <define name="MODBUS_COILS_OFFSET">0</define>
    <define name="modbusR">0x00</define>
    <define name="modbusRW">0x80</define>
    <define name="modbusAutoIndex">-1</define>
    <define name="modbusPackedBits">0x100</define>
    <define name="modbusPackedBits32">0x500</define>
    <define name="modbusArray">0x200</define>
    <define name="Modbus_FnReadCoils">0x01</define>
    <define name="Modbus_FnReadDiscreteInputs">0x02</define>
    <define name="Modbus_FnReadHoldingRegs">0x03</define>
    <define name="Modbus_FnReadInputRegs">0x04</define>
    <define name="Modbus_FnWriteSingleCoil">0x05</define>
    <define name="Modbus_FnWriteSingleReg">0x06</define>
    <define name="Modbus_FnDiagnostic">0x08</define>
    <define name="Modbus_FnWriteMultipleCoils">0x0F</define>
    <define name="Modbus_FnWriteMultipleRegs">0x10</define>
    <define name="Modbus_IllegalFunction">0x01</define>
    <define name="Modbus_IllegalDataAddress">0x02</define>
    <define name="Modbus_IllegalDataValue">0x03</define>
    <define name="Modbus_ValueNotAllowed">0x04</define>
    <define name="Modbus_SlaveDeviceFailure">0x04</define>
    <define name="Ver_MCX15"></define>
    <define name="SELECTED_LANGUAGE">&quot;EN&quot;</define>
    <define name="EN_LANGUAGE"></define>
    <define name="LANGUAGE_EN">2</define>
    <define name="APP_VERSION">&quot;1.1&quot;</define>
    <define name="T7dScheduledAction_MaxActions">15</define>
    <define name="bTurnCO_ID">0</define>
    <define name="Temp_CO_ID">1</define>
    <define name="Temp_CWU_ID">2</define>
    <define name="Temp_Poddasze_ID">3</define>
    <define name="Temp_Pasteryzacji_ID">4</define>
    <define name="Temp_BM_ID">5</define>
    <define name="Temp_Curve_Control_ID">6</define>
    <define name="Weather_Curve_ID">7</define>
    <define name="Taryfa_ID">8</define>
    <define name="taryfacwu_ID">9</define>
    <define name="Hist_CWU_ID">10</define>
    <define name="Hist_CO_ID">11</define>
    <define name="Temp_AFR_ID">12</define>
    <define name="Temp_PW_ID">13</define>
    <define name="Hist_PW_ID">14</define>
    <define name="WypPG1_ID">15</define>
    <define name="Comp_TimeMinON_ID">16</define>
    <define name="Comp_TimeMinOFF_ID">17</define>
    <define name="PasterizationTimeOut_ID">18</define>
    <define name="Pasterization_Time_ID">19</define>
    <define name="Temp_Diff_ID">20</define>
    <define name="Time_Const_ID">21</define>
    <define name="Max_TempCO_ID">22</define>
    <define name="Max_TempCWU_ID">23</define>
    <define name="Temp_PompyObiegoweCO_ID">24</define>
    <define name="bSchedule_override_ID">25</define>
    <define name="Temp_RealBuilding_ID">26</define>
    <define name="temp_zal_szybkiego_went_ID">27</define>
    <define name="moc_inwertera_ID">28</define>
    <define name="Sys_NodeID_ID">29</define>
    <define name="Sys_SerialBaud_ID">30</define>
    <define name="Sys_SerialSet_ID">31</define>
    <define name="Al_Buzz_ID">32</define>
    <define name="Al_Relay_Delay_ID">33</define>
    <define name="Al_Relay_ActInStdby_ID">34</define>
    <define name="Sys_OnOff_ID">35</define>
    <define name="Sys_Default_ID">36</define>
    <define name="Password1_ID">37</define>
    <define name="Password2_ID">38</define>
    <define name="Password3_ID">39</define>
    <define name="bTurnCO">ParamVal[bTurnCO_ID]</define>
    <define name="Temp_CO">ParamVal[Temp_CO_ID]</define>
    <define name="Temp_CWU">ParamVal[Temp_CWU_ID]</define>
    <define name="Temp_Poddasze">ParamVal[Temp_Poddasze_ID]</define>
    <define name="Temp_Pasteryzacji">ParamVal[Temp_Pasteryzacji_ID]</define>
    <define name="Temp_BM">ParamVal[Temp_BM_ID]</define>
    <define name="Temp_Curve_Control">ParamVal[Temp_Curve_Control_ID]</define>
    <define name="Params_Weather_Curve">ParamVal[Weather_Curve_ID]</define>
    <define name="Params_Taryfa">ParamVal[Taryfa_ID]</define>
    <define name="Params_taryfacwu">ParamVal[taryfacwu_ID]</define>
    <define name="Params_Hist_CWU">ParamVal[Hist_CWU_ID]</define>
    <define name="Params_Hist_CO">ParamVal[Hist_CO_ID]</define>
    <define name="Params_Temp_AFR">ParamVal[Temp_AFR_ID]</define>
    <define name="Params_Temp_PW">ParamVal[Temp_PW_ID]</define>
    <define name="Params_Hist_PW">ParamVal[Hist_PW_ID]</define>
    <define name="Params_WypPG1">ParamVal[WypPG1_ID]</define>
    <define name="Params_Comp_TimeMinON">ParamVal[Comp_TimeMinON_ID]</define>
    <define name="Params_Comp_TimeMinOFF">ParamVal[Comp_TimeMinOFF_ID]</define>
    <define name="Params_PasterizationTimeOut">ParamVal[PasterizationTimeOut_ID]</define>
    <define name="Params_Pasterization_Time">ParamVal[Pasterization_Time_ID]</define>
    <define name="Params_Temp_Diff">ParamVal[Temp_Diff_ID]</define>
    <define name="Params_Time_Const">ParamVal[Time_Const_ID]</define>
    <define name="Params_Max_TempCO">ParamVal[Max_TempCO_ID]</define>
    <define name="Params_Max_TempCWU">ParamVal[Max_TempCWU_ID]</define>
    <define name="Params_Temp_PompyObiegoweCO">ParamVal[Temp_PompyObiegoweCO_ID]</define>
    <define name="bSchedule_override">ParamVal[bSchedule_override_ID]</define>
    <define name="Params_Temp_RealBuilding">ParamVal[Temp_RealBuilding_ID]</define>
    <define name="Params_temp_zal_szybkiego_went">ParamVal[temp_zal_szybkiego_went_ID]</define>
    <define name="Params_moc_inwertera">ParamVal[moc_inwertera_ID]</define>
    <define name="Params_Sys_NodeID">ParamVal[Sys_NodeID_ID]</define>
    <define name="Params_Sys_SerialBaud">ParamVal[Sys_SerialBaud_ID]</define>
    <define name="Params_Sys_SerialSet">ParamVal[Sys_SerialSet_ID]</define>
    <define name="Params_Al_Buzz">ParamVal[Al_Buzz_ID]</define>
    <define name="Params_Al_Relay_Delay">ParamVal[Al_Relay_Delay_ID]</define>
    <define name="Params_Al_Relay_ActInStdby">ParamVal[Al_Relay_ActInStdby_ID]</define>
    <define name="Params_Sys_OnOff">ParamVal[Sys_OnOff_ID]</define>
    <define name="Params_Sys_Default">ParamVal[Sys_Default_ID]</define>
    <define name="Params_Password1">ParamVal[Password1_ID]</define>
    <define name="Params_Password2">ParamVal[Password2_ID]</define>
    <define name="Params_Password3">300</define>
    <define name="PARAMS_DESCRLEN">1</define>
    <define name="PARAMS_NUMParams">40</define>
    <define name="AL_Gen_ID">0</define>
    <define name="AL_CZT1_ID">1</define>
    <define name="AL_CZT3_ID">2</define>
    <define name="AL_CZT4_ID">3</define>
    <define name="AL_CZT6_ID">4</define>
    <define name="AL_CZP_ID">5</define>
    <define name="AL_PWN1_ID">6</define>
    <define name="AL_PWN2_ID">7</define>
    <define name="AL_PWN3_ID">8</define>
    <define name="AL_PASTIME_ID">9</define>
    <define name="AL_Gen">AlarmsManager.isAlarm(AL_Gen_ID)</define>
    <define name="AL_CZT1">AlarmsManager.isAlarm(AL_CZT1_ID)</define>
    <define name="AL_CZT3">AlarmsManager.isAlarm(AL_CZT3_ID)</define>
    <define name="AL_CZT4">AlarmsManager.isAlarm(AL_CZT4_ID)</define>
    <define name="AL_CZT6">AlarmsManager.isAlarm(AL_CZT6_ID)</define>
    <define name="AL_CZP">AlarmsManager.isAlarm(AL_CZP_ID)</define>
    <define name="AL_PWN1">AlarmsManager.isAlarm(AL_PWN1_ID)</define>
    <define name="AL_PWN2">AlarmsManager.isAlarm(AL_PWN2_ID)</define>
    <define name="AL_PWN3">AlarmsManager.isAlarm(AL_PWN3_ID)</define>
    <define name="AL_PASTIME">AlarmsManager.isAlarm(AL_PASTIME_ID)</define>
    <define name="ALARM_DESCRLEN">1</define>
    <define name="ALARM_ARRAY_SIZE">10</define>
    <define name="ALARM_BUFFER_SIZE">1</define>
    <define name="IOMNG_AI_NO">0</define>
    <define name="IOMNG_AI_NTC_10K">1</define>
    <define name="IOMNG_AI_0_5V">2</define>
    <define name="IOMNG_AI_0_1V">3</define>
    <define name="IOMNG_AI_0_10V">4</define>
    <define name="IOMNG_AI_0_20mA">5</define>
    <define name="IOMNG_AI_4_20mA">6</define>
    <define name="IOMNG_AI_PT1000">7</define>
    <define name="IOMNG_AI_ONOFF">8</define>
    <define name="IOMNG_AI_NTC_100K">9</define>
    <define name="IOMNG_AI_NI1000TK5">10</define>
    <define name="IOMNG_AI_0_5V_NOP">11</define>
    <define name="IOMNG_AI_NTC_2K">12</define>
    <define name="IOMNG_AO_NO">0</define>
    <define name="IOMNG_AO_0_1V">1</define>
    <define name="IOMNG_AO_0_5V">2</define>
    <define name="IOMNG_AO_0_10V">3</define>
    <define name="IOMNG_AO_PPM">4</define>
    <define name="IOMNG_AO_PWM">5</define>
    <define name="IOMNG_AO_FREQ">6</define>
    <define name="IOMNG_AO_DIGOUT">7</define>
    <define name="IOMNG_AO_EXV">8</define>
    <define name="APPSWDESCR">&quot;ZaTeChS Heat Pump&quot;                 /* application description */</define>
    <define name="APPSWVER">120                       /* application version (2 decimals) */</define>
    <define name="MENU_INACTIVITY_TIMEOUT">20*60   /* inactivity timeout (sec) */</define>
    <define name="PASSWORD_MASK"></define>
    <define name="PASSWORD_3DIGIT"></define>
    <define name="DrawValueCR_SINGLELINE">/* DrawValueCR does not work on multiple lines, but it will be faster    */</define>
    <define name="IOValueBaseIndexCAN">1000</define>
    <define name="PackedAlarmsBaseIndexCAN">1900</define>
    <define name="AlarmsBaseIndexCAN">2000</define>
    <define name="ParamsBaseIndexCAN">3000</define>
    <define name="VIOBaseIndexCAN">4000</define>
    <define name="MyVariablesCAN">5000</define>
    <define name="UIAlarmNotificationID">AlarmsBaseIndexCAN</define>
    <define name="UIAlarmResetID">(AlarmsBaseIndexCAN+1)</define>
    <define name="AlarmsExBaseIndexCAN">&#9;(AlarmsBaseIndexCAN+2)</define>
    <define name="ParamsChangedFlagID">(ParamsBaseIndexCAN-1)</define>
    <define name="VDIBaseIndexCAN">(VIOBaseIndexCAN+0)</define>
    <define name="VDOBaseIndexCAN">(VIOBaseIndexCAN+200)</define>
    <define name="VAIBaseIndexCAN">(VIOBaseIndexCAN+400)</define>
    <define name="VAOBaseIndexCAN">(VIOBaseIndexCAN+600)</define>
    <define name="CountValue">(MyVariablesCAN +1)</define>
    <define name="MySchedules">(MyVariablesCAN+50)</define>
    <define name="Inverter_Power">(MyVariablesCAN+25)</define>
    <define name="ON">1</define>
    <define name="OFF">0</define>
    <define name="CO">0</define>
    <define name="CWU">1</define>
    <define name="true">1</define>
    <define name="false">0</define>
    <define name="LongSchedules">9</define>
    <define name="CAN_WRITE_WAIT_TIME">500</define>
    <define name="FULLALCODE"></define>
    <define name="SUPPORT_PACKED_ALARMS"></define>
    <define name="Params_AL_NextFree_ID">ALARM_ARRAY_SIZE</define>
    <define name="ParamsVal">ParamVal</define>
    <define name="SUPPORT_RTC"></define>
    <define name="EVENT_HISTORY_MAX_EVENTS">20</define>
    <define name="EVENT_HISTORY_SAVE_PARAMS_CHANGE"></define>
    <define name="T7DSCHEDULER_ENHANCED"></define>
    <define name="ARRAY_LENGTH">(sizeof((array))/sizeof((array)[0]))</define>
    <define name="MAXSCHEDULEPOINTS">100</define>
    <define name="FORM_MAIN">0</define>
    <define name="FORM_MENU">0x7000</define>
    <define name="FORM_ROOTMENU">0</define>
    <define name="FORM_DEBUG">0x0070</define>
    <define name="FORM_DEVINFO">0x0071</define>
    <define name="FORM_PARAM">0x0072</define>
    <define name="FORM_LOGIN">0x0073</define>
    <define name="FORM_VMINFO">0x0074</define>
    <define name="FORM_MODBUSMASTER">0x0075</define>
    <define name="FORM_CONFIGDI">0x0078</define>
    <define name="FORM_CONFIGDO">0x0079</define>
    <define name="FORM_CONFIGAI">0x007A</define>
    <define name="FORM_CONFIGAO">0x007B</define>
    <define name="FORM_IOVALUES">0x007C</define>
    <define name="FORM_MENUSINGLE">0x5000</define>
    <define name="FORM_MENUPAR">0x3000</define>
    <define name="MENU_DISPLAY_LINE">8   /* this could be (dsp.Height/dsp.FontH) */</define>
    <define name="MENU_MAX_ITEMS">32      /* 2 bytes each item */</define>
    <define name="MENU_MAX_HISTORY">8</define>
    <define name="MENU_SUBMENU">-500</define>
    <define name="MENU_NEWFORM">-1</define>
    <define name="DSP_CLEARLINE">&quot;                      &quot;</define>
    <define name="TMeasurementUnit_Mask">255</define>
    <define name="MASK_DESCLEN">4</define>
    <define name="MENU_DESCRLEN">21</define>
    <define name="ResetOnlyInactiveAlarms">1</define>
    <define name="TIOVALUE_PRESENT"></define>
    <define name="TEventHistory_InvalidEvent">-1</define>
    <define name="TEventHistory_ClearLogEvent">-2</define>
    <define name="TEventHistory_ChangeTimeEvent">-3</define>
    <define name="TEventHistory_ParChangeEvent">1000</define>
    <define name="TEventHistory_UserEvent">9000</define>
    <define name="EVENT_HISTORY_EXPORT_BASE">3200</define>
    <define name="EVENT_HISTORY_EXPORT_ADD">(EVENT_HISTORY_EXPORT_BASE+2+EVENT_HISTORY_MAX_EVENTS*5)</define>
    <define name="EVENT_HISTORY_SIGNATURE">0x457E153A  /* this is the signature for the alarms log */</define>
    <define name="SchedulerEntries">0x1A01</define>
    <define name="T7dScheduledAction_WDNames">&quot;MoTuWeThFrSaSu&quot;</define>
    <define name="T7dScheduledAction_TimeDiv">600</define>
    <define name="RTCBaseIndexCAN">9000</define>
    <define name="M_PI">3.1415926535</define>
    <define name="Suspend_WakeUpOnPacketCom1">0x0001</define>
    <define name="Suspend_WakeUpOnPacketCom2">0x0002</define>
    <define name="Suspend_WakeUpOnPacketCom3">0x0004</define>
    <define name="Suspend_WakeUpOnCANResponse">0x0010</define>
    <define name="Suspend_WakeUpOnKey">0x0080</define>
    <define name="Suspend_WakeUpAnyEvent">0xFFFF</define>
    <define name="Suspend_UserEvent1">0x0100</define>
    <define name="Suspend_UserEvent2">0x0200</define>
    <define name="Suspend_UserEvent3">0x0300</define>
    <define name="Suspend_UserEvent4">0x0400</define>
    <define name="MODBUSMASTER_LAST_CHAR_RECEIVED">100</define>
    <define name="ModbusM_OK">0</define>
    <define name="ModbusM_Pending">0x20</define>
    <define name="ModbusM_Timeout">0x30</define>
    <define name="ModbusM_OutputBufferOverflow">0x31</define>
    <define name="ModbusM_CRC_Error">0x32</define>
    <define name="DI_Not_Used">VDIValue[0]</define>
    <define name="DI_ON">VDIValue[1]</define>
    <define name="DI_GA">VDIValue[2]</define>
    <define name="DI_PWN1">VDIValue[3]</define>
    <define name="DI_PWN2">VDIValue[4]</define>
    <define name="DI_PWN3">VDIValue[5]</define>
    <define name="DI_CZP">VDIValue[6]</define>
    <define name="DI_HTF">VDIValue[7]</define>
    <define name="DI_PAS">VDIValue[8]</define>
    <define name="DI_Not_Used_ID">0</define>
    <define name="DI_ON_ID">1</define>
    <define name="DI_GA_ID">2</define>
    <define name="DI_PWN1_ID">3</define>
    <define name="DI_PWN2_ID">4</define>
    <define name="DI_PWN3_ID">5</define>
    <define name="DI_CZP_ID">6</define>
    <define name="DI_HTF_ID">7</define>
    <define name="DI_PAS_ID">8</define>
    <define name="NUMBER_DI">22</define>
    <define name="NUMBER_USED_DI">18</define>
    <define name="DI_FUNCTION_NUMBER">9</define>
    <define name="DO_Not_Used">VDOValue[0]</define>
    <define name="DO_AL">VDOValue[1]</define>
    <define name="DO_WR">VDOValue[2]</define>
    <define name="DO_S1">VDOValue[3]</define>
    <define name="DO_S2">VDOValue[4]</define>
    <define name="DO_S3">VDOValue[5]</define>
    <define name="DO_PG1">VDOValue[6]</define>
    <define name="DO_PG2">VDOValue[7]</define>
    <define name="DO_PC1">VDOValue[8]</define>
    <define name="DO_PC2">VDOValue[9]</define>
    <define name="DO_PCOBM">VDOValue[10]</define>
    <define name="DO_PCOBG">VDOValue[11]</define>
    <define name="DO_PCWU">VDOValue[12]</define>
    <define name="DO_GRZ">VDOValue[13]</define>
    <define name="DO_ZE1">VDOValue[14]</define>
    <define name="DO_Z3D1">VDOValue[15]</define>
    <define name="DO_Z3D2">VDOValue[16]</define>
    <define name="DO_WENT">VDOValue[17]</define>
    <define name="DO_Not_Used_ID">0</define>
    <define name="DO_AL_ID">1</define>
    <define name="DO_WR_ID">2</define>
    <define name="DO_S1_ID">3</define>
    <define name="DO_S2_ID">4</define>
    <define name="DO_S3_ID">5</define>
    <define name="DO_PG1_ID">6</define>
    <define name="DO_PG2_ID">7</define>
    <define name="DO_PC1_ID">8</define>
    <define name="DO_PC2_ID">9</define>
    <define name="DO_PCOBM_ID">10</define>
    <define name="DO_PCOBG_ID">11</define>
    <define name="DO_PCWU_ID">12</define>
    <define name="DO_GRZ_ID">13</define>
    <define name="DO_ZE1_ID">14</define>
    <define name="DO_Z3D1_ID">15</define>
    <define name="DO_Z3D2_ID">16</define>
    <define name="DO_WENT_ID">17</define>
    <define name="NUMBER_DO">20</define>
    <define name="NUMBER_USED_DO">15</define>
    <define name="DO_FUNCTION_NUMBER">18</define>
    <define name="AI_Not_Used">VAIValue[0]</define>
    <define name="AI_RT">VAIValue[1]</define>
    <define name="AI_CZT1">VAIValue[2]</define>
    <define name="AI_CZT3">VAIValue[3]</define>
    <define name="AI_CZT4">VAIValue[4]</define>
    <define name="AI_CZT6">VAIValue[5]</define>
    <define name="AI_Not_Used_ID">0</define>
    <define name="AI_RT_ID">1</define>
    <define name="AI_CZT1_ID">2</define>
    <define name="AI_CZT3_ID">3</define>
    <define name="AI_CZT4_ID">4</define>
    <define name="AI_CZT6_ID">5</define>
    <define name="NUMBER_AI">16</define>
    <define name="NUMBER_USED_AI">10</define>
    <define name="AI_FUNCTION_NUMBER">6</define>
    <define name="AO_Not_Used">VAOValue[0]</define>
    <define name="AO_Not_Used_ID">0</define>
    <define name="NUMBER_AO">6</define>
    <define name="NUMBER_USED_AO">6</define>
    <define name="AO_FUNCTION_NUMBER">1</define>
    <define name="MAX_COMPRNUM">8</define>
    <define name="MAX_STAGENUM">8          /* maximum number of stages for stage control */</define>
    <define name="FilterForSetpoint">3</define>
    <define name="ConfParams">CnfParams</define>
  </define_list>
  <modbus_list>
    <exportedvar var="ParamVal[0]" index="3000" writable="1" count="1" type="S16" />
    <exportedvar var="ParamVal[1]" index="3001" writable="1" count="1" type="S16" />
    <exportedvar var="ParamVal[2]" index="3002" writable="1" count="1" type="S16" />
    <exportedvar var="ParamVal[3]" index="3003" writable="1" count="1" type="S16" />
    <exportedvar var="ParamVal[4]" index="3004" writable="1" count="1" type="S16" />
    <exportedvar var="ParamVal[5]" index="3005" writable="1" count="1" type="S16" />
    <exportedvar var="ParamVal[6]" index="3006" writable="1" count="1" type="S16" />
    <exportedvar var="ParamVal[7]" index="3007" writable="1" count="1" type="S16" />
    <exportedvar var="ParamVal[8]" index="3008" writable="1" count="1" type="S16" />
    <exportedvar var="ParamVal[9]" index="3009" writable="1" count="1" type="S16" />
    <exportedvar var="ParamVal[10]" index="3010" writable="1" count="1" type="S16" />
    <exportedvar var="ParamVal[11]" index="3011" writable="1" count="1" type="S16" />
    <exportedvar var="ParamVal[12]" index="3012" writable="1" count="1" type="S16" />
    <exportedvar var="ParamVal[13]" index="3013" writable="1" count="1" type="S16" />
    <exportedvar var="ParamVal[14]" index="3014" writable="1" count="1" type="S16" />
    <exportedvar var="ParamVal[15]" index="3015" writable="1" count="1" type="S16" />
    <exportedvar var="ParamVal[16]" index="3016" writable="1" count="1" type="S16" />
    <exportedvar var="ParamVal[17]" index="3017" writable="1" count="1" type="S16" />
    <exportedvar var="ParamVal[18]" index="3018" writable="1" count="1" type="S16" />
    <exportedvar var="ParamVal[19]" index="3019" writable="1" count="1" type="S16" />
    <exportedvar var="ParamVal[20]" index="3020" writable="1" count="1" type="S16" />
    <exportedvar var="ParamVal[21]" index="3021" writable="1" count="1" type="S16" />
    <exportedvar var="ParamVal[22]" index="3022" writable="1" count="1" type="S16" />
    <exportedvar var="ParamVal[23]" index="3023" writable="1" count="1" type="S16" />
    <exportedvar var="ParamVal[24]" index="3024" writable="1" count="1" type="S16" />
    <exportedvar var="ParamVal[25]" index="3025" writable="1" count="1" type="S16" />
    <exportedvar var="ParamVal[26]" index="3026" writable="1" count="1" type="S16" />
    <exportedvar var="ParamVal[27]" index="3027" writable="1" count="1" type="S16" />
    <exportedvar var="ParamVal[28]" index="3028" writable="1" count="1" type="S16" />
    <exportedvar var="ParamVal[29]" index="3029" writable="1" count="1" type="S16" />
    <exportedvar var="ParamVal[30]" index="3030" writable="1" count="1" type="S16" />
    <exportedvar var="ParamVal[31]" index="3031" writable="1" count="1" type="S16" />
    <exportedvar var="ParamVal[32]" index="3032" writable="1" count="1" type="S16" />
    <exportedvar var="ParamVal[33]" index="3033" writable="1" count="1" type="S16" />
    <exportedvar var="ParamVal[34]" index="3034" writable="1" count="1" type="S16" />
    <exportedvar var="ParamVal[35]" index="3035" writable="1" count="1" type="S16" />
    <exportedvar var="ParamVal[36]" index="3036" writable="1" count="1" type="S16" />
    <exportedvar var="ParamVal[37]" index="3037" writable="1" count="1" type="S16" />
    <exportedvar var="ParamVal[38]" index="3038" writable="1" count="1" type="S16" />
    <exportedvar const="300" index="3039" count="1" type="S16" />
    <exportedvar var="AlarmsManager.AlarmsStatus[0].AlarmActive" index="2002" count="1" type="S8" />
    <exportedvar var="AlarmsManager.AlarmsStatus[1].AlarmActive" index="2003" count="1" type="S8" />
    <exportedvar var="AlarmsManager.AlarmsStatus[2].AlarmActive" index="2004" count="1" type="S8" />
    <exportedvar var="AlarmsManager.AlarmsStatus[3].AlarmActive" index="2005" count="1" type="S8" />
    <exportedvar var="AlarmsManager.AlarmsStatus[4].AlarmActive" index="2006" count="1" type="S8" />
    <exportedvar var="AlarmsManager.AlarmsStatus[5].AlarmActive" index="2007" count="1" type="S8" />
    <exportedvar var="AlarmsManager.AlarmsStatus[6].AlarmActive" index="2008" count="1" type="S8" />
    <exportedvar var="AlarmsManager.AlarmsStatus[7].AlarmActive" index="2009" count="1" type="S8" />
    <exportedvar var="AlarmsManager.AlarmsStatus[8].AlarmActive" index="2010" count="1" type="S8" />
    <exportedvar var="AlarmsManager.AlarmsStatus[9].AlarmActive" index="2011" count="1" type="S8" />
    <exportedvar var="AlarmsManager.AlarmsStatus[0].AlarmStart.Sec" index="2258" count="2" type="S32" />
    <exportedvar var="AlarmsManager.AlarmsStatus[1].AlarmStart.Sec" index="2260" count="2" type="S32" />
    <exportedvar var="AlarmsManager.AlarmsStatus[2].AlarmStart.Sec" index="2262" count="2" type="S32" />
    <exportedvar var="AlarmsManager.AlarmsStatus[3].AlarmStart.Sec" index="2264" count="2" type="S32" />
    <exportedvar var="AlarmsManager.AlarmsStatus[4].AlarmStart.Sec" index="2266" count="2" type="S32" />
    <exportedvar var="AlarmsManager.AlarmsStatus[5].AlarmStart.Sec" index="2268" count="2" type="S32" />
    <exportedvar var="AlarmsManager.AlarmsStatus[6].AlarmStart.Sec" index="2270" count="2" type="S32" />
    <exportedvar var="AlarmsManager.AlarmsStatus[7].AlarmStart.Sec" index="2272" count="2" type="S32" />
    <exportedvar var="AlarmsManager.AlarmsStatus[8].AlarmStart.Sec" index="2274" count="2" type="S32" />
    <exportedvar var="AlarmsManager.AlarmsStatus[9].AlarmStart.Sec" index="2276" count="2" type="S32" />
    <exportedvar var="DIValue" index="1000" count="2" type="S32" />
    <exportedvar var="DOValue" index="1002" count="2" type="S32" />
    <exportedvar var="AIValue" index="1004" count="16" type="S16" />
    <exportedvar var="AOValue" index="1030" count="6" type="S16" />
    <exportedvar const="20" index="3200" count="1" type="S8" />
    <exportedvar var="EventHistoryLog.NextWrite" index="3201" count="1" type="U8" />
    <exportedvar var="EventHistoryLog_EventID" index="3202" count="20" type="S16" />
    <exportedvar var="EventHistoryLog_StartEvent" index="3222" count="40" type="S32" />
    <exportedvar var="EventHistoryLog_EndEvent" index="3262" count="40" type="S32" />
    <exportedvar var="EventHistoryLog_AddEvent" index="3302" writable="1" count="1" type="S16" />
    <exportedvar var="EventHistoryLog_AddEventData" index="3303" writable="1" count="2" type="S32" />
    <exportedvar var="UIResetHistory" index="3199" writable="1" count="1" type="S1" />
    <exportedvar var="ScheduledAction" index="6657" writable="1" count="30" type="S32" />
    <exportedvar var="RTC.Sec" index="9000" count="2" type="S32" />
    <exportedvar var="RTC_NewTime" index="9002" writable="1" count="2" type="S32" />
    <exportedvar var="UIParamsChanged" index="2999" writable="1" count="1" type="S1" />
    <exportedvar var="VDIValue" index="4000" writable="1" count="9" type="S1" />
    <exportedvar var="VDOValue" index="4200" writable="1" count="18" type="S1" />
    <exportedvar var="VAIValue" index="4400" writable="1" count="6" type="S16" />
    <exportedvar var="VAOValue" index="4600" writable="1" count="1" type="S16" />
    <exportedvar var="UIAlarmNotification" index="2000" count="1" type="S8" />
    <exportedvar var="UIAlarmReset" index="2001" writable="1" count="1" type="S8" />
    <exportedvar var="AlarmsManager.PackedAlarmsStatus" index="1900" count="2" type="S32" />
    <exportedvar var="CounterValue" index="5001" writable="1" count="20" type="S32" />
    <exportedvar var="mainSchedulesPoints" index="5050" writable="1" count="200" type="S32" />
    <exportedvar var="Moc_inwertera" index="5025" writable="1" count="1" type="S16" />
  </modbus_list>
  <canopen_list>
  </canopen_list>
</project>
